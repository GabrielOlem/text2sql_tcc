 select count(*) from singer;  select count(*) from singer; -> 104; select count(distinct name),  count(* ) from singer; -> 236; select sum (t1.age),  count (*) from singer as t1 join singer_in_concert as t2<separator> select count(*) from singer;-> 105;- select sum(t2.capacity) from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id; -> 369847;- select avg(t2<separator> select t1.name,  t2.country,  t3.age from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id join concert as t3 on t2.concert_id  =  t3<separator> select name,  country,  age from singer order by age desc;);select t1.name,  t2.country,  t3.age from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id join concert<separator> select avg(t1.age),  min(t2.age), max(t3.age) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id join concert as t3 on t2.<separator> select avg(t1.age),  min(t2.age), max(t3.age) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id join concert as t3 on t2.<separator> select t2.song_name,  t1.song_release_year from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id order by age asc limit 1;
select t2.song_name, <separator> select t1.song_name,  t2.song_release_year from song as t1 join singer as t2 on t1.song_author_id  =  t2.singer_id where is_male  =  't' order by age asc limit 1;-[song_<separator> select country from singer where is_male!= 'f' and age >  20 group by country having count(*)  >=  1;); select t3.name,  t4.city from city as t1 join province as t2 on t1.province_id  =  t2.province_<separator> select country from singer where is_male!= 'f' and age >  20;select t1.country,  count(*) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by t1.country having<separator> select t2.country,  count(*) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by t2.country;- select * from song where name like "%rock%"; select * from song where genre like<separator> select count(*),  country from singer group by country;select t1.count(*),  t2.country from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by t2.country; select name, <separator> select t2.song_name from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where is_male!= 'f' group by t1.singer_id having avg(t2.age) > (<separator> select t2.song_name from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where age > (select avg(t3.age) from singer as t1 join singer_in_concert as t2<separator> select t2.location,  t2.name from stadium as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.capacity between 5000 and 10000; select * from song order by release<separator> select location,  name from station where capacity between 5000 and 10000;
select t2.location,  t2.name from station as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id where t1.cap<separator> select max(capacity),  avg(capacity) from stadium;coalesce((select max(capacity) from stadium),0,"max capacity: ")+" "+coalesce((select avg(capacity) from stadium),0,"avg capacity: ");max(capacity)<separator> select avg(t1.capacity),  max(t2.capacity) from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id; select avg(t1.capacity),max(t2.capacity)<separator> select t2.name,  t1.capacity from stadium as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.avg(capacity)  >  (select avg(capacity) from stadium); select<separator> select t2.name,  t1.capacity from stadium as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id order by t1.avg(capacity) desc limit 1;
select t2.name,  t1<separator> select count(*) from concert where year  =  2014 or year  =  2015; select count(*) from concert where year  =  2014 union select count(*) from concert where year  =  2015; select sum(t3.capacity),  t1.<separator> select count(*) from concert where year  =  2014 or year  =  2015; select count(*) from concert where year  =  2014 union select count(*) from concert where year  =  2015; select sum(t3.capacity),  t1.<separator> select t1.name,  count(*) from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id group by t2.name;);select * from song where title like "%rock%"; select * from song where title like "%pop%";<separator> select count(*) from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id; select * from concert order by year desc limit 5; select name,  theme from concert order by year asc limit 3; select song_title from song where song<separator> select t3.name,  t5.capacity from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id join singer as t3 on t2.singer_id  =  t3.singer_id<separator> select t4.name,  t5.capacity from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id join singer as t3 on t2.singer_id  =  t3.singer_id<separator> select t1.year from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id group by t1.year order by count(*) desc limit 1; except (select max(t3.year) from concert as t1<separator> select max(t1.year) from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id group by t1.year;select max(t1.year) from concert as t1 join singer_in_conert<separator> select name from stadium where stadium_id not in (select distinct t1.stadium_id from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id); select * from song; select count(*),  year from<separator> select name from stadium where stadium_id not in (select t1.stadium_id from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id); select * from stadium; select count(*),  avg<separator> select country from singer as t1 join singer as t2 on t1.singer_id!= t2.singer_id except select distinct country from singer where is_male  =   "true" intersect select distinct country from singer where is_male  =   "false";; select count(*),  avg<separator> select name from stadium where location!= 'home' intersect select t3.stadium_name from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id join stadium as t3 on t2.stadium_id <separator> select name from stadium where year!= 2014; except select t3.name from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id join singer as t3 on t2.singer_id  =<separator> select t1.concert_name,  t2.theme from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id; select count(*),  t3.concert_name from concert as t1 join singer_<separator> select t1.concert_name,  t2.theme,  count(*) from concert as t1 join singer as t2 on t1.concert_id  =  t2.singer_id group by t1.concert_id;select distinct concert_name from concert order by year desc limit<separator> select name,  count(*) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by t1.name; select * from song where title like "%rock%"; select * from song where title like "%pop%";<separator> select t1.name,  count(*) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by name;);select distinct t3.name from song as t1 join singer_in_concert as t2<separator> select name from singer where song_release_year  =  2014;select t3.name from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id join concert as t3 on t2.concert_<separator> select t3.name from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id join singer as t3 on t2.singer_id  =  t3.singer_id where year  =  20<separator> select t1.name,  t2.nation from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t2.title like '%hey%';; select * from song order by title asc limit 5; select count(*) from<separator> select t1.name,  t2.country from singer as t1 join song as t2 on t1.singer_id  =  t2.title where t2.title like '% hey %';; select * from song order by release_date desc limit 5; select count(*) from song group<separator> select t3.name,  t1.location from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id join stadium as t3 on t2.stadium_id  =  t3.stadium_id<separator> select t3.name,  t1.location from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id join singer as t3 on t2.singer_id  =  t3.singer_id where<separator> select count(*) from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t2.capacity  =  (select max(t3.capacity) from stadium as t3); select count(*) from concert; select count(*) from<separator> select count(*) from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t2.capacity  =  (select max(t3.capacity) from stadium as t3); select count(*) from concert; select count(*) from<separator> select count(*) from pets where weight >  10; select count(*) from pets where weight  >  10; coalesce(count(*),0) as t2 from pets where weight  >  10; select sum((select count(*) from pets where weight  >  10)); select<separator> select count(*) from pets where weight >  10; select count(*) from pets where weight  >  10; coalesce(count(*),0) as t2 from pets where weight  >  10; select sum((select count(*) from pets where weight  >  10)); select<separator> select t2.weight from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where t1.pet_age  <=  3;select pet_age,  count(*) from pets group by pet_age order by pet_age asc limit <separator> select weight from pets where pet_age  = (select min(t1.pet_age) from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.petid); select weight from pets where pet_age  =<separator> select max(t2.weight),  t1.pettype from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.pettype;select fname, lname, major, advisor, city_code from<separator> select max(t2.weight),  t1.pettype from pets as t1 join pets as t2 on t1.petid  =  t2.petid group by t1.pettype;select distinct major from student;select advisor from student;select city_code from<separator> select count(*) from has_pet where age > 20; select count(*) from student where age  >  20; select count(*) from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.age  >  20; select<separator> select count(*) from has_pet where stuid > 20; select count(*) from has_pet where stuid > 20; select count(*) from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.age  >  2<separator> select count(*) from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.sex  =  'f' and t1.t2type  =  "dog";select count(*) from has_pet as t1 join student as t2<separator> select count(*) from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where sex  =  'f' and t1.petid in (select petid from pets where pettype  =  "dog");; select count(*) from has_<separator> select count(distinct t1.t2) from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid; select count(*) from pets group by pettype; select count(* ) from pets where sex!='m'; select count (* ) from<separator> select count(distinct t1.t2) from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.t2;select distinct t3 from pets as t1 join has_pet as t2 on t1.pet<separator> select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid in (select distinct petid from pets where pettype like '%cat%' union select distinct petid from pets where pettype like<separator> select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid in (select distinct petid from pets where pettype like 'cat%' union select distinct petid from pets where pettype like<separator> select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid in (select petid from pets where pettype  =  'cat' union select petid from pets where pettype <separator> select fname from student where stuid in (select t1.stuid from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid group by petid having count(*)  >  2); select distinct(t3.fname) from student as t<separator> select t2.major,  t1.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid!= 'cat';select fname, lname from student; select sex from student; select advisor from student; select<separator> select t1.major,  count(*) from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid!= 'cat' group by t1.major;select age from student except select * from student where sex  =  "male<separator> select stuid from has_cat where t1.t2 != "cat";select distinct stuid from has_cat as t1 join student as t2 on t1.stuid  =  t2.stuid except select distinct stuid from has_cat; select count(*),  stuid from has_<separator> select stuid from has_cat where petid!= 1;select distinct t2.stuid from has_cat as t1 join student as t2 on t1.stuid  =  t2.stuid except select distinct t3.stuid from has_dog as t1 join student as t2 on<separator> select t1.fname,  t2.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid in (select distinct petid from pets where pettype  =  'dog'); select fname, <separator> select fname from student where pettype  =  'dog' except select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  "cat"; select distinct t3.t4, <separator> select t1.t2,  t3 from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where age  <  5;select t4.t1,  t2 from pets as t1 join has_pet as t2 on<separator> select t2.t1,  min(t3.weight) from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid join pets as t3 on t1.petid  =  t3.petid group by t1.type<separator> select petid,  weight from pets where pet_age  >  1;select t2.t1 from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid where t1.stuid  =  3; select * from student except select<separator> select t2.petid,  t3.weight from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where t1.pet_age  >  1;select stuid,  lname,  fname,  age,  sex<separator> select avg(t1.pet_age),  max(t2.pet_age) from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.pettype;select avg(t3.pet_age<separator> select avg(t1.pet_age),  max(t2.pet_age) from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.pettype;select avg(t3.pet_age<separator> select avg(t2.weight),  t1.pettype from pets as t1 join pets as t2 on t1.petid  =  t2.petid group by t1.pettype;select avg(t3.weight),  t4.pett<separator> select avg(t2.weight),  t1.pettype from pets as t1 join pets as t2 on t1.petid  =  t2.petid group by t1.pettype;select avg(t3.weight),  t4.pett<separator> select t1.fname,  t2.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid!= 'null';select fname,  age from student; select lname,  fname from student order by<separator> select distinct fname,  age from student where stuid in (select t1.stuid from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid); select distinct fname,  age from student; select count(*) from student group by major; select count<separator> select t1.petid from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid where t2.t1.last_name like'smith'; select stuid, major from student; select advisor from student; select city_code from student<separator> select t1.petid from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid where t2.t3  =  "dog" and t1.sname  =  "smith"; select * from has_pet; select stuid<separator> select count(*),  stuid from has_pet group by stuid;select t1.t2 from has_pet as t1 join students as t2 on t1.stuid  =  t2.stuid where t1.petid is not null; select distinct sex from student; select major from student<separator> select stuid from has_pet group by stuid;select t1.stuid from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid; select count(*) from has_pet where petid in (select distinct petid from pets); select sum(<separator> select t1.fname,  t2.gender from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid having count(*)  >  1;select fname,  sex from student where stuid in (select st<separator> select t1.fname,  t2.gender from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid having count(*)  >  1;select fname,  sex from student where stuid in (select st<separator> select t2.lname from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t1.petid  =  4; select lname from student order by fname asc limit 1; select * from student except select distinct stuid, <separator> select t2.lname from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid where t1.t2type  =  "cat" and t2.pet_age   =  3; select fname, lname from student order by<separator> select avg(t1.age) from student as t1 join has_pet as t2 on t1.stuid !=  t2.stuid; select count(*),  avg(t3.age) from student as t1 join has_pet as t2 on t1.stuid <separator> select avg(t1.age) from student as t1 join has_pet as t2 on t1.stuid!= t2.stuid; select avg(t1.age) from student as t1 where stuid not in (select stuid from has_pet); select avg(t1<separator> select count(*) from continents;-> 7;
select t1.*,  t2.contid from continents as t1 join countries as t2 on t1.contid  =  t2.contid; -> select * from continents order by continent asc; -> select distinct country from countries; -><separator> select count(*) from continents;-> 7;- select distinct continent from continents; -> north america asia europe australasia antarctica south america oceania;- select t1.contient,  t2.contiment from continents as t1 join continents as t2 on t1.<separator> select t1.contid,  t2.continent from continents as t1 join countries as t2 on t1.contid  =  t2.contid group by t1.contid;- select count(*) from countries; select distinct countryid from countries; select * from countries order by countr<separator> select t1.contid,  conti,  count(*) from continents as t1 join countries as t2 on t1.contid  =  t2.contid group by t1.contid;);select distinct(t3.contid) from continents as t1 join countries as t2<separator> select count(*) from countries;-> 10;
select * from t2 join t3 on t2.id  =  t3.t1 where t3.t2  =  1 union all select * from t4 join t5 on t4.id  =  t5.t1 where t<separator> select count(*) from countries;-> 10;
select * from t2 join t3 on t2.id  =  t3.t1 where t3.t2  =  1 union all select * from t4 join t5 on t4.id  =  t5.t1 where t<separator> select t1.fullname,  count(*) from car_makers as t1 join car_names as t2 on t1.id  =  t2.make where make!= "tata" group by t1.fullname; select * from car_makes order by country asc; select * from car<separator> select t1.fullname,  count(*) from car_makers as t1 join car_names as t2 on t1.id  =  t2.make where make!= "tata" group by t1.fullname; select * from car_makes order by country asc; select * from car<separator> select t1.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid group by t1.model order by t1.horsepower asc limit 1; -> "t3" union select make,  min(horsepower) from<separator> select t2.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid order by t1.horsepower asc limit 1; -> model:'sport'; select make,  count(*) from car_names group by make order by count<separator> select t2.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.weight < (select avg(t3.weight) from cars_data as t1 join car_names as t2 on t1.id <separator> select t2.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.weight < (select avg(t3.weight) from cars_data as t1 join car_names as t2 on t1.id <separator> select t2.fullname from car_makers as t1 join cars_data as t2 on t1.id  =  t2.make where t2.year  =  1970;select fullname from car_makers order by country asc limit 5; select * from car_m<separator> select t2.fullname from car_makers as t1 join cars_data as t2 on t1.id  =  t2.make where year  =  1970;select fullname from car_makers order by country asc limit 5; select * from car_makers except select<separator> select t1.make,  min(t2.productiontime) from cars_data as t1 join car_names as t2 on t1.id  =  t2.make where edispl  >  0 group by t1.make;select distinct mpg from cars_data order by mpg<separator> select t1.make,  t2.year from cars_data as t1 join car_names as t2 on t1.makeid  =  t2.make where t2.year  =  (select min(t3.year) from cars_data as t1 join car_names as t<separator> select t2.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id where year  >  1980;select distinct make from car_names;select count(*),  max(t3.year) from cars_data as t<separator> select distinct t2.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where year >=  1980;select distinct t3.model from cars_data as t1 join car_names as t2 on t1.id <separator> select t1.contid,  count(*) from continents as t1 join car_makers as t2 on t1.contid  =  t2.country group by t1.contid;); select distinct country from car_makers; select * from car_makers order by id asc limit <separator> select t1.contn,  count(*) from continents as t1 join car_makers as t2 on t1.contid  =  t2.country group by t1.contn;- select contn,  count(*) from continents order by contn asc; select * from car_m<separator> select t2.contntry from counties as t1 join car_makers as t2 on t1.countryid  =  t2.country; select countryname from countries order by count(*) desc limit 1; select * from car_makes where make!=''; select distinct(t3<separator> select t1.contnme from countires as t1 join car_makers as t2 on t1.contid  =  t2.country;- except, select distinct contnme from countires intersect select distinct countryname from countries; select max(t3.contnme) from count<separator> select t1.make,  count(*) from car_models as t1 join car_makes as t2 on t1.make_id  =  t2.id group by make; union select t3.fullname,  count(*) from car_makers as t1 join car_makes as t<separator> select count(*),  t1.id,  t2.fullname from car_models as t1 join car_makes as t2 on t1.makeid  =  t2.id group by make; union select t3.id,  t4.fullname from car_makers as t<separator> select accelerate from cars_data as t1 join car_names as t2 on t1.make  =  t2.make where t2.model like "%sw%";select accelerate from cars_data as t1 join car_names as t2 on t1.make  =  t2.make<separator> select t2.accelerate from cars_data as t1 join car_names as t2 on t1.make  =  t2.model where make  =  "amc" and model  =  "hornet"; select * from cars_data; select * from car_names; select *<separator> select count(*) from car_makers where country  =  "france";-> 1;- select * from t2 join t3 on t2.id  =  t3.makeid order by make asc limit 5; -> select fullname,  id from car_makers order by fullname asc<separator> select count(*) from car_makers as t1 join cars_data as t2 on t1.id  =  t2.make where country  =  "france";; select distinct make from car_names union select distinct make from cars_data; select * from car_makes order by id asc;<separator> select count(*) from car_makes where country  =  'usa';; select sum(distinct make) from car_names; select distinct t1.model from car_names as t1 join model_list as t2 on t1.model  =  t2.modelid group by t1.model<separator> select count(*) from car_names where make  =  'united states'; select count(*) from car_names; select count(*) from t1 as t2 join t3 on t2.id  =  t3.t1_id group by t3.t1_id having count(*)  >  0<separator> select avg(mpg) from cars_data where cylinders  =  4; select t1.mpg from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid group by t1.mpg having count(*)  =  3;<separator> select avg(mpg) from cars_data where cylinders  =  4;select t1.mpg,  count(*) from cars_data as t1 join model_list as t2 on t1.model  =  t2.modelid group by mpg having count(*)  >  3<separator> select min(t2.weight) from cars_data as t1 join car_names as t2 on t1.id  =  t2.make where year  =  1974 and cylinders  =  8; select * from cars_data order by id limit 1; select * from<separator> select min(t2.weight) from cars_data as t1 join car_names as t2 on t1.id  =  t2.make where edispl  =   "8" and year  =  1974; select * from cars_data order by mpg asc limit 5<separator> select t1.make,  t2.model from car_makers as t1 join car_names as t2 on t1.id  =  t2.make;- select make,  model from car_makes order by make;select distinct(t3.make),  t4.model<separator> select t1.make,  t2.model from car_makers as t1 join car_names as t2 on t1.id  =  t2.make;- select make,  model from car_makes order by make;select distinct(t3.make),  t4.model<separator> select t1.contriy,  t2.country from countires as t1 join car_makers as t2 on t1.contid  =  t2.country;- select countryname from countries group by continent order by continent asc;select distinct country from car_makers;select distinct<separator> select t1.countryname,  t2.id from counties as t1 join car_makers as t2 on t1.contid  =  t2.country;- except select distinct(t3.countryname),  t4.id from counties as t<separator> select count(*) from cars_data where horsepower  >  150; select count(*) from cars_data where horsepower  >  150; coalesce(max(horsepower),  0); select max(horsepower) from cars_data; select t2.horsepower from<separator> select count(*) from cars_data where horsepower >  150; select count(*) from cars_data where horsepower  >  150; -> 26794 select t3.title,  t1.author,  t2.genre from books as t1 join authors as t2<separator> select avg(t1.weight) from cars_data as t1 join car_names as t2 on t1.id  =  t2.make where year  =  2015; select avg(t1.weight) from cars_data as t1 join car_names as t2<separator> select avg(t1.weight),  t2.year from cars_data as t1 join cars_data as t2 on t1.year  =  t2.year group by t2.year;);select count(*) from cars_data where cylinders!= '6'; select make from car<separator> select t1.contid from counties as t1 join car_makers as t2 on t1.contid  =  t2.country where continent  =  "europe" group by t1.contid having count(*)  >=  3;);select * from car_makers order by country<separator> select t1.contnme from countires as t1 join car_makers as t2 on t1.contid  =  t2.country where continent  =  "europe" group by country having count(*)  >=  3;select distinct contnme from countries where continent  =  'e<separator> select max(horsepower),  make from cars_data where cylinders  =  3; select t1.make from car_names as t1 join cars_data as t2 on t1.model  =  t2.model where t2.cylinders  =  3; select<separator> select max(horsepower),  t2.make from cars_data as t1 join car_names as t2 on t1.makeid  =  t2.model where t1.cylinders  =  3; select t2.make from cars_data as t1 join car_<separator> select t1.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid group by t1.model order by sum(t1.mpg) desc limit 1; select make from car_names where mpg  >  30;<separator> select t1.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid order by t1.mpg desc limit 1; -> select t1.model from cars_data as t1 join car_names as t2 on t1.<separator> select avg(horsepower) from cars_data where year < 1980;select avg(horsepower) from cars_data where year < 1980; select avg(horsepower) from cars_data as t2 join model_list as t3 on t2.<separator> select avg(horsepower) from cars_data where year <  1980;select avg(horsepower) from cars_data where year <  1980; select avg(horsepower) from cars_data as t2 join model_list as t3 on t2.<separator> select avg(edispl) from cars_data where make  =  'volvo';; select t1.contid,  count(*) as total from continents as t1 join countries as t2 on t1.contid  =  t2.contid group by t1.contid order by<separator> select avg(edispl) from cars_data where make  =  'volvo';; select t1.contid,  count(*),  sum(t2.edispl)/count(*) from continents as t1 join cars_data as t2 on t1.contid  =  t<separator> select max(accelerate),  count(*) from cars_data group by cylinders;select t1.max_accelerate,  count(*) from cars_data as t1 join cars_data as t2 on t1.cylinders!= t2.cylinders group by<separator> select max(accelerate),  cylinders from cars_data group by cylinders;select t1.max_accelerate,  t2.cylinders from cars_data as t1 join cars_data as t2 on t1.cylinders  =  t<separator> select t1.model from car_names as t1 join model_list as t2 on t1.make  =  t2.model group by t1.model order by count(*) desc limit 1;coalesce (max(t3.model),'');select max(distinct make), <separator> select t1.model from model_list as t1 join car_names as t2 on t1.model  =  t2.model group by t1.model order by count(*) desc limit 1;coalesce(t3.model, 'none');select distinct t4.model from model_list<separator> select count(*) from cars_data where cylinders  >  4; select count(*) from cars_data where cylinders  >  4; coalesce(count(*),0) as total_rows from cars_data where cylinders  >  4; select sum(cylinders), <separator> select count(*) from cars_data where cylinders  >  4; select count(*) from cars_data where cylinders  >  4; coalesce(count(*),0) as total_rows from cars_data where cylinders  >  4; select sum(cylinders), <separator> select count(*) from cars_data where year  =  1980; select count(*) from cars_data; select sum(t2.weight),  t3.year from cars_data as t1 join cars_data as t2 on t1.id  =  t2.id join model_<separator> select count(*) from cars_data where year  =  1980;select count(*) from cars_data where year  =  1980;coalesce(max(t2.cylinders),  max(t3.horsepower)) as cylinder_and_hp from t<separator> select count(*) from car_models as t1 join car_makes as t2 on t1.make  =  t2.id where t2.fullname  =  "american motor company"; select count(*) from car_models; select make,  count(*) from car_makes group by make order<separator> select count(*) from car_names as t1 join car_makers as t2 on t1.make  =  t2.id where t2.maker  =  'american motor company'; select count(*) from car_names; select make,  count(*) from car_makes group by make order by<separator> select t1.fullname,  t2.id from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.fullname having count(*)  >  3;select distinct make from car_names order by make asc limit 5<separator> select t1.fullname,  t2.make from car_makers as t1 join car_names as t2 on t1.id  =  t2.make where count(*)  >  3;select fullname from car_makers group by fullname having count(*)  >=  4;select<separator> select t1.model from car_names as t1 join car_makers as t2 on t1.makeid  =  t2.id where t2.fullname like '%general%' intersect select t1.model from cars_data as t1 join car_makes as t2 on t1.<separator> select distinct t1.model from car_names as t1 join car_makes as t2 on t1.makeid  =  t2.id where t2.company  =  "general motors" intersect select distinct t1.model from cars_data as t1 join car_makes as t<separator> select year from cars_data where weight between 3000 and 4000; select distinct t1.year from cars_data as t1 join cars_data as t2 on t1.id!= t2.id group by t1.year having count(*)  >  5; select max(<separator> select distinct year from cars_data where weight < 4000 intersect select distinct year from cars_data where weight > 3000; select distinct t1.year,  t2.year from cars_data as t1 join cars_data as t2 on t1.id!= t2.id<separator> select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id  =  t2.make where t2.accelerate  =  (select max(t3.accelerate) from cars_data as t3 join car_names as<separator> select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id  =  t2.make where t2.accelerate  =  (select max(t3.accelerate) from cars_data as t3 join car_names as<separator> select count(*) from t1 as c where make  =  'volvo' group by cylinders order by horsepower asc limit 1;select count(*) from cars_data as t1 join car_names as t2 on t1.makeid  =  t2.model where t2.model  =<separator> select count(*) from t1 join t2 on t1.model  =  t2.model where make  =  "volvo" group by t2.model order by t2.accelerate limit 1;coalesce(t3.cylinders,  0) as cylinder from<separator> select count(*) from cars_data where accelerate  > (select max(accelerate) from cars_data); select count(*) from cars_data where accelerate  > (select max(accelerate) from cars_data); select count(*) from cars_data; select t1.title,  t<separator> select count(*) from cars_data where accelerate  > (select max(accelerate) from cars_data); select count(*) from cars_data where accelerate  > (select max(accelerate) from cars_data); select t1.title,  t2.author from book as t1<separator> select count(*) from car_makers group by country having count(distinct make) >= 3;select distinct t1.contid,  t2.contid from continents as t1 join countries as t2 on t1.contid  =  t2.contid where t2.contid!=<separator> select count(*) from car_makers as t1 join car_makes as t2 on t1.id  =  t2.make where t2.num_of_makers >  2; select * from car_makers group by country order by country asc limit 5; select distinct continent, <separator> select count(*) from cars_data where cylinders >  6; select count(*) from cars_data where cylinders  >  6; -> 10; select sum(cylinders) from cars_data group by cylinders having count(*)  >=  5; select sum(cylinders<separator> select count(*) from cars_data where cylinders >  6;select count(*) from cars_data where cylinders  >  6;coalesce(count(*),0) as total from cars_data where cylinders  >  6;select sum(cylinders),  count(*) from<separator> select t1.model from cars_data as t1 join car_names as t2 on t1.makeid  =  t2.model where t1.cylinders  =  4; select max(t3.horsepower) from cars_data as t1 join car_names as t<separator> select t1.model from cars_data as t1 join car_names as t2 on t1.makeid  =  t2.model where t1.cylinders  =  4 group by t1.model order by sum(t1.horsepower) desc limit 1;coales<separator> select t1.make,  t2.make from cars_data as t1 join car_names as t2 on t1.makeid  =  t2.make where t1.horsepower > (select min(t4.horsepower) from cars_data as t1 join car_names<separator> select t1.make,  t2.make from cars_data as t1 join car_names as t2 on t1.makeid  =  t2.make where t1.horsepower <  4; select distinct t3.make from cars_data as t1 join car_names as t<separator> select max(t2.mpg) from cars_data as t1 join car_names as t2 on t1.id  =  t2.make where edispl  >  5 and horsepower  <  300 and year  <=  1979 group by make;select max(<separator> select max(t2.mpg) from cars_data as t1 join car_names as t2 on t1.id  =  t2.make where t1.cylinders  =  8 or t1.year <  1980;select distinct make,  count(*) from car<separator> select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id where weight <  3500 except select t4.model from car_names as t1 join cars_data as t2 on t1.makeid  =<separator> select distinct t2.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.make where weight <  3500 except select distinct t2.model from cars_data as t1 join car_names as t2 on t1.id  =<separator> select distinct t2.contn from counties as t1 join car_makers as t2 on t1.countryid  =  t2.country except select distinct contn from counties; select distinct t3.contn from countries as t1 join car_makers as t2 on t1.country<separator> select t1.contnme from countires as t1 join car_makers as t2 on t1.contid !=  t2.country;- except (select distinct continent from countries); select contnme from countries where countryid not in (select id from car_makers); select * from countries<separator> select t1.id,  t1.maker from car_makers as t1 join car_names as t2 on t1.id  =  t2.make where count(*)  >  3 group by t1.id having count(*)  >=  2; select * from car_makers order by<separator> select t1.id,  t1.maker from car_makers as t1 join car_names as t2 on t1.id  =  t2.make where count(*)  >=  2 group by t1.id having count(*)  >  3;select id,  fullname from car_<separator> select t1.id,  t2.country from car_makers as t1 join countries as t2 on t1.country  =  t2.countryid group by t1.country having count(*)  >  3 intersect select t1.id,  t2.country from car_makes as<separator> select t1.country,  t2.countryname from counties as t1 join car_makers as t2 on t1.countryid  =  t2.country where (select count(*) from car_makes group by country) >  3 intersect select distinct countryname from model<separator> select t2.country from airlines as t1 join airports as t2 on t1.airline  =  t2.airline where t1.airline  =  'jetblue airways';-> country; ----------------------> usa; (0 rows affected) execute sp_executesql ("<separator> select t1.country from airlines as t1 join airports as t2 on t1.uid  =  t2.airportcode where t1.airline  =  'jetblue';-> country: usa;
select * from airlines order by uid asc;-> select * from airports<separator> select t2.abbreviation from airlines as t1 join airports as t2 on t1.airline  =  t2.airline where t1.airline  =  'jetblue airways';-> jetblue;- select * from airports order by country asc;-> select city, <separator> select t2.abbreviation from airlines as t1 join airports as t2 on t1.airline  =  t2.airline where t1.airline  =  'jetblue';-> jetblue; select * from airlines where country  =  "usa"; select * from airports<separator> select t1.airline,  t2.abbreviation from airlines as t1 join airlines as t2 on t1.airline  =  t2.airline where country  =  'usa';; select * from airports order by city asc; select * from flights order by flightno<separator> select t1.airline,  t2.abbreviation from airlines as t1 join country as t2 on t1.country  =  t2.id where t2.country  =  'usa';; select * from airlines order by uid asc; select count(*) from airports group by<separator> select t1.airportcode,  t2.airportname from airports as t1 join cities as t2 on t1.city  =  t2.city where t2.city  =  "anthony"; select * from airports; select * from cities; select count(*) from flights;<separator> select t1.airportcode,  t2.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport where t2.destairport  =  'anthony'; select * from airports; select * from flights<separator> select count(*) from airlines;-> 10;
select t2.airline,  sum(t3.price) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline join tickets as t3 on t1.flightno <separator> select count(*) from airlines;-> 10;
select t2.airline,  sum(t3.price) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline join tickets as t3 on t1.flightno <separator> select count(*) from airports;-> 10;
select t2.aircrafttype,  sum(t3.seats) as total_seat from aircrafts as t1 join flights as t2 on t1.id  =  t2.airplanejoin seats as t3 on t2<separator> select count(*) from airports; select count(*) from airports; -> 10; select * from airports order by country asc; select t2.airportname,  t3.country from airports as t1 join flights as t2 on t1.airportcode  =  t2.source<separator> select count(*) from flights;-> 10564;
select t2.aircrafttype,  sum(t3.seats) as total_seat from flights as t1 join aircrafts as t2 on t1.airplaneid  =  t2.aircrafttype group by<separator> select count(*) from flights;-> 1065;
select t2.aircrafttype,  sum(t3.seats) as total_seat from flights as t1 join aircrafts as t2 on t1.airplaneid  =  t2.aircrafttype group by t<separator> select t1.airline from airlines as t1 join airports as t2 on t1.uid  =  t2.airline where t2.abbreviation  =  "ual";; select * from airlines except select distinct uid, airline from airlines; select count(*) from airports<separator> select t1.airline from airlines as t1 join airports as t2 on t1.uid  =  t2.airline where t2.abbreviation  =  "ual"; select * from airlines where country  =  "usa" order by uid; select * from airports where<separator> select count(*) from airlines where country  =  'usa';; select t1.airline,  count(*) from airlines as t1 join flights as t2 on t1.id  =  t2.airline group by t1.airline having count(*)  >  3; select * from<separator> select count(*) from airlines where country  =  'usa';; select t1.airline,  count(*) from airlines as t1 join flights as t2 on t1.airline  =  t2.airline group by t1.airline having count(*)  >  3; select *<separator> select t1.city,  t2.country from airports as t1 join countries as t2 on t1.country  =  t2.countryabrev where t1.airportcode  =  'alton'; select * from cities; select * from countries; select * from airports; select *<separator> select t1.city,  t2.country from airports as t1 join countries as t2 on t1.country  =  t2.country; select * from cities where name like "%alton%"; select * from countries where abbrv like "%alton%"; select * from airports except select<separator> select t2.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport where t1.airportcode  =  "ako";-> airportname: ak;- select * from airports except select distinct country,  city<separator> select t1.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport where t2.flightno  =  3; select * from airports where countryabbrev  =  "usa"; select * from airports<separator> select t2.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport where t1.city  =  "aberdeen"; select * from airports where countryabbrev  =  "uk" except select * from<separator> select t2.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport where country  = 'scotland' intersect select distinct t3.airportname from airports as t1 join flights as t2 on t<separator> select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  "apg"; select count(*) from flights; select flightno, sourceairport, destairport from flights group by<separator> select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  "apg"; select * from flights; select * from airports; select * from airlines; select country,  countryabre<separator> select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where countryabbrev  =  'ato';; select * from airports order by city asc; select * from flights order by flightno desc; select * from air<separator> select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode; -> 3064;select flightno, sourceairport, destairport from flights order by flightno asc limit 5; -> flightno, sourceair<separator> select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  "Aberdeen";; select * from flights order by flightno asc limit 5; select sourceairport, destairport<separator> select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  'Aberdeen';; select * from flights order by flightno asc limit 5; select sourceairport, destairport<separator> select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.city  =  'Aberdeen';; select * from flights order by flightno asc limit 5; select sourceairport, destairport<separator> select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.city  =  'Aberdeen';; select * from flights order by flightno asc limit 5; select sourceairport, destairport<separator> select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.city  =  "aberdeen" intersect select count(*) from flights as t1 join airports as t2 on t1.destairport <separator> select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  'ashley' intersect select count(*) from flights as t1 join airports as t2 on t1.destinationairport  =<separator> select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.airline  =  "jetblue airways"; select count(*) from flights; select count(distinct flightno) from flights; select sum(distance)<separator> select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.airline  =  'jetblue';; select flightno, sourceairport, destairport from flights group by flightno order by flightno asc; select<separator> select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.airline  =  "united" intersect select count(*) from flights as t1 join airports as t2 on t1.sourceairport  = <separator> select count(*) from flights where destairport  =  'asy' intersect select t1.count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.uid group by sourceairport having count(*) >  0; select * from flights except select flight<separator> select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.airline  =  "united" intersect select count(*) from flights as t1 join airports as t2 on t1.sourceairport  = <separator> select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  "ahd"; select count(*) from flights; select count(distinct sourceairport),  destairport from fl<separator> select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  "aberdeen"; select count(*) from flights; select count(distinct sourceairport),  destairport from flights<separator> select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where destairport  =  'ABZ' intersect select count(*) from flights;-[select count(*) from flights as t1 join airlines as t2 on t1<separator> select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.city order by count(*) desc limit 1;-- -------------------------- select city from airports where country!= 'usa' union select city from<separator> select t2.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.city order by count(*) desc limit 1;-- -------------------------- select * from airports where countryabbrev  =  'usa<separator> select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport group by t1.city order by count(*) desc limit 1;-- -------------------------- select * from airports where countryabbrev!= 'usa'; select<separator> select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport group by t1.city order by count(*) desc limit 1;); select * from airports where countryabbrev!= 'usa'; select * from airports<separator> select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.airportcode order by count(*) desc limit 1;) select * from airports where countryabbrev!= 'usa'; select<separator> select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.airportcode order by count(*) desc limit 1;->  airportcode,  countryabbrev from airports group by<separator> select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.airportcode order by count(*) asc limit 1;-[email protected]:~/sql/test$ select * from airports where<separator> select min(t1.airportcode) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode group by destairport; select * from airports order by flightno desc limit 1; select count(*),  sourceairport from fl<separator> select t1.airline from flights as t1 join airlines as t2 on t1.airline  =  t2.airline group by t1.airline order by count(*) desc limit 1;); select * from airlines where country!= 'usa'; select * from airports where country!=<separator> select t1.airline from flights as t1 join airlines as t2 on t1.airline  =  t2.airline group by t1.airline order by count(*) desc limit 1;); select * from airlines where country!= 'usa'; select * from airports where country!=<separator> select t1.abbreviation,  t2.country from airlines as t1 join flights as t2 on t1.airline  =  t2.airline group by t1.airline order by count(*) asc limit 1;);
select * from airports where countryabbrev!=<separator> select t1.abbreviation,  t2.country from airlines as t1 join flights as t2 on t1.airline  =  t2.airline group by t1.airline order by count(*) asc limit 1;-> select t1.abbreviation,  t2.<separator> select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where destairport  =  "ahd"; select * from flights; select * from airlines; select * from airports; select count(*),  sourceairport<separator> select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.sourceairport!= 'ahd';; select * from airlines except select distinct uid, airline from flights; select count(*) from flights group<separator> select t1.airline from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where destairport  =  "ahd";; select * from airlines order by country asc; select * from airports order by city asc; select * from fl<separator> select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where destairport!= 'ahd';select * from airlines;select * from flights;select * from airports;create table if not exists cities ( city, country<separator> select t1.airline from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where sourceairport  =  "apg" intersect select t1.airline from flights as t1 join airlines as t2 on t1.airline<separator> select t1.airline from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  'apg' intersect select t1.airline from flights as t1 join airports as t2 on<separator> select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where sourceairport  =  "cvo" except select t3.airline from airlines as t3 join flights as t4 on t3.uid  =<separator> select t1.airline from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname!= 'cvo' except select distinct t3.airline from flights as t4 join airports as t5 on t<separator> select t2.airline from flights as t1 join airlines as t2 on t1.airline  =  t2.airline group by t2.airline having count(*)  >=  10;);
select *,  avg(price) from hotels where rating > 3 order<separator> select t2.airline from flights as t1 join airlines as t2 on t1.airline  =  t2.airline group by t2.airline having count(*)  >=  10;);
select *,  avg(price) from hotels where rating > 3 order<separator> select t1.airline from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where count(*)  <  200; select * from airlines order by uid desc limit 5; select * from airports order by city asc limit 3<separator> select t1.airline from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where count(*)  <  200; select * from airlines order by uid desc limit 5; select country,  countryabreviate from countries union<separator> select distinct t1.flightno from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.airline  =  'united airlines';; select count(*),  sourceairport from flights group by destairport order by<separator> select t1.flightno from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.airline  =  'united';; select distinct sourceairport, destairport from flights group by sourceairport, destairport<separator> select distinct t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  'apg'; select count(*) from flights; select max(t3.flightno),<separator> select distinct t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  'apg';select count(*),  sourceairport from flights group by sourceairport; select * from<separator> select t1.flightno from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportname  =  'apg'; select count(*) from flights; select max(t3.flightno), <separator> select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  "apg";select distinct sourceairport, destairport from flights; select count(*) from flights<separator> select distinct t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  'aberdeen';; select count(*),  sourceairport from flights group by sourceairport order by<separator> select distinct t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  "Aberdeen";; select count(*),  sourceairport from flights group by sourceairport order<separator> select t1.flightno from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.city  =  'aberdeen';; select count(*),  sourceairport from flights group by sourceairport order by count<separator> select t1.flightno from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.city  =  "Aberdeen";; select count(*),  sourceairport from flights group by sourceairport order by<separator> select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.city  =  'abilene' intersect select count(*) from flights as t1 join airports as t2 on t1.destairport  =<separator> select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname like '%aberdeen%' or t2.airportname like '%abilene%';; select count(*) from flights as t1 join<separator> select t1.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport where t2.destairport is null; select distinct t3.airportname from airports as t1 join flights as t2 on t1<separator> select t1.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport union all select t3.airportname from airports as t3 join flights as t4 on t3.airportcode  =  t4<separator> select count(*) from employee;select count(*) from employee; 106); select sum(t2.bonus) from evaluation as t1 join hiring as t2 on t1.employee_id  =  t2.employee_id group by t1.employee_id; select sum(t2.<separator> select count(*) from employee;select count(*) from employee; 106);select sum(t2.bonus) from evaluation as t1 join hiring as t2 on t1.employee_id  =  t2.employee_id group by t1.employee_id;sum(t2.bon<separator> select name from employee order by age;select t1.name,  t2.name from employee as t1 join employee as t2 on t1.employee_id!= t2.employee_id order by t1.age desc limit 5; select * from employee where city like '%new%'; select count(*)<separator> select name from employee order by age; select t1.name,  t2.name from employee as t1 join shop as t2 on t1.shop_id  =  t2.shop_id order by t1.age; select distinct t3.name from employee as t1 join shop as t2<separator> select count(*),  city from employee group by city;select sum(t1.total) as total from t2 join t3 on t2.employee_id  =  t3.employee_id where t3.gender  =   'f'; select max(t4.salary) from employee as t<separator> select count(*),  city from employee group by city;select t1.name,  sum(t2.total) as total from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t1.name;select name,  avg(<separator> select city from employee where age <  30 group by city having count(*)  >  1;select name, location from shop order by number_products desc limit 5;select t2.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_<separator> select city from employee where age <  30 group by city having count(*)  >  1;select name, district from shop order by number_products desc limit 5;select t2.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_<separator> select count(*),  district from shop group by district;select t1.name,  t2.district from shop as t1 join shop as t2 on t1.district  =  t2.district; select name from shop where manager_name!= ''; select * from shop order by district asc limit<separator> select count(*),  district from shop group by district;select t1.district,  count(*) from shop as t1 join shop as t2 on t1.district!= t2.district group by t1.district; select distinct name from shop order by number_products desc limit 5; select<separator> select t2.manager_name,  t1.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;select * from shop where number_products  ><separator> select t2.manager_name,  t1.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;select * from shop where number_products  ><separator> select min(t2.number_products),  max(t1.number_products) from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id; select * from shop order by district asc limit 5; select name,  location from shop<separator> select min(t2.number_products),  max(t1.number_products) from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id; select * from shop order by district asc limit 5; select name,  location from shop<separator> select t2.name,  t1.location,  t1.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc;select * from shop where number_products <separator> select t2.name,  t1.location,  t1.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id order by t1.number_products desc; select * from shop where manager_name!=''; select *<separator> select name from shop where number_products  >  (select avg(t2.number_products) from shop as t1 join shop as t2 on t1.shop_id!= t2.shop_id); select manager_name from shop; select * from employee except select employee_id,  name from<separator> select name from shop where number_products  >  (select avg(t2.number_products) from shop as t1 join shop as t2 on t1.shop_id!= t2.shop_id); select manager_name from shop; select * from employee except select employee_id,  city from<separator> select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t2.employee_id order by count(*) desc limit 1;) select manager_name from shop where district!= 'none'; select * from shop except (select<separator> select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t2.employee_id order by count(*) desc limit 1; -> "john"; select * from employee where age > (select max(age) from employee<separator> select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id order by t2.one_time_bonus desc limit 1;) select max(t3.one_time_bonus),  t4.name from<separator> select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id order by bonus desc limit 1;) select * from employee where age > (select max(age) from employee); select * from employee except select * from employee where city!=<separator> select name from employee where employee_id not in (select t1.employee_id from evaluation as t1 join employee as t2 on t1.employee_id  =  t2.employee_id); select * from employee; select * from evaluation; select count(*),  year_awarded from evaluation group<separator> select name from employee where employee_id not in (select employee_id from evaluation); select t1.name,  t2.name from employee as t1 join employee as t2 on t1.employee_id!= t2.employee_id; select * from employee except select distinct * from employee; select count(*)<separator> select t2.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;coalesce(t3.name, 'no manager');select coalesce(t<separator> select t2.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;select manager_name from shop where district!= "none";select city,  age from employee<separator> select t2.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id where t2.employee_id is null; select manager_name from shop order by district asc limit 5; select * from shop except select distinct * from shop; select<separator> select name from shop where is_full_time!= 1; select t2.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id except select t3.name from shop as t1 join hiring as t2 on t1.shop<separator> select count(*),  t2.name from hiring as t1 join shop as t2 on t1.shop_id  =  t2.shop_id group by t2.name; select * from shop order by location asc; select * from employee where age >  30; select * from employee except<separator> select count(*),  t2.name from hiring as t1 join shop as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id; select * from shop order by location; select manager_name from shop where district!= 'none'; select city from<separator> select sum(bonus) from evaluation;select count(*),  year_awarded from evaluation group by year_awarded order by year_awarded asc limit 1; select max(bonus) from evaluation; select min(bonus) from evaluation; select avg(bonus) from evaluation;<separator> select sum(bonus) from evaluation;select count(*),  year_awarded from evaluation group by year_awarded order by year_awarded asc limit 1; select max(t2.title) as title,  t3.year_awarded from evaluation as t1 join shop as<separator> select * from hiring;-> select t1.*,  t2.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id order by start_from asc;select name from shop where district!= 'none';select manager_name from shop where<separator> select * from hiring;-> select t1.*,  t2.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id order by start_from asc;-> select name,  district from shop group by district;-> select manager_name<separator> select t2.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id where number_products <  3000 intersect select t2.district from shop as t1 join hiring as t2 on t1.shop_id<separator> select district from shop where number_products < 3000 intersect select district from shop where number_products > 10000; select distinct t2.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id except select distinct<separator> select count(distinct location) from shop;select distinct location from shop;coalesce (count(*), 0 ) as total_employees from employee;select sum(t1.total_salary) from employee as t1 join evaluation as t2 on t1.employee_id  =  t2<separator> select count(distinct location) from shop;select name,  district from shop group by district order by district asc; select t1.name,  t2.district from shop as t1 join shop as t2 on t1.shop_id!= t2.shop_id; select manager_name from shop<separator> select count(*) from documents; select count(*) from documents; coalesce(count(*),0) as total_docs  from documents; select sum(t1.total_pages ),  t2.total_docs from document_paraphrases as t1 join documents as t2 on t1.document_<separator> select count(*) from documents; select count(*) from documents; -> 10; select count(*) from document_comments as t2 join documents as t1 on t2.document_comment_id  =  t1.document_id; select count(*) from document_comments; select count(*) from document_tags as t<separator> select t1.document_id,  t2.document_name,  t3.document_description from documents as t1 join documents as t2 on t1.document_id  =  t2.document_id join documents as t3 on t1.document_id  =  t3.document<separator> select document_id,  document_name,  document_description from documents; select template_id,  date_effective_from,  date_effective_to,  template_details from templates; select * from ref_template_types order by template_type_description asc; select t1.*, <separator> select t1.document_name,  t2.template_id from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id where t1.document_description like '% w %';select * from documents except select distinct document_title from documents; select count<separator> select document_title,  document_id from documents where document_description like '%w%';select t1.document_title,  t2.document_id from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id; select * from documents except select<separator> select t1.document_id,  t2.template_id,  t3.document_description from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id join documents as t4 on t1.document_id  =  t4.document<separator> select t1.document_id,  t2.template_id,  t3.document_description from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id join documents as t4 on t1.document_id  =  t4.document<separator> select count(distinct template_id) from documents; select distinct t1.template_id from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t1.template_id; select count(*),  distinct t1.template_id from<separator> select count(distinct template_type_code) from documents; select distinct t1.template_type_code,  count(*) from document_details as t1 join documents as t2 on t1.document_id  =  t2.document_id group by t1.template_type_code; select<separator> select count(*) from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_type_code where t2.template_type_code  =  "ppt"; select * from document_comments; select * from document_tags; select * from<separator> select count(*) from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id where t2.template_type_code  =  'ppt'; select * from document_comments; select * from document_tags; select * from document_<separator> select t1.template_id,  count(*) from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t1.template_id;); select document_id,  template_id from documents order by document_id asc limit 5;<separator> select distinct document_id,  count(*) from documents group by document_id;select t1.template_id,  count(*) from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t1.template_id; select * from documents order<separator> select t1.template_id,  t2.template_type_code from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t1.template_id order by count(*) desc limit 1;); select * from document_versions where<separator> select t1.template_id,  t2.template_type_code from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t2.template_type_code order by count(*) desc limit 1;
\end{code}<separator> select template_id from documents group by template_id having count(*)  >  1;select t2.template_id from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t1.template_id having count(*)  >  1;<separator> select distinct t1.template_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.template_id having count(*)  >  1;select * from documents where document_title like "%test%";select * from documents<separator> select template_id from documents except select t1.template_id from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id; select * from templates where template_id not in (select distinct template_id from documents); select count(*),  version_number<separator> select distinct template_id from documents except select t1.template_id from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id; select * from documents where document_title!= "test"; select count(*),  document_id from documents group by document_<separator> select count(*) from templates;-> 10;
select document_title,  document_desc from documents order by date_created desc limit 5; -> document title   :  "how to make an apple pie"; document description : "this is my first recipe for making an apple pie."; document_id <separator> select count(*) from templates; 1065423798; select * from templates order by template_id asc limit 1; document_title:,  document_description:,  date_effective_from:,  date_effective_to:,  version_number:, <separator> select t1.template_id,  t2.version_number,  t3.template_type_code from templates as t1 join document_templates as t2 on t1.template_id  =  t2.template_id join ref_template_types as t3 on t3.template_<separator> select t1.template_id,  t2.version_number,  t3.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code; unnest(distinct document_id<separator> select count(distinct t1.template_type_code),  * from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code; select distinct template_type_code from templates; select distinct document_title from<separator> select distinct t2.template_type_code from document_templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code; select count(*),  * from documents where date_effective_from between '09/3<separator> select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_code  =  'pp' union all select t1.template_id from templates as<separator> select template_id from templates where template_type_code  =  'pp' union select template_id from templates where template_type_code  =  'ppt';) select document_id,  count(*) from documents group by document_id; select t1.document_title,  t2.document<separator> select count(*) from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_code  =  'cv';
\end{code}<separator> select count(*) from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where template_type_description like '%cv%';select * from templates;select document_title,  date_created from documents order by date_<separator> select t1.version_number,  t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where date_effective_to > '2019-06-<separator> select t1.version_number,  t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t1.version_number >  5; select * from templates order by<separator> select count(*),  t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code group by t2.template_type_code; select * from templates order by date_effective<separator> select count(*),  distinct t1.template_type_code from templates as t1 join document_templates as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code; select * from templates order by version_number desc limit<separator> select t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code group by t2.template_type_code order by count(*) desc limit 1;
select * from document_<separator> select t2.template_type_code from document_templates as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t1.template_id order by count(*) desc limit 1;
select * from templates where date_effective_from <= '<separator> select distinct t1.template_type_code from templates as t1 join document_templates as t2 on t1.template_id  =  t2.template_id group by t1.template_type_code having count(*)  <  3;); select * from templates where date_effective_from<separator> select distinct t2.template_type_code from document_templates as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t2.template_type_code having count(*)  <  3;); select * from templates where date_effective_from<separator> select min(t1.version_number),  t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code group by t2.template_type_code order by t1<separator> select min(t1.version_number),  t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code group by t2.template_type_code order by t1<separator> select t2.template_type_code from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id where t1.document_name  =  'data base';-> select * from templates except select version_number; select date_effect<separator> select t2.template_type_code from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id where t1.document_name  =  "data base"; select * from templates; select * from documents; select * from paragraphs<separator> select t1.document_name from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id where t2.template_type_code  =  'bk';; select distinct document_name from documents order by document_name asc limit 5; select<separator> select document_name from documents where template_id  =  (select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_code  =  '<separator> select count(*),  t2.template_type_code from document_templates as t1 join documents as t2 on t1.template_id  =  t2.template_id group by t2.template_type_code; select * from templates order by date_effective_from asc limit 5<separator> select count(*),  distinct t2.template_type_code from document_t as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t2.template_type_code; select * from templates order by date_effective_from asc limit <separator> select t2.template_type_code from document_templates as t1 join documents as t2 on t1.template_id  =  t2.template_id group by t1.template_type_code order by count(*) desc limit 1;select * from document_templates where date_effective_<separator> select t2.template_type_code from document_details as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t1.template_id order by count(*) desc limit 1;
select * from templates where date_effective_from <= '<separator> select distinct t2.template_type_code from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_type_code where t1.template_id!= (select max(t1.template_id) from documents); select * from ref<separator> select distinct t2.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_code!= 'none';
select distinct t2.template_type_code<separator> select t1.template_type_code,  t2.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code;);select * from document_comments where document_comment_id in<separator> select t1.template_type_code,  t2.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code;); select * from document_comments where document_comment_id in<separator> select t2.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_code  =  'ad';
template_type_description;
---- -<separator> select t2.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_code  =  'ad';; select * from document_comments except select distinct<separator> select t2.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_description like "%book%";select * from document_categories except select distinct document_<separator> select t2.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_description  =  'book';; select * from document_comments except select distinct<separator> select distinct t2.template_type_description from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_type_code;-[documents, ref_template_types ]select * from documents except select * from documents where date_effective<separator> select distinct template_type_description from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_type_code;-[documents, ref_template_types ]select * from documents except select * from documents where date_effective_from <=<separator> select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_description  =  'presentation';) select document_title,  document_desc from documents<separator> select template_id from templates where template_type_description  =  "presentation"; select document_id,  * from documents; select t1.document_title,  t2.document_name from documents as t1 join documents as t2 on t1.document_id  =  t2.document_<separator> select count(*) from paragraphs; -> 105642379; select * from document_versions where version_number!= 'null'; select template_details,  date_effective_from,  date_effective_to from templates order by date_effective_from asc limit 1;<separator> select count(*) from paragraphs; 1065423798; select * from document_versions as t1 join documents as t2 on t1.document_id  =  t2.document_id where date_effective_from between '2019-01-01<separator> select count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "summer show"; select count(*) from documents; select count(*) from paragraphs; select * from documents order by template_id asc<separator> select count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "summer show"; select * from documents; select * from paragraphs; select template_type_code,  template_type_<separator> select * from paragraphs where paragraph_text  =  "korea ";select t1.*,  t2.paragraph_text from document_details as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.title  =  "k<separator> select t2.template_details from document_paraphrases as t1 join documents as t2 on t1.document_id  =  t2.document_id where t1.paragraph_text like '% korea %'; select template_details from templates; select * from document_paraphrases<separator> select t1.paragraph_id,  t2.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "welcome to ny"; select * from documents order by date_created desc<separator> select t1.paragraph_id,  t2.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "welcome to ny";; select * from documents order by date_created<separator> select t2.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.title like "%customer reviews%";select * from documents where title like '%customer reviews%' limit 5; select * from documents order by date_<separator> select t2.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "customer reviews"; select * from documents where document_name  =  "customer reviews" except select * from documents<separator> select t1.document_id,  count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id; select * from documents order by document_id asc; select * from paragraphs order by document_id<separator> select t1.document_id,  count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by t1.document_id;
\end{code}<separator> select t1.document_id,  t2.document_name, count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id; select * from documents order by date_created desc limit 5;<separator> select t1.document_id,  t2.document_name, count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id; select * from documents order by date_created desc limit 5;<separator> select distinct t1.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id having count(*)  >=  2;select * from documents where template_id in (select template_id from paragraphs<separator> select document_id from documents group by document_id having count(*)  >=  2;select t1.document_id,  t2.document_title from documents as t1 join titles as t2 on t1.document_id  =  t2.document_id where t1.document_title like<separator> select t1.document_id,  t2.document_name from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) desc limit 1;
document_id   document_name
<separator> select t1.document_id,  t2.document_name from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) desc limit 1;); select * from documents where template_id<separator> select t1.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) asc limit 1;
select document_id from documents where template_id in (select template_id<separator> select t1.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) asc limit 1;
select document_id from documents where template_id in (select template_id<separator> select t3.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id having count(*) between 1 and 2;select distinct document_id from documents where template_id in (select template_<separator> select document_id from documents where count(*)  >=  1 intersect select document_id from documents except select t2.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id having count(*)  ><separator> select t1.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t2.paragraph_text like '% brazil %'; select t1.document_id from documents as t1 join paragraphs as t2 on t1<separator> select document_id from documents where document_name like '% brazil %' intersect select document_id from documents where document_name like '% ireland %'; select t1.document_id,  t2.document_title from documents as t1 join documents as t2 on t1.document_id!= t2<separator> select count(*) from teacher;select count(*) from teacher;answer: 3;select count(distinct name) from teacher;answer: 1;select max(t2.age),  min(t1.age) from teacher as t1 join teacher as t2 on t1.teacher_id!=<separator> select count(*) from teacher;select count(*) from teacher;coalesce(count(*),0) as t1 from teacher;select sum(t2.age),  count(*) from teacher as t1 join teacher as t2 on t1.teacher_id  =  t2.teachers_id<separator> select name from teacher order by age; select t1.name from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id join teacher as t3 on t2.teacher_id  =  t3.teachert_id order by<separator> select name from teacher order by age;BobTedTomJimMikeJackRonnySandyBillSamanthaKennyLisaAnnaGaryMarkSteveJohnPaulCarolDaveHelenGeorgeFrankEddiePeteNancyRobertAndyCindyDavidAlexis<separator> select name,  age from teacher; select t1.name,  t2.hometown from teacher as t1 join teacher as t2 on t1.teacher_id  =  t2.teachert_id; select * from course where staring_date between '2018-0<separator> select name,  age from teacher; select t1.name,  t2.hometown from course as t1 join teacher as t2 on t1.teacher_id  =  t2.teachert_id; select * from course where staring_date between '2018-0<separator> select t1.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teachert_id where t2.grade!= "A" except select distinct t1.name from teacher as t1 join course_arrange as t2 on t<separator> select name from teacher where hometown!= "little lever urban district";select t1.name,  t2.hometown from teacher as t1 join teacher as t2 on t1.teacher_id  =  t2.teachert_id except select t3.name,  t4<separator> select t1.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teachert_id where age  =  32 intersect select t1.name from teacher as t1 join course_arrange as t2 on t1.te<separator> select name from teacher where age  =  32 union all select name from teacher where age  =  33; select t1.name,  t2.name from teacher as t1 join teacher as t2 on t1.teacher_id!= t2.teachert_id intersect select t1.<separator> select t2.hometown from teacher as t1 join teacher as t2 on t1.teacher_id  =  t2.teachert_id where age  <  30; select name,  grade from course_arrange order by grade asc limit 5; select * from course_ar<separator> select t1.name,  min(t2.age) from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teachert_id group by t1.teacher_id; select name,  age from teacher order by age asc limit<separator> select count(*),  t2.hometown from teacher as t1 join teacher as t2 on t1.hometown!= t2.hometown group by t2.hometown; select count(*),  t2.hometown from teacher as t1 join teacher as t2 on t1<separator> select count(*),  t2.hometown from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teachers_id group by t2.hometown;select name,  age from teacher order by age asc limit 5; select<separator> select t2.hometown from teacher as t1 join teacher as t2 on t1.teacher_id  =  t2.teachert_id group by t2.hometown order by count(*) desc limit 1;select name, age from teacher order by age asc limit 1;select<separator> select count(distinct t2.hometown),  t1.hometown from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teachert_id group by t1.hometown;select distinct grade from course_ar<separator> select distinct t2.hometown from teacher as t1 join teacher as t2 on t1.teacher_id!= t2.teachert_id; select * from course where staring_date  >   '2019-05-31'; select grade, count(*) from course_<separator> select hometown from teacher group by hometown having count(*)  >=  2; select t1.hometown from teacher as t1 join teacher as t2 on t1.hometown!= t2.hometown group by t1.hometown having count(*)  >=  2; select distinct<separator> select t1.name,  t2.title from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id join teacher as t3 on t2.teacher_id  =  t3.teachers_id;- except select<separator> select t1.name,  t2.title from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id; select title from course order by staring_date desc limit 5; select * from course where grade!= 'A'; select count<separator> select t1.name,  t2.title from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id order by t1.name; select title from course order by staring_date desc limit 5; select * from course where grade<separator> select t1.name,  t2.title from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id order by t1.title;select title from course order by staring_date desc limit 5;select * from course where grade<separator> select t1.name from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id where staring_date like "%math%";select name from teacher; select * from course order by grade asc limit 5; select * from course_arrange<separator> select name from teacher where grade  =   "math";select t1.name from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id join teacher as t3 on t2.teacher_id  =  t3.teachert<separator> select name,  count(*) from course_arrange group by teacher_id;select t1.name,  count(*) from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id group by t1.name; select * from course order by<separator> select name,  count(*) from teacher group by name;select t1.name,  count(*) from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id join teacher as t3 on t2.teacher_id  =  t3<separator> select name from teacher where grade  >=  2;select t1.name, count(*) as cnt from course_arrange as t1 join teacher as t2 on t1.teacher_id  =  t2.teachers_id group by t2.name having count(*)  >=  2;<separator> select name from teacher where count(*)  >=  2;select t1.name,  t2.name from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id group by t1.course_id having count(*)  >=  2;<separator> select name from teacher where teacher_id not in (select t1.teacher_id from course as t2 join course_arrange as t3 on t2.course_id  =  t3.course_id); select * from course; select grade,  course_id from course_arrange order by<separator> select name from teacher where teacher_id not in (select t1.teacher_id from course as t2 join course_arrange as t3 on t2.course_id  =  t3.course_id); select * from course; select grade,  course_id from course_arrange order by<separator> select count(*) from visitor where level_of_membership  <  30; select count(*) from visitor where level_of_membership  <  30; coalesce(count(*),0) as total_below_30; select sum((select t1.total_spent from visit<separator> select name from visitor where level_of_membership > 4 order by level_of_membership; select t1.name,  t2.level_of_membership from visitor as t1 join visitor as t2 on t1.id!= t2.id group by t1.name<separator> select avg(age) from visitor where level_of_membership <= 4; select avg(age) from visitor where level_of_membership!= '5'; select avg(age) from visitor where level_of_membership!= '6' except select avg(age) from<separator> select t1.name,  t2.level_of_membership from visitor as t1 join visitor as t2 on t1.id  =  t2.id where t2.level_of_membership >  4 order by t2.age; select * from visitor where level_of<separator> select t1.museum_id,  t2.name from museum as t1 join visit as t2 on t1.museum_id  =  t2.museum_id group by t1.museum_id order by count(*) desc limit 1;) select * from museum where open_year >= '2<separator> select avg(num_of_staff) from museum where open_year <  2009;select name,  avg(num_of_staff) from museum where open_year <  2009 group by name; select t1.name,  avg(t3.num<separator> select open_year,  num_of_staff from museum where name  =  "plaza";select t1.open_year,  t2.num_of_staff from museum as t1 join visit as t2 on t1.museum_id  =  t2.museum_id where<separator> select name from museum where num_of_staff > (select min(num_of_staff) from museum as t1 join visit as t2 on t1.museum_id  =  t2.museum_id where open_year >= 2010); select * from museum order by open_<separator> select t1.id,  t2.name,  t3.age from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id group by t1.id having count(*)  >  1;select * from visitor where level_of_membership<separator> select t1.id,  t2.name,  t3.level_of_membership from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id group by t2.total_spent order by sum(t2.total_spent<separator> select t1.museum_id,  t2.name from visit as t1 join museum as t2 on t1.museum_id  =  t2.museum_id group by t1.museum_id order by count(*) desc limit 1;); select * from visitor where level_of_memb<separator> select t1.name from museum as t1 join visit as t2 on t1.museum_id  =  t2.museum_id where t2.visitor_id  =  0;select * from museum order by open_year desc limit 5;select count(*),  max(open_year<separator> select t1.name,  t2.age from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id group by t2.visitor_id order by sum(t2.num_of_ticket) desc limit 1;
select * from<separator> select avg(total_spent),  max(total_spent) from visit;select avg(total_spent),  max(total_spent) from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id group by t1<separator> select sum(total_spent) from visitor where level_of_membership  =  1; select count(*),  avg(total_spent) from visitor group by level_of_membership having count(*)  >  2; select max(total_spent), min(total_sp<separator> select t3.name from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id join museum as t3 on t2.museum_id  =  t3.museum_id where open_year <  2009 intersect select t4.name from<separator> select count(*) from visitor where name!= 'not visited' except select t3.count(*) from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id except select t4.count(*) from visit as t5 join visitor as t6 on t5.visitor_<separator> select count(*) from museum where open_year >= 2013 intersect select count(*) from museum where open_year <= 2008; select count(*) from museum as t1 join visit as t2 on t1.museum_id  =  t2.museum_id intersect select count(*) from museum as<separator> select count(*) from players;-> 1065;- select sum(t2.win),  sum(t3.lose ) from matches as t1 join tourneys as t2 on t1.tourney_id  =  t2.tourney_id join matches as t4<separator> select count(*) from players;-> 1065;- select * from t2 as t3 join t1 as t4 on t3.match_num  =  t4.match_num where tourney_level  =   "open"; select * from t1 as t4 join t2 as t<separator> select count(*) from matches;select count(*) from t1 as matches; 2048 union select count(*) from t3 as matches; select count(*) from t5 as matches; select count(*) from t6 as matches; select count(*) from t7 as matches; select count(*) from t9 as matches; select count<separator> select count(*) from matches; 1065423798; select * from tours order by tourney_name asc; union select * from tournaments order by tourney_name asc; select * from match_results where draw_size!= 'null' or best_of!= 'null'; select<separator> select t1.first_name,  t2.birth_date from players as t1 join countries as t2 on t1.country_code  =  t2.country_code where t2.country_code  =  'usa';select * from tourneys;select * from tournaments;<separator> select t1.first_name,  t2.birth_date from players as t1 join country_codes as t2 on t1.country_code  =  t2.country_code where t2.country_code  =  'usa';; select * from tourneys order by year desc<separator> select avg(loser_age),  avg(winner_age) from matches; select avg(loser_age),avg(winner_age) from matches; coalesce (avg(loser_age),  0 ) as t1,  coalesce (av<separator> select avg(loser_age),  avg(winner_age) from matches;-> select t1.first_name,  t2.last_name,  hand,  birth_date,  country_code from players as t1 join rankings as t2 on t1.player_<separator> select avg(winner_rank) from matches where winner_id!= 0; select t1.average_rank from (select player_id,  count(*) as total_wins,  sum((winner_rank - loser_rank)) / count(* ) as difference from matches group by player_<separator> select avg(winner_rank) from matches where winner_id!= 0; select avg(winner_rank) from matches where winner_id!= 0; except select t1.winner_rank from matches as t1 join tourneys as t2 on t1.tourney_id<separator> select max(loser_rank) from matches;-> select t1.ranking,  count(*) as ranking_count from rankings as t1 join matches as t2 on t1.player_id  =  t2.loser_id group by t1.ranking order by ranking desc limit 1<separator> select max(loser_rank) from matches;-> 10; except select t2.loser_rank from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id group by t1.loser_id order by t2.ran<separator> select count(distinct country_code) from players;select count(*) from t1 as t2 join t3 as t4 on t2.player_id  =  t4.player_id group by t2.player_id; select sum((select count(*) from t1 where player_id in (select<separator> select count(distinct country_code) from players;select count(*) from t1 as t2 join t3 as t4 on t2.player_id  =  t4.player_id group by t2.player_id; select count(* ) from t1 as t2 join t3 as t4<separator> select count(distinct t1.loser_name) from matches as t1 join tourneys as t2 on t1.tourney_id  =  t2.tourney_id; select count(*) from matches where winner_id!= loser_id; select count(*) from matches; select<separator> select count(distinct t1.loser_name) from matches as t1 join tourneys as t2 on t1.tourney_id  =  t2.tourney_id; select distinct winner_name,  count(*) from matches group by winner_name; select distinct loser_<separator> select t2.tourney_name from matches as t1 join tournaments as t2 on t1.tourney_id  =  t2.tourney_id group by t2.tourney_name having count(*)  >  10;select * from tournaments order by tourney<separator> select tourney_name from matches group by tourney_name having count(*)  >  10;select t2.tournament_name,  sum(count(*)) as total_matches from matches as t1 join tournaments as t2 on t1.tourney_id  =  t2.<separator> select t4.win_name from matches as t1 join tourneys as t2 on t1.tourney_id  =  t2.tourney_id join tournaments as t3 on t2.tournament_type  =  t3.tournament_type intersect select t<separator> select t4.winning_name from tourney as t1 join tournaments as t2 on t1.tournament_id  =  t2.tournament_id join matches as t3 on t1.tournament_id  =  t3.tournament_id join players as<separator> select count(*) from matches where year  =  2013 or year  =  2016; select count(*) from matches where year  =  2013 union select count(*) from matches where year  =  2016; res_count := (select sum(distinct draw_size)<separator> select count(*) from matches where tourney_date between '2013-01-01' and '2015-12-31'; select count(*) from matches where tourney_date between '2016-01-01' and '2017-12<separator> select t1.country_code,  t2.first_name from tournaments as t1 join players as t2 on t1.winning_team_id  =  t2.player_id where t1.title like "%australia%" intersect select t1.country_code,  t2<separator> select t1.first_name,  t2.country_code from players as t1 join tourneys as t2 on t1.winning_tournament_id  =  t2.tourney_id where t2.title  =  "australian open" intersect select t1<separator> select t1.first_name,  t2.country_code from players as t1 join countries as t2 on t1.country_code  =  t2.country_code order by birth_date desc limit 1;select * from tourneys where year  >  2017;select<separator> select t1.first_name,  t2.country_code from players as t1 join countries as t2 on t1.country_code  =  t2.country_code order by birth_date desc limit 1; --  result: john,  usa; select * from tourneys<separator> select t1.first_name,  t1.last_name from players as t1 join (select player_id,  max(birth_date) from players group by player_id ) as t2 on t1.player_id  =  t2.player_id;- except select * from<separator> select t1.first_name,  t2.last_name from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id order by t1.birth_date;select first_name, last_name from players order by birth_date asc<separator> select t1.first_name,  t1.last_name from players as t1 join matches as t2 on t1.player_id  =  t2.loser_id where t2.hand  =   "l"; order by t1.birth_date; select * from players except<separator> select t1.first_name,  t2.last_name from players as t1 join hand as t2 on t1.hand  =  t2.hand where t2.left_handed; order by birth_date asc; except select * from players where hand  =  'right'; select first<separator> select first_name,  country_code from players group by hand order by ranking_points desc limit 1;select * from rankings where tourney_id in (select tourney_id from matches); select count(*) from rankings as r join players as p on r.player_id  =  p.player<separator> select first_name,  country_code from players order by ranking_points desc limit 1; -> john,  usa; except select count(*) from tourneys as t join tournaments as t2 on t.tournament_id  =  t2.tournament_id group by t2<separator> select tourney_year from matches group by tourney_year order by count(*) desc limit 1;select tourney_year from matches where match_num!= "0" group by tourney_year order by count(*) desc limit 1; select t2.tourneryear,  count(*) from matches as t<separator> select count(*),  t1.year from matches as t1 join tourneys as t2 on t1.tourney_id  =  t2.tourney_id group by t1.year order by count(*) desc limit 1;select max(t4.year) from tournaments as<separator> select t1.winner_name,  t2.winner_rank_points from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id group by t1.winner_id order by count(*) desc limit 1;coalesce(<separator> select t1.winner_name,  sum(t2.ranking_points) from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id group by t1.winner_name order by sum(t2.ranking_points)<separator> select t1.winner_name from rankings as t1 join tournaments as t2 on t1.tours  =  t2.tournament_id where t2.tournament_name  =  "australia" order by ranking_points desc limit 1; select * from rank<separator> select t1.winner_name from tourney as t1 join rankings as t2 on t1.tournament_id  =  t2.tours where t2.ranking_points  >   (select max(ranking_points) from rankings); select * from tourney where country<separator> select t1.loser_name,  t2.winner_name from matches as t1 join players as t2 on t1.loser_id  =  t2.player_id order by min(minutes) desc limit 1; select * from matches where tourney_date  = <separator> select t1.winner_name,  t2.loser_name from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id where draw_time  >   (select max(draw_time) from matches); select * from matches order by<separator> select avg(ranking),  t1.first_name from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id group by t1.first_name;select avg(ranking),  t1.first_name from rank<separator> select t1.first_name,  avg(t2.ranking) from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.first_name;select * from rankings order by ranking asc limit 5; select<separator> select t1.first_name,  sum(t2.ranking_points) from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id group by t1.first_name;select count(*),  year from tourneys;select count<separator> select t1.first_name,  sum(t2.ranking_points) from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.first_name;select * from rankings order by ranking desc limit 5;<separator> select count(*),  country_code from players group by country_code;select t1.country_code,  count(*) from players as t1 join tourneys as t2 on t1.tourney_id  =  t2.tourney_id group by t1.country_code;<separator> select count(*),  country_code from players group by country_code;select t1.country_code,  count(*) from players as t1 join tourneys as t2 on t1.tourney_id  =  t2.tourney_id group by t1.country_code;<separator> select t2.country_code from tourney as t1 join players as t2 on t1.tourney_id  =  t2.tourney_id group by t2.country_code order by count(*) desc limit 1;select * from tourney;select * from player;select *<separator> select t2.country_code from tourney as t1 join tournaments as t2 on t1.tournament_id  =  t2.tournament_id group by t2.country_code order by count(*) desc limit 1;select * from tournaments where name like "%world%";<separator> select country_code from players group by country_code having count(*)  >  50;select t1.country_code,  sum(count(*)) as total from players as t1 join tourneys as t2 on t1.tourney_id  =  t2.tourney_id<separator> select country_code from players group by country_code having count(*)  >  50;select t1.country_code,  sum(count) from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.country_code<separator> select sum(tours),  ranking_date from rankings group by ranking_date;select count(*) from tourneys; select count(*) from tournaments as t1 join teams as t2 on t1.team_id  =  t2.team_id; select count(*) from players as p join rank<separator> select count(*),  ranking_date from rankings group by ranking_date;select tourney_date,  year from tournaments union select tourney_date,  year from match_results except select tourney_date,  year from tournaments; select * from tournaments order by tourney_date asc limit <separator> select count(*),  year from matches group by year;select t1.year,  sum(count(*)) from matches as t1 join tourneys as t2 on t1.tourney_id  =  t2.tourney_id group by t1.year; select distinct year from matches<separator> select count(*),  year from matches group by year;select t1.year,  count(*) from matches as t1 join tourneys as t2 on t1.tourney_id  =  t2.tourney_id group by t1.year; select distinct year from matches order by year<separator> select t1.winner_name,  t2.winner_rank from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id where winner_age < (select min(winner_age) from matches); select * from rankings order<separator> select t1.winner_name,  t2.ranking from wins as t1 join rankings as t2 on t1.winner_id  =  t2.player_id order by t2.ranking asc limit 3;-[select winner_name,  ranking from wins union select<separator> select count(*) from (select t1.winner_id,  t2.winner_left from wins as t1 join tourneys as t2 on t1.tournament_id  =  t2.tournery_id where t2.title like "%wta%") as t3<separator> select count(*) from t1 as wins where hand  =   'l' intersect select count(*) from t2 as losers where tourney_name  =  "WTA Championships"; select * from t3; select * from t4 except select * from t5; select * from t6 except select * from t7<separator> select t1.first_name,  t2.country_code,  t3.birth_date from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id join matches as t3 on t1.player_id  =  t3<separator> select t1.first_name,  t2.country_code,  t3.birth_date from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id group by ranking order by ranking desc limit 1; -- returns "john","<separator> select count(*),  hand from players group by hand;select count(*),  hand from players where hand!= "x" union select count (*),  hand from players where hand!= "o"; select count(distinct t1.hand ) as total_hands,  sum ( distinct t2.hand ) as<separator> select count(*),  hand from players group by hand;select count(*),  hand from players where hand!= "x" union select count (*),  hand from players where hand!= "o"; select count(*),  hand from players where hand!= "p"; select count(*),  hand from players where hand!= "<separator> select count(*) from ship where disposition_of_ship  =   "captured";select count(*) from ship where disposition_of_ship  =   "captured"; select t1.name,  t2.tonnage from ship as t1 join ship as t2 on t1.id!= t2.<separator> select name,  tonnage from ship order by name asc;select * from ship where location!= "none" union select * from ship where disposition_of_ship!= "none"; select * from ship except select id as t1,  ship_type as t2 from ship join battles on ship.id  =<separator> select t1.name,  t2.date,  t3.result from battle as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id join results as t3 on t2.result  =  t3.id;select * from battle<separator> select max(t2.total),  min(t1.total) from death as t1 join battle as t2 on t1.caused_by_ship_id  =  t2.id;select max(t3.total),  min(t4.total) from death as t<separator> select avg(injured) from death;select t1.average,  count(*) as total from (select injured from death group by killed union select injured from death where killed!= '0' ) as t1 join death as t2 on t1.total  =  t2.killing_count;<separator> select count(*),  injured from death as d join ship as s on d.caused_by_ship_id  =  s.id where tongee  =  10; select killed,  injured from death as d join ship as s on d.caused_by_ship_id  = <separator> select t1.name,  result from battle as t1 join battle as t2 on t1.bulgarian_commander!= "boril" where date  =  t2.date;select * from battle order by id desc limit 5; select count(*) from battle group by latin_commander having count<separator> select distinct t1.id,  t2.name from battle as t1 join ship as t2 on t1.lost_in_battle  =  t2.id where t2.ship_type  =  "brig";select id, name from battle;select * from ship except select id from<separator> select t2.id,  t3.name from battle as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id join ship as t3 on t2.caused_by_ship_id  =  t3.id group by t2<separator> select t1.id,  t2.name from death as t1 join ship as t2 on t1.caused_by_ship_id  =  t2.id group by t1.caused_by_ship_id order by count(*) desc limit 1;--  select * from ship<separator> select name from battle where bulgarian_commander  =  "kaloyan" intersect select name from battle where latin_commander  =  "baldwin i"; select t1.name from battle as t1 join battle as t2 on t1.id!= t2.id where t1.bul<separator> select count(distinct result) from battle;select distinct result from battle;coalesce (count(*), 0); select max(result) from battle group by result having count(*) > 1; select sum(t2.killing) + sum(t3.wounded) as total_casualties from<separator> select count(*) from battle where lost_in_battle != "225"; select count(*) from battle; select sum(tonnage) from ship group by ship_type; select max(tonnage),  min(tonnage) from ship; select max(bulgarian_commander)<separator> select t1.name,  t2.date from battle as t1 join ship as t2 on t1.id  =  t2.id where t2.name  =  "lettice" intersect select t1.name,  t2.date from battle as t1 join ship as t2 on<separator> select name,  result,  bulgarian_commander from battle where lost_in_battle!= "yes"; select t1.name,  t2.result,  t3.bulgarian_commander from battle as t1 join death as t2 on t1.id  =  t2<separator> select note from death where note like '%east%';select distinct t1.note,  t2.name from death as t1 join ship as t2 on t1.caused_by_ship_id  =  t2.id; select name from ship order by location asc limit 5; select * from<separator> select t1.* from addresses as t1 join address_lines as t2 on t1.address_id  =  t2.address_id;- except select * from addresses where city!= 'Toronto'; select distinct line_1,  line_2 from addresses; select count(*) from addresses group by state<separator> select t4.line_1,  t4.line_2 from addresses as t1 join address_details as t2 on t1.address_id  =  t2.address_id join other_address_details as t3 on t2.address_detail_id  =  t3.address<separator> select count(*) from courses;-> 40;
select * from address where line_1 like '%main%' or line_2 like '%main%'; select * from course where title like "%computer science"; select * from department where name like "%mathematics%"; select * from section where course_id in (<separator> select count(*) from courses;-> 40;
select * from address where line_1 like '%main%' or line_2 like '%main%'; select * from course where title like "%math"; select * from department where name like "%math%"; select * from section where course_id in (select t1.<separator> select t4.course_description from courses as t1 join sections as t2 on t1.course_id  =  t2.course_id join degrees_programs as t3 on t2.degree_program_id  =  t3.degree_program_id join transcript_contents<separator> select course_description from courses where course_subject  =  "math";; select t4.course_description,  t5.title from courses as t1 join sections as t2 on t1.course_id  =  t2.course_id join degrees as t3 on t2.degree_<separator> select t4.zip_postcode from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.current_address_id join student_enrolment_courses as t3 on t2.student_enrolment_id  =  t3<separator> select t4.zip_postcode from address as t1 join permanent_address as t2 on t1.address_id  =  t2.address_id join cities as t3 on t2.city_id  =  t3.city_id join states_provinces_counties as t<separator> select t4.department_name,  t4.department_id from degree_programs as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_program_id order by<separator> select t4.department_name,  t5.degree_program_id from degree_programs as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_program_id<separator> select count(*) from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id; select count(*) from degree_programs where department_id!= ''; select count(*) from degrees; select sum(<separator> select count(distinct department_id) from degree_programs; select distinct t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id; select count<separator> select count(distinct t4.degree_summary_name) from degrees as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id join department_summaries as t3 on t2.department_id <separator> select count(distinct t4.degree_summary_name) from degree_programs as t1 join degree_summaries as t2 on t1.degree_summary_id  =  t2.degree_summary_id join degree_programs as t3 on t1.degree<separator> select count(*) from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id where t2.department_name  =  'engineering';; select * from address_types; select * from course_types; select * from<separator> select count(*) from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id where t2.department_name  =  'engineering';; select * from address_types; select * from course_types; select * from<separator> select section_name,  course_description from sections;+-------+------------------------------+ | section_name | course_description | +-------+------------------------------+; select t4.title as "section name",  t5.title as "course description" from sections as t1 join courses as t2 on t1<separator> select section_name,  course_description from sections;+-------+------------------------------+ | section_name | course_description | +-------+------------------------------+; select t4.title as "section name",  t5.title as "course description" from sections as t1 join courses as t2 on t1<separator> select t1.course_name,  t1.course_id from courses as t1 join sections as t2 on t1.course_id  =  t2.course_id group by course_id having count(*)  <=  2;); select * from address_details where state_province_count<separator> select t1.course_name,  t1.course_id from courses as t1 join sections as t2 on t1.course_id  =  t2.course_id group by t1.course_id having count(*)  <  2;); select * from address_details where state_prov<separator> select t4.section_name from address_details as t1 join sections as t2 on t1.address_id  =  t2.section_id join student_enrolment_courses as t3 on t2.section_id  =  t3.section_id join transcript_contents<separator> select section_name from sections order by section_name desc;- except (select distinct t1.section_name from sections as t1 join student_enrolment_courses as t2 on t1.section_id  =  t2.section_id); select course_name,  course_description from<separator> select t4.semester_name,  t4.semester_id from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id join transcript_contents as<separator> select t4.semester_name,  t4.semester_id from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id join transcript_contents as<separator> select t4.department_description from degrees as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id join departments as t3 on t2.department_id  =  t3.department_id join<separator> select t4.department_description from degrees as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id join departments as t3 on t2.department_id  =  t3.department_id join<separator> select t1.first_name,  t1.middle_name,  t1.last_name,  t1.student_id from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.degree_<separator> select t1.first_name,  t1.middle_name,  t1.last_name,  t1.student_id from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.degree_<separator> select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.degree_program_id  =  4;<separator> select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.degree_program_id  =  4;<separator> select t2.degree_summary_name from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_program_id order by count(*) desc limit 1<separator> select t4.degree_summary_name from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id join degrees as t3 on t2.degree_program<separator> select t1.degree_summary_name,  count(*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_program_id order by count(*)<separator> select t1.degree_program_id,  t2.degree_summary_name from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_<separator> select t1.student_id,  t1.first_name,  t1.middle_name,  t1.last_name,  count(*) from student_enrolment as t1 join students as t2 on t1.student_id  =  t2.student_id group by t<separator> select t4.first_name,  t4.middle_name,  t4.last_name,  count(*) from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_en<separator> select t4.semester_name from semesters as t1 join student_enrolment as t2 on t1.semester_id  =  t2.semester_id except select distinct t4.semester_name; select * from address where state_province_county!= 'ON';<separator> select t4.semester_name from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id join transcript_contents as t3 on t2.transcript_<separator> select t1.course_name from courses as t1 join student_enrolment as t2 on t1.course_id  =  t2.course_id;- select distinct t1.course_name from courses as t1 join student_enrolment as t2 on t1.course_id<separator> select t4.course_name from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id join courses as t3 on t2.course_id  =  t<separator> select t4.course_name from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id join courses as t3 on t2.course_id  =  t<separator> select t4.course_name from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id join courses as t3 on t2.course_id  =  t<separator> select t4.last_name from students as t1 join address as t2 on t1.current_address_id  =  t2.address_id join degrees as t3 on t1.degree_program_id  =  t3.degree_program_id where t3.state_<separator> select distinct t4.last_name from students as t1 join address as t2 on t1.permanent_address_id  =  t2.address_id as t3 join degrees as t4 on t3.degree_program_id  =  t4.degree_program_id<separator> select t1.transcript_date,  t1.transcript_id from transcripts as t1 join transcript_contents as t2 on t1.transcript_id  =  t2.transcript_id group by t1.transcript_id having count(*) >= 2;);
<separator> select t4.transcript_date,  t4.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.transcript_id join student_enrolment as t3 on t2.student<separator> select cell_mobile_number from students where first_name  =  "timmothy" and last_name   =  "ward"; select t4.title,  t5.author from books as t1 join authors as t2 on t1.book_authors_id  =  t2.author<separator> select cell_mobile_number from students where first_name  =  "timmothy" and last_name   =  "ward"; select t4.title,  t5.author from books as t1 join authors as t2 on t1.book_authors_id  =  t2.author<separator> select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id order by date_first_registered asc limit 1; union select<separator> select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id order by date_first_registered asc limit 1; union all<separator> select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where date_graduated  <= (select max(t4.<separator> select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where date_graduated  =  (select max(t4<separator> select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t1.permanent_address_id!= t1.current_address_id; select distinct first_name from students except select distinct<separator> select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t1.permanent_address_id!= t1.current_address_id;+-----------+---------------------+ | select t1<separator> select t4.address_id,  line_1,  line_2,  line_3 from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.current_address_id group by t1.address_id order by count(*) desc limit<separator> select t1.address_id,  t1.line_1,  t1.line_2 from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.current_address_id group by t1.address_id order by count(*) desc<separator> select avg(t1.transcript_date) from transcripts as t1 join transcript_contents as t2 on t1.transcript_id  =  t2.transcript_id;-  select avg(t1.transcript_date) from transcripts as t1 join<separator> select avg(t1.transcript_date) from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.transcript_id;-  select avg(t1.transcript_date) from transcripts<separator> select t4.transcript_date,  t5.other_details from transcripts as t1 join transcript_contents as t2 on t1.transcript_id  =  t2.transcript_id join degrees as t3 on t1.degree_program_id  =  t<separator> select min(t1.transcript_date),  t2.other_details from transcripts as t1 join transcript_contents as t2 on t1.transcript_id  =  t2.transcript_id;- except select * from address where state_province_county!=<separator> select count(*) from transcripts as t join transcript_contents as c on t.transcript_id  =  c.transcript_id where release_status  =   "released";; select * from address_types order by name asc; select * from course_types order by name asc; select *<separator> select count(*) from transcripts;-> 406);- select * from address where line_1 like '%main%' or line_2 like '%main%'; -> select * from addresses where line_1 like '%main%' or line_2 like '%main%'; +-----------+-------------+---------------------+------------------+<separator> select max(t4.transcript_date) from transcripts as t1 join transcript_contents as t2 on t1.transcript_id  =  t2.transcript_id join student_enrolment_courses as t3 on t2.student_course_id  = <separator> select max(t2.transcript_date) from transcripts as t1 join transcript_contents as t2 on t1.transcript_id  =  t2.transcript_id;-[select count(*),  avg ( course_price ) from courses group by course_type]; select<separator> select count(*),  t1.student_course_id from student_enrolment as t1 join transcript_contents as t2 on t1.student_course_id  =  t2.student_course_id group by t1.student_course_id having max(count(*)) <= <separator> select max(distinct t1.course_id),  count(*) from transcript_contents as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id group by t1.course_id; select distinct t<separator> select t4.transcript_date,  t5.transcript_id from transcripts as t1 join transcript_contents as t2 on t1.transcript_id  =  t2.transcript_id join student_enrolment_courses as t3 on t2.student_<separator> select t4.transcript_date,  t5.transcript_id from transcripts as t1 join transcript_contents as t2 on t1.transcript_id  =  t2.transcript_id join student_enrolment_courses as t3 on t2.student_<separator> select t4.semester_id from student_enrolment as t1 join degrees as t2 on t1.degree_program_id  =  t2.degree_program_id join student_enrolment_courses as t3 on t1.student_enrolment_id <separator> select t4.semester_id from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id join courses as t3 on t2.course_id  = <separator> select count(distinct current_address_id) from students; select count(*) from address as t1 join students as t2 on t1.address_id  =  t2.current_address_id; select distinct current_address_id from students; select count(* ) from addresses where permanent_address_id<separator> select distinct t1.address_id from address as t1 join students as t2 on t1.address_id  =  t2.current_address_id;- select distinct t1.address_id from address as t1 join students as t2 on t1.address_id  =  t2<separator> select * from students order by last_name,  first_name desc;select t4.* from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id join student_enrolment_courses as t3 on t2.student_<separator> select t4.*,  t5.other_details from students as t1 join address_details as t2 on t1.permanent_address_id  =  t2.address_detail_id join permanent_addresses as t3 on t2.permanent_address_id  = <separator> select t4.section_name,  t5.course_name from sections as t1 join course_offerings as t2 on t1.section_id  =  t2.section_id join courses as t3 on t2.course_id  =  t3.course_id join student<separator> select t4.section_description from address as t1 join sections as t2 on t1.address_id  =  t2.section_id join course as t3 on t2.course_id  =  t3.course_id join transcript_contents as t4 on t3.course_<separator> select t1.first_name from students as t1 join permanent_addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country like '%haiti%' intersect select t1.first_name from students as t1 join current_address<separator> select t1.first_name from students as t1 join permanent_addresses as t2 on t1.permanent_address_id  =  t2.address_id where country  =  "haiti" intersect select t1.first_name from students as t1 join current_addresses<separator> select title from cartoon order by title;select t2.title from cartoon as t1 join tv_series as t2 on t1.channel  =  t2.id order by t1.title; select distinct title from cartoon; select count(*),  max(t3.title),  min<separator> select title from cartoon order by title;select t2.title from cartoon as t1 join tv_series as t2 on t1.channel  =  t2.id order by t1.title; select distinct title from cartoon; select count(*),  max(t3.title),  min<separator> select title from cartoon where directed_by  =  'ben jones';select * from cartoon as t2 join tv_show as t3 on t2.channel  =  t3.id where t3.director  =  'ben jones' union select distinct id,  title from cartoon<separator> select title from cartoon where directed_by  =  'ben jones';; select t2.title,  t3.directed_by from cartoon as t1 join tv_show as t2 on t1.channel  =  t2.id join cartoon as t3 on t1.direct<separator> select count(*) from cartoon where directed_by  =  'joseph kuhr';select count(*) from cartoon; select title,  original_air_date,  production_code,  channel from cartoon group by title order by id asc limit 5; select * from cartoon except select t2<separator> select count(*) from cartoon where directed_by  =   'joseph kuhr';select count(*) from cartoon; select title,  original_air_date,  production_code,  channel from cartoon group by title order by title asc; select * from cartoon except select id as t2,<separator> select title,  directed_by from cartoon order by original_air_date;select t2.title,  t3.directed_by from cartoon as t1 join tv_show as t2 on t1.channel  =  t2.id join director as t3 on t2.directed<separator> select title,  directed_by from cartoon order by original_air_date;select t2.title,  t3.directed_by from cartoon as t1 join tv_series as t2 on t1.channel  =  t2.id join cartoon as t3 on t1.id<separator> select t2.title from cartoon as t1 join tv_show as t2 on t1.directed_by  =  t2.writer where t1.director like "%ben%"; union select t3.title from cartoon as t1 join tv_show as t2 on t1.direct<separator> select title from cartoon where directed_by  =  'ben jones' intersect select title from cartoon where written_by  =  'brandon vietti'; select * from cartoon except select id,  title from cartoon; select t2.title from cartoon as t1 join tv_series as t<separator> select t2.country,  count(*) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t2.country order by count(*) desc limit 1;select * from tv_channel where country  =  (select max(t3.<separator> select t2.country,  count(*) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t2.country;select country,  count(*) from tv_channel group by country order by count(*) desc limit 1;coalesce(<separator> select count(distinct t2.series_name),  count(distinct t3.content) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.id join tv_channel as t3 on t1.id  =  t3.id<separator> select count(distinct t2.series_name),  count(distinct t3.content) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.id join tv_channel as t3 on t1.id  =  t3.id<separator> select t2.content from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.serial_name  = 'sky radio'; select * from tv_channel order by country; select * from tv_channel except select id, title, directed<separator> select t2.content from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.series_name  =  "sky radio";-> select * from tv_channel order by country; -> select * from tv_channel except select id, title<separator> select t2.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.serial_name  = 'sky radio';) select * from tv_channel except (select id, country from tv_channel); select count(*)<separator> select t2.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.series_name like "%sky%";select distinct(t3.package_option) from tv_channel as t1 join tv_series as t<separator> select count(*) from tv_channel where content  =  "english";select count(*) from tv_channel where content  =  "english" limit 1;coalesce(count(*),0) as total_rows from tv_channel where content  =  "english";select sum((t2.<separator> select count(*) from tv_channel where country  =  'english';; select sum(t2.total_cost),  t3.price from order as t1 join product as t2 on t1.product_id  =  t2.id join customer as t3 on t1.customer_<separator> select t2.language from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t2.language order by count(*) asc limit 1;select * from tv_channel where country!= 'usa' order by hight_definition_tv desc;<separator> select language,  count(*) from tv_channel group by language order by count(*) asc limit 1;select t2.language from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.rating!= "0" group by t1.language<separator> select t2.language,  count(*) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t2.language;select distinct country from tv_channel;select distinct content from tv_channel;select distinct series_name from tv_series;<separator> select count(*),  t2.language from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t2.language;select distinct country from tv_channel;select distinct content from tv_channel;select distinct series_name from tv_series;<separator> select t2.series_name from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where title  =  'the rise of the blue beetle!'; select * from tv_channel order by country; select * from tv_series order by week<separator> select t2.series_name from tv_show as t1 join tv_channel as t2 on t1.channel  =  t2.id where title  =  'the rise of the blue beetle';-> select * from tv_channel order by country;-> select * from tv_series order by<separator> select t2.title from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.series_name  = 'sky radio';select * from tv_channel order by country;select * from tv_series order by weekly_rank desc limit<separator> select t2.title from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.series_name  = 'sky radio';) select *,  count(*) from cartoon group by directed_by; union select *,  count(*) from<separator> select t2.episode from tv_series as t1 join tv_series as t2 on t1.id  =  t2.parent where t1.rating!= '' order by t1.rating;select distinct(t3.episode),  t1.rating from tv_series as<separator> select episode from tv_series order by rating;select t2.episode from tv_series as t1 join tv_season as t2 on t1.season_number  =  t2.id where t1.rating  >  0; select episode, share from tv_series group by episode having count<separator> select t2.episode,  t2.rating from tv_series as t1 join tv_series as t2 on t1.id  =  t2.parent where t1.rating  >   (select max(t3.rating) from tv_series as t1 join tv_series as<separator> select t2.episode,  t2.rating from tv_series as t1 join tv_series as t2 on t1.id  =  t2.parent where rating  >  7;select episode,  rating from tv_series order by rating desc limit 3; select share from tv_<separator> select min(t2.share),  max(t2.share) from tv_series as t1 join tv_series as t2 on t1.id!= t2.id;select min(t3.share),max(t3.share) from tv_series as t1 join tv_series<separator> select max(t2.share),  min(t2.share) from tv_series as t1 join tv_series as t2 on t1.id!= t2.id;select max(t3.share),  min(t3.share) from tv_series as t1 join tv<separator> select t2.air_date from tv_series as t1 join tv_series as t2 on t1.episode  =  t2.episode where title  =  'a love of a lifetime';-> select * from tv_series except select id,  channel from tv_series; -><separator> select air_date from tv_series where title  =  'a love of a lifetime';-> select air_date from tv_series where title  =  'a love of a lifetime' -> 2015-03-07; select t1.title,  t2.air_date from<separator> select t2.weekly_rank from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t1.episode  =  'a love of a lifetime';-> select * from tv_series except select id, title, directed_by,<separator> select t2.weekly_rank from tv_series as t1 join tv_series as t2 on t1.episode  =  t2.episode where title  =  'a love of a lifetime';-> select * from tv_series except select id, air_date, rating, share<separator> select t2.series_name from tv_series as t1 join tv_channel as t2 on t1.channel  =  t2.id where title  =  'a love of a lifetime'; select * from tv_channel order by country; select * from tv_channel except select id,  content from<separator> select title from tv_series where episode  =   'a love of a lifetime'; select * from tv_series except select id, title from tv_series; select t2.title from tv_series as t1 join tv_channel as t2 on t1.channel  =  t2.id where t1<separator> select t2.episode from tv_series as t1 join tv_channel as t2 on t1.channel  =  t2.id where t1.series_name  = 'sky radio';select title, directed_by, written_by, original_air_date, production_code,<separator> select t2.episode from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where title like "%sky%"; select * from tv_series where title like "%sky%" limit 1; ->  sky radio select t2.episode from<separator> select count(*),  t2.director from cartoon as t1 join tv_show as t2 on t1.directed_by  =  t2.id group by t2.director; select director,  count(*) from tv_show where title like "%cartoon%" or title like "%animation<separator> select count(*),  directed_by from cartoon group by directed_by;select count(*),  written_by from cartoon group by written_by;select count(*),  original_air_date from cartoon group by original_air_date;select count(*),  production_code from cartoon group by<separator> select t2.production_code,  t3.channel from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id join tv_series as t3 on t1.channel  =  t3.id order by air_date desc limit 1;co<separator> select production_code,  t2.channel from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id order by air_date desc limit 1; ->  (select production_code,  t2.channel from cartoon as t1 join tv_channel<separator> select t2.package_choice,  t3.series_name from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel intersect select t3.series_name from tv_channel as t1 join tv_series as t2 on t1.id<separator> select t2.package_option,  t3.series_name from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel intersect select t2.package_option,  t3.series_name from tv_channel as t1 join tv_series<separator> select t2.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.directed_by where t2.written_by  =  'todd casey';
select country,  series_name from tv_channel; select title from cartoon order<separator> select country from tbltv_channel as c join cartoon as tc on tc.written_by  =  c.writer where directed_by  =  "todd casey";select distinct country from tbltv_channel; select * from tbltv_channel except select id, title<separator> select country from tbltv_channel except select distinct country from tbltv_channel where directed_by  =   'todd casey';select * from tbltv_channel as t2 join tv_series as t3 on t2.id  =  t3.channel; select title,<separator> select country from tb2 where directed_by != 'todd casey';select distinct country from tb3 except select distinct country from tb2; select count(*),  channel from tb3 group by channel having count(*) >  0; select * from tb3 order by episode asc limit 5;<separator> select t2.series_name,  t3.country from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel intersect select title,  directed_by from cartoon where written_by!= "ben jones" or directed_by!= "mich<separator> select t2.series_name,  t3.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel join tv_series as t3 on t2.id  =  t3.channel where t1.directed_by like "%ben<separator> select t2.pixel_aspect_ratio_par,  t3.nation from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel intersect select country from tv_channel where language!= 'english';select * from tv_channel except<separator> select t2.pixel_aspect_ratio_par,  t3.country from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel intersect select content from tv_channel where language!= 'english';select t3.country from tv_<separator> select t2.id from tv_channel as t1 join tv_channel as t2 on t1.country !=  t2.country group by country having count(*)  >  2;select * from tv_channel order by country asc limit 3;--[output] channel --[0] usa -<separator> select id from tv_channel group by channel having count(*)  >  2;select t3.id from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel join cartoon as t3 on t2.id  =  t3.channel where t<separator> select t2.id from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.directed_by where t1.ben_jones  =   "yes";select distinct t3.id from tv_channel as t1 join tv_series as t2 on<separator> select t2.id from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.directed_by where t1.ben_jones  =   "yes"; except select id from tv_channel where ben_jones  =  'no'; select distinct channel<separator> select t2.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.directed_by like '%ben%';select distinct t3.package_option from tv_channel as t1 join tv_series as t2<separator> select t2.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.directed_by!= "ben jones";select distinct t3.package_option from tv_channel as t1 join tv_series as t<separator> select count(*) from poker_player;select count(*) from pokershow; select count(*) from pokertable; select count(*) from pokerstars; select count(*) from pokermasters; select count(*) from pokernations; select count(*) from pokerwinners; select count(*) from pokerlosers;<separator> select count(*) from poker_player;select count(distinct t1.people_id) from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id; select sum((t3.total_winnings - t4.total_<separator> select t2.earnings from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t2.earnings desc;
select name, nationality from people where birth_date >= '04/05/2019<separator> select sum(t2.earnings) from poker_player as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t2.earnings; select sum(t2.earnings) from poker_player as t1 join pok<separator> select t1.final_table_made,  t2.best_finish from poker_player as t1 join poker_tournament as t2 on t1.poker_player_id  =  t2.winner; select * from poker_tournament order by winner desc<separator> select t1.final_table_made,  t2.best_finish from poker_player as t1 join poker_tournament as t2 on t1.poker_player_id  =  t2.winner; select * from poker_tournament order by winner desc<separator> select avg(t2.earnings) from poker_player as t1 join poker_player as t2 on t1.people_id  =  t2.people_id; select avg(earnings); -> 305649.78  (1 row affected) execute<separator> select avg(t2.earnings) from poker_player as t1 join poker_player as t2 on t1.people_id  =  t2.people_id; select avg(t2.earnings); ---------------------  (0.37594689<separator> select money_rank from poker_player order by best_finish desc limit 1;select t2.best_finish,  t3.money_rank from poker_player as t1 join final_tables as t2 on t1.final_table_made  =  t2.final<separator> select money_rank from poker_player order by best_finish desc limit 1;select t2.money_rank from poker_player as t1 join poker_tournament as t2 on t1.final_table_made  =  t2.winner where t1.best<separator> select max(t1.final_table_made) from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id where t2.earnings <  200000; select * from poker_player order by best_fin<separator> select max(t1.final_table_made) from poker_player as t1 join earning as t2 on t1.people_id  =  t2.people_id where t2.earnings <  200000; select * from poker_player order by best_<separator> select name from poker_player;select t1.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id; select distinct name from poker_player; select count(*),  max(t3.best_finish),<separator> select name from people where people_id in (select people_id from poker_player); select t1.name,  t2.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id; select * from people order by birth<separator> select t1.name from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id where t1.earnings >  300000;select name from people order by birth_date desc limit 5;select * from people except<separator> select t1.name from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id where earnings >  300000;select name from people order by birth_date desc limit 5;select * from people except select * from<separator> select name from poker_player order by best_finish; select t1.name,  t2.best_finish from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t2.best_finish asc;<separator> select t1.name from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by best_finish desc; select name from people where people_id in (select people_id from poker_player group by people_id order by<separator> select t1.birth_date from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t2.earnings asc limit 1; select * from people where money_rank!= '0'; select name, nationality from people<separator> select t1.birth_date from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t2.earnings asc limit 1; select * from people where name like "%john%"; select * from people where nationality<separator> select t2.money_rank from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id where height  >  180;select best_finish,  earnings from poker_player order by final_table_made desc<separator> select t2.money_rank from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.height desc limit 1;
select name, nationality from people where birth_date >= '04/05/<separator> select avg(t1.earnings) from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id where t2.height >  200; select avg(t1.earnings) from poker_player as t1<separator> select avg(t1.earnings) from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id where height  >  200;select avg(t1.earnings) from poker_player as t1 join people<separator> select name from poker_player order by money_rank desc;

select t1.name,  t2.tournament from tournament as t1 join final_tables as t2 on t1.tournament_id  =  t2.tournament where best_finish!= "did not<separator> select name from poker_player order by money_rank desc;
\end{code}<separator> select distinct t1.nationality,  count(*) from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id group by t1.nationality; select * from people order by birth_date desc limit 5; select name, <separator> select count(*),  nationality from people group by nationality;select count(*),  nationality from people where name like '%t%'; select * from people order by birth_date desc limit 10; select t2.name,  t3.name from people as t1 join people as t2 on t<separator> select t1.nationality from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id group by t1.nationality order by count(*) desc limit 1;select max(t3.nationality),  count(*) from<separator> select t1.nationality from people as t1 join (select nationality from people group by nationality having count(*)  >   count(distinct nationality) / len(t2.nationality)) as t2 on t1.nationality  =  t2.nationality; select *<separator> select distinct t1.nationality from people as t1 join people as t2 on t1.nationality  =  t2.nationality group by t1.nationality having count(*) >=  2;select * from people where name like "%john%";select * from people where height between<separator> select distinct t1.nationality from people as t1 join people as t2 on t1.nationality  =  t2.nationality group by t1.nationality having count(*)  >=  2;select * from people where name like '%t%';select * from people except select *<separator> select t1.name,  t2.birth_date from people as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.name; select * from people order by name; select * from people where nationality!= 'english'; select<separator> select name,  birth_date from people order by name; select t1.name,  t2.birth_date from people as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.name asc; select distinct name,  birth_<separator> select name from people where nationality!= 'russia'; select * from people except select t1.name,  t2.name from people as t1 join people as t2 on t1.people_id  =  t2.people_id; select distinct name from people; select count(*) from people group<separator> select name from people where nationality!= "russian";select t1.name,  t2.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id except select distinct t3.name from people as t1 join poker<separator> select name from people where people_id not in (select people_id from poker_player); select t1.name,  t2.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id except select distinct t3.name<separator> select name from people where people_id not in (select people_id from poker_player); select t1.name,  t2.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id except select name from people; select<separator> select count(distinct nationality) from people;select count(*) from people where birth_date  >   '2015-06-30'; select * from people order by name asc limit 4; select t1.*,  t2.name from people as t1 join poker_player as<separator> select count(distinct nationality) from people;select distinct nationality from people;coalesce (count(*), 0); select max(t1.height) from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id group by t<separator> select count(*) from area_code_state;  select count(*) from area_code_state; -> 10; select sum(t2.count),  t3.state from area_code_state as t1 join votes as t2 on t1.area_code  =  t2.state<separator> select t1.contestant_number,  t2.contestant_name from contestants as t1 join contestants as t2 on t1.contestant_number  =  t2.contestant_number order by t2.contestant_name desc; select * from contestants<separator> select t1.vote_id,  t2.phone_number,  t3.state from votes as t1 join contestants as t2 on t1.contestant_number  =  t2.contestant_number join area_code_state as t3 on t1.state  =<separator> select max(area_code),  min(area_code) from area_code_state;select max(area_code),  min(area_code) from area_code_state;max(area_code),  min(area_code) as (select max(t1.area_<separator> select max(t2.created) from votes as t1 join area_code_state as t2 on t1.state  =  t2.state where t1.state  =  "ca"; select max(created) from votes where state  =  "ca"; select * from area_code_state<separator> select distinct t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number where t1.contestant_name!= "jessie alloway";select count(*),  state from votes group by<separator> select state,  created from votes group by state;select t1.state,  t2.created from votes as t1 join area_code_state as t2 on t1.state  =  t2.state; select * from area_code_state order by created asc limit 5; select count(*)<separator> select t1.contestant_number,  t2.contestant_name from contests as t1 join contestants as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number having count(*)  >=  2<separator> select t1.contestant_number,  t2.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number order by count(*) asc limit 1<separator> select count(*),  t2.state from votes as t1 join area_code_state as t2 on t1.state  =  t2.state where t1.state in ('ny','ca'); select count(*),  t2.state from votes as t1 join area_code_state as t<separator> select count(*) from contestants where contestant_number!= (select max(t1.contestant_number) from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number group by vote_id); select count(*) from contestants<separator> select t1.area_code from area_code_state as t1 join votes as t2 on t1.area_code  =  t2.state group by t1.area_code order by count(*) desc limit 1;
select * from area_code_state where state  =  (select<separator> select t1.create,  t2.state,  t3.phone_number from votes as t1 join contestants as t2 on t1.contestant_number  =  t2.contestant_number where t2.contestant_name  =  "tabatha geh<separator> select t1.area_code from area_code as t1 join votes as t2 on t1.area_code  =  t2.state where t2.contestant_number  =  "tabatha gehling" intersect select t1.area_code from area_code as t1<separator> select t1.contestant_name from contestants as t1 join (select distinct contestant_name from contestants where name like '%al%') as t2 on t1.contestant_name  =  t2.contestant_name; select * from contestants where name like "%al%<separator> select name from country where indepyear >= 1950; select t3.name,  t4.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join country as t3 on t2.countrycode  =  t3.code<separator> select name from country where indepyear >=  1950; select t3.name,  t4.name from country as t1 join country as t2 on t1.code2  =  t2.code union all select t1.name,  t2.name from country as t1 join<separator> select count(*) from country where governmentform  = 'republic'; select * from country where governmentform  =  "republic"; select t1.name,  t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.code join country as t3<separator> select count(*) from country where governmentform  = 'republic'; select * from country where governmentform  =  "republic"; select t1.name,  t3.name as district from city as t1 join country as t2 on t1.countrycode  =  t2.code join district as<separator> select sum(surfacearea) from country where continent  =  "caribbean"; select t1.name,  t3.surfacearea from country as t1 join countrylanguage as t2 on t1.code  =  t2.code join country as t3 on t2.countrycode  =<separator> select sum(surfacearea) from country where continent  =  "caribbean"; select t1.name,  t3.surfacearea from country as t1 join countrylanguage as t2 on t1.code  =  t2.code join country as t3 on t2.countrycode  =<separator> select t1.continent from country as t1 join countrylanguage as t2 on t1.code  =  t2.code where t2.isofocial  =  1; select distinct name, code from country except select * from countrylanguage; select count(*),  avg(t3.pop<separator> select t1.continent from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofocial  =  1 and t2.language  =  'english' intersect select distinct t3.continent from country as t1 join<separator> select t1.region from country as t1 join city as t2 on t1.code  =  t2.countrycode where name  =  "kabul"; select distinct district from city; select * from country except select code,  name from country language; select count(*),  avg(population<separator> select region from country where name  =  "kabul"; select distinct t1.region from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language  =  'english'; select distinct t3.region from country as t1 join countrylanguage as<separator> select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  >  0 group by t1.language order by count(*) desc limit 1;select * from countrylanguage where percentage  >  0;select name<separator> select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where name  =  "aruba" group by t1.language order by count(*) desc limit 1; select * from countrylanguage where percentage >=.50; select * from<separator> select t1.population,  t3.lifeexpectancy from city as t1 join country as t2 on t1.countrycode  =  t2.code where t2.name  =  "brazil"; select t4.lifeexpectancy from country as t1 join countrylanguage as t2 on<separator> select t1.population,  t3.lifeexpectancy from city as t1 join country as t2 on t1.countrycode  =  t2.code where name  =  "brazil" join country as t3 on t2.code  =  t3.code; select gnp,<separator> select t1.region,  count(*) from country as t1 join city as t2 on t1.code  =  t2.countrycode where name like "angola" group by t1.region; select district,  pop from city order by pop desc limit 5; select * from country except select code<separator> select continent,  pop from country where name like "angola" order by pop desc limit 1;select t3.continent,  count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join country as t3 on t1.code  =<separator> select avg(t1.lifeexpectancy) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code where continent  =  "central africa"; select avg(t1.lifeexpectancy) from country as t1 join countrylanguage as t2 on t<separator> select avg(t1.lifeexpectancy) from country as t1 join country as t2 on t1.continent  =  'central africa' intersect select avg(t3.lifeexpectancy) from country as t4 join country as t5 on t4.continent  =  'central<separator> select t1.name from country as t1 join country as t2 on t1.continent  =  'asia' where t2.lifeexpectancy  <  (select min(t3.lifeexpectancy) from country as t3); select * from country except select distinct code; select count(*), <separator> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where continent  =  "asia" order by lifeexpectancy limit 1; select * from country language except select distinct(t3.language) from countrylanguage as t1 join country<separator> select sum(t1.population),  max(t3.gnp) from city as t1 join country as t2 on t1.countrycode  =  t2.code where continent  =  "asia"; select * from country; select * from countrylanguage; select count(*),  avg<separator> select sum(t1.population),  max(t3.gnp) from city as t1 join country as t2 on t1.countrycode  =  t2.code where continent  =  "asia"; select count(*),  max(gnp) from country group by code order by g<separator> select avg(t1.lifeexpectancy) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code where continent  =  "africa" and governmentform  = 'republic';; select sum((select population from city ) / (select count(*) from<separator> select avg(t1.lifeexpectancy) from country as t1 join country as t2 on t1.continent  =  'africa' where t2.governmentform  =  "republic";; select name,  continent,  region,  surfacearea,  gnp, <separator> select sum(t1.surfacearea) from continent t1 join country  on t1.continent  =  t1.continent where t1.continent  =  "asia" or t1.continent  =  "europe"; select sum(t1.surfacearea) from continent<separator> select sum(surfacearea) from country where continent  =  "asia" union select sum(surfacearea) from country where continent  =  "europe"; select sum(surfacearea) from country where continent  =  "asianorthamerica"; select sum(surfacearea) from country where continent<separator> select count(*) from city where district  =  "gelderland"; select population from city; select name,  surfacearea from country; select * from country as t1 join countrylanguage as t2 on t1.code  =  t2.code except select code,  language from countrylanguage order by percentage desc limit<separator> select sum(t1.population) from city as t1 join district as t2 on t1.district  =  t2.district where name  =  "gelderland"; select count(*),  avg(population) from city group by district; select max(population) from city<separator> select avg(gnp),  sum (t1.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code where t2.isoofficial  =   "yes" and t1.governmentform  =  'us territory';<separator> select avg(gnp),  sum (t1.population) from country as t1 join country as t2 on t1.code2  =  t2.code where t2.continent  =  "north america" union all select avg(gnp), count(*) from country<separator> select count(distinct language) from countrylanguage; select sum((select distinct t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode)); select max(t3.percentage),  min(t4.percentage); select percentile_<separator> select count(distinct language) from countrylanguage; select sum((select count(*) from country where code != 'af' union select count(*) from country where code != 'ar' union select count(*) from country where code != 'be' union select count(*) from country where code != 'bg' union select count<separator> select count(*) from governmentform where continent  =  "africa"; select distinct t1.type from governmentform as t1 join country as t2 on t1.continent  =  t2.continent group by t1.type having count(*)  >  3; select * from country except select code,<separator> select count(distinct governmentform) from country where continent  =  "africa"; select distinct governmentform from country; select t1.governmentform,  count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code group by t1.govern<separator> select sum(t1.percentage) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where name like "aruba"; select count(*) from country; select count(*) from countrylanguage; select count(*) from city; select count(*) from countrylanguage where language!=<separator> select count(*) from countrylanguage where language  =  'aruban'; select sum(t1.population),  t3.continent from country as t1 join country as t2 on t1.code  =  t2.code intersect select continent from countrylanguage group by code; select distinct name from<separator> select count(*) from countrylanguage where language  =  'afghani' or isofficial  =  1; select count(*) from countrylanguage where code  =  "AFG"; select count(*) from countrylanguage where isofficial  =  1; select count(*) from countrylanguage where language  =  'eng<separator> select count(*) from countrylanguage where language  =  'afghani' or isofficial  =  1; select count(*) from countrylanguage where code  =  "af"; select count(*) from countrylanguage where language  =  'english'; select count(*) from countrylanguage where isofficial  =  0<separator> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.name order by count(*) desc limit 1;
select * from country where code2!=''; except select * from country where code2 like '% %'; select<separator> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.name order by sum(t2.percentage) desc limit 1;
select * from country where code2!=''; except select * from country where code<separator> select t1.continent from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.continent order by count(*) desc limit 1; cont: europe; select * from country where code in (select distinct code from countrylanguage); select name,<separator> select t1.continent from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.continent order by count(*) desc limit 1; contient; european; select * from country where code in (select distinct code from countrylanguage); select<separator> select count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language  =  "english" intersect select count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language  =<separator> select count(*) from countrylanguage where language  =  'english' intersect select count(*) from countrylanguage where language  =  'dutch'; select sum(t1.population),  t2.continent from country as t1 join country as t2 on t1.code  =  t2.<separator> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language  =  "english" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode<separator> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language  =  'english' intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode<separator> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode intersect select name from countrylanguage where language  =  'english' intersect select name from countrylanguage where isofficial  =  'french';- select * from country except select<separator> select t1.name from country language as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where isofficial  =  "english" intersect select t1.name from country language as t1 join countrylanguage as t2 on t1.code  =  t<separator> select count(distinct continent) from countrylanguage where language  =  "chinese"; select t1.continent,  count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.continent; select * from country except select code<separator> select count(*) from country where language  =  "chinese"; select t1.continente from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.continente having sum(t2.percentage) >=.5; select distinct<separator> select region from country where language  =  'english' intersect select region from country where language  =  'dutch'; select distinct t1.region from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.region having count(*)  ><separator> select region from country where language  =  "english" intersect select region from country where language  =  "dutch"; select distinct t1.region from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.region having count(*) >=  <separator> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2<separator> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  'english' intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2<separator> select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.continent  =  "asian" group by t1.language order by count(*) desc limit 1; select * from countrylanguage except select t3.language<separator> select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where continent  =  "asia" group by t1.language order by count(*) desc limit 1;select * from country except select code,  name from country; select distinct t<separator> select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage!= '0' except select distinct language from country; select * from countrylanguage group by language having count(*)  >  1; select t3.language,<separator> select language from countrylanguage where code  = 'republic' group by language having count(*)  =  1;select t3.language,  t4.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join country as t3 on t1<separator> select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where language  =  'english'; select name, district, pop from city order by pop desc limit 1; select * from city except select id from city; select count(*)<separator> select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where language  =  'english';; select name, population from city order by population desc limit 1; select max(t3.population) from city as t1<separator> select t1.name,  t1.population,  t3.lifeexpectancy from country as t1 join country as t2 on t1.code2  =  t2.code where continent  =  "asia" group by t1.code order by surfacearea desc limit 1; select *<separator> select t1.name,  t1.population,  t3.lifeexpectancy from country as t1 join country as t2 on t1.continent  =  t2.continent where continent  =  "asia" group by t1.continent order by t2.population desc limit<separator> select avg(t1.lifeexpectancy) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode except select t1.lifeexpectancy; select avg(t1.lifeexpectance); except select t1.lifeexpectency; select avg(<separator> select avg(t1.lifeexpectancy) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language!= "english"; select avg(t1.lifeexpectancy) from country as t1 join countrylanguage as t2 on<separator> select sum(t1.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language!= 'english'; select count(*),  name from country except select * from country where language!= 'english' group by name; select count(*),<separator> select count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language!= 'english'; select * from country; select name,  code from country where language!= "english"; select population from city group by district; select sum(t3.pop<separator> select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where headofstate  =  "beatrix"; select * from country; select name, continent, region, surfacearea, lifeexpectancy, gnp, gnpold,<separator> select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.headofstate  =  "beatrix"; select * from country; select * from countrylanguage; select count(*),  max(t3.percentage)<separator> select count(distinct language) from country where indepyear <  1930; select sum((select distinct t4.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join country as t3 on t1.code  =  t3<separator> select count(distinct language) from country where indepyear <  1930; select sum((select count(*) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where indepyear  <  1930)); select max(t4.<separator> select t1.name from country as t1 join country as t2 on t1.continent!= "europe" intersect select name from country where continent  =  'europe';; select * from country except select code,  name from country where continent  =  'europe' union select * from country language<separator> select t1.name from country as t1 join country as t2 on t1.continent!= "europe" intersect select name from country where continent  =  'europe';; select * from country except select code,  name from country where continent  =  'europe' union select * from country language<separator> select t1.name from country as t1 join city as t2 on t1.code  =  t2.countrycode where continent  =  "africa" intersect select name from country except select name from country where continent  =  'asia'; select * from country where continent  =  "africa";<separator> select t1.name from country as t1 join country as t2 on t1.code!= t2.code where continent  = 'africa' intersect select name from country except select name from country where continent  = 'asia'; select * from country order by lifeexpectancy; select count(*),  avg(<separator> select t1.name from country as t1 join city as t2 on t1.code  =  t2.countrycode where t1.continent!= "africa" intersect select name from country except select name from country where continent!= 'asia'; select * from country order by gnp; select * from country<separator> select t1.name from country as t1 join city as t2 on t1.code  =  t2.countrycode where continent  =  "asia" intersect select name from country except select name from country where continent  =  'africa'; select * from country where continent  =  "asiamiddle<separator> select t1.code from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language!= 'english'; select code from country where name like '%english%'; select * from country except select id,  name,  continent,  region,  surfacearea<separator> select t1.code from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language!= 'english'; select code from country where name like '%england%'; select * from country except select id,  name,  continent,  region,  surfacearea<separator> select t1.country from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t2.language having count(*) >  0;select distinct code from country language!= 'english'; select * from country except select * from country where population <= 50<separator> select t1.country from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language!= 'english'; select * from country; select count(*),  sum(t3.percentage) from countrylanguage as t1 join country as t2 on t1<separator> select code from country where language!= 'english' intersect select t1.code from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode except select t3.code from country as t3 join countrylanguage as t4 on t3.code  =  t4<separator> select code from country where language!= 'english' except select t1.code from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language == "english"; with t3 as (select distinct capital from country) select t4.code from<separator> select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode except select name from city where district!= "europe" intersect select name from countrylanguage where language!= 'english'; select * from country where continent == 'europe' except select<separator> select name from city where district != "europe" except select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language !=  'english';; select * from country where continent  =  'africa'<separator> select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.language  =  "chinese" intersect select name from city except select distinct name from city; select count(*),  sum(t3.population) from<separator> select distinct name from city where continent  =  "asia" intersect select t1.name from countrylanguage as t1 join city as t2 on t1.countrycode  =  t2.countrycode except select distinct name from city; union select distinct name from countrylanguage as t1 join city as t2 on t<separator> select t1.name,  t1.independenceyear,  t3.surfacearea from country as t1 join countrylanguage as t2 on t1.code  =  t2.code join country as t3 on t1.code  =  t3.code where t3.pop<separator> select t1.name,  t1.indepyear,  t3.surfacearea from country as t1 join countrylanguage as t2 on t1.code  =  t2.code join country as t3 on t1.code  =  t3.code where t1.population<separator> select t1.population,  t1.name,  t3.leader from country as t1 join country as t2 on t1.code2  =  t2.code where t2.surfacearea  >   (select max(t4.surfacearea) from country as t4<separator> select t1.name,  t1.population,  t3.headofstate from country as t1 join country as t2 on t1.code  =  t2.code where t2.surfacearea  >  (select max(t4.surfacearea) from country as t4<separator> select t1.name, count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.name having count(*) >=  3; select * from country where language  >  0; select distinct(t4.name) from country as t<separator> select t1.name, count(*) from country language as t1 join country as t2 on t1.code  =  t2.code group by t1.name having count(*)  >  2;select name, percentage from countrylanguage order by percentage desc limit 5;%sql select * from country where code<separator> select count(*),  t1.district from city as t1 join city as t2 on t1.district!= t2.district group by t1.district having avg(t1.population) > (select avg(population) from city); select * from city where popgt<separator> select count(*),  t1.district from city as t1 join (select avg(population),  district from city group by district ) as t2 on t1.district!= t2.district where t1.population > t2.avg; select * from city order by name<separator> select t1.govform,  sum(t3.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  'eng<separator> select distinct t1.governmentform,  sum(t3.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =<separator> select t1.continent,  avg(t3.lifeexpectancy),  sum(t4.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code join country as t3 on t1.code  =  t3.code<separator> select t1.continent,  sum(t3.population),  avg(t4.lifeexpectancy) from continent as t1 join country as t2 on t1.continentcode  =  t2.continentjoin population as t3 on t2.code  =  t3<separator> select name,  surfacearea from country order by surfacearea desc limit 5; select t1.name,  t3.surfacearea from country as t1 join country as t2 on t1.code2  =  t2.code union all select t4.name,  t6.surfacearea<separator> select name,  surfacearea from country order by population desc limit 5; select t1.name,  t2.surfacearea from country as t1 join country as t2 on t1.code  =  t2.code where t1.population in (select max(t3.population)<separator> select name from country order by population desc limit 3; select t1.name,  count(*) as total from city as t1 join country as t2 on t1.countrycode  =  t2.code group by t1.name having sum(total)  >   (select max(t4.pop<separator> select name from country order by population desc limit 3; select t1.name,  count(*) as pop from city as t1 join country as t2 on t1.countrycode  =  t2.code group by t1.countrycode order by pop asc limit 3; select distinct t4.name from<separator> select name from country order by population asc limit 3; select t1.name,  t2.name from country as t1 join district as t2 on t1.district  =  t2.id where pop <= (select min(t4.pop) from city as t1 join district as t2<separator> select name from country order by population desc limit 3; select t1.name,  count(*) as total from city as t1 join country as t2 on t1.countrycode  =  t2.code group by t1.countrycode having sum(t2.population)  <=  50;<separator> select count(*) from country where continent  =  "asia"; select count(*) from country; select distinct t1.continent,  count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.continent; select * from country except select<separator> select count(*) from country where continent  =  "asia"; select * from country except select t1.name,  t2.name from country as t1 join country as t2 on t1.continent  =  t2.continent; select distinct name from country order by name asc limit 5; select<separator> select name from country where continent  =  "europe" intersect select t1.name from country as t1 join city as t2 on t1.code  =  t2.countrycode group by t1.name having count(*)  >=  80000;
select *,  popfrom /<separator> select name from country where continent  =  "europe" intersect select t1.name from country as t1 join city as t2 on t1.code  =  t2.countrycode where t2.population   =  80000; select distinct t3.name,  t4.<separator> select sum(t1.population),  avg(t1.surfacearea) from country as t1 join country as t2 on t1.continent  =  'north america' where t2.surfacearea  >  3000; select count(*),  avg<separator> select sum(t1.population),  avg(t2.surfacearea) from country as t1 join country as t2 on t1.code2  =  t2.code where continent  =  "north america" and surfacearea  >  3000; select count<separator> select name from city where population between 160000 and 900000; select t3.name,  t4.name from district as t1 join city as t2 on t1.districtjoincity as t3 join country as t4 on t3.countryjoincountry as<separator> select name from city where population between 160000 and 900000; select t3.name from district as t1 join city as t2 on t1.districtjoincity as t3 where t2.population between 160000 and 900<separator> select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.language order by count(*) desc limit 1;select * from country where code2!=''; select name, continent, region from country; select gnp, g<separator> select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.language order by count(*) desc limit 1;select * from country where code2!=''; select name, continent, region from country; select gnp, g<separator> select t1.language,  count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.language order by count(*) desc limit 5;select * from country where population  >  30000000;select name<separator> select t1.code,  t3.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code order by count(*) desc limit 5; union all select t4.code,  t4.language from country as t1<separator> select count(*) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where language  =  "spanish" group by percentagelanguage order by percentagelanguage desc limit 1; select * from countrylanguage where language  = 'spanish' order<separator> select count(*) from countrylanguage where language  =  "spanish"; select * from country; select t1.name,  t2.name from country as t1 join district as t2 on t1.district  =  t2.id order by t1.name asc; select name,  population from<separator> select t1.code from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t2.language order by count(*) desc limit 1;-[spanish, 0.95]; select * from country language where name like '%spanish%';<separator> select t1.code from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where percentage  >  0.75; select code from countrylanguage group by percentagegt 0.75; select * from countrylanguage order by percentage desc limit 3<separator> select count(*) from conductor;-> 10;
select t2.title,  t3.author from book as t1 join author as t2 on t1.book_authors_id  =  t2.author_id join title as t3 on t2.title_id  = <separator> select count(*) from conductor;-> 106;
select t2.title,  t3.author from book as t1 join author as t2 on t1.book_authors_id  =  t2.author_id join title as t3 on t2.title_id  =<separator> select name from conductor order by age;-[email protected]:~/db$ select t1.name,  t2.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id order by t1.age;-<separator> select name from conductor order by age;->  select t1.name from conductor as t1 join (select distinct name from conductor) as t2 on t1.name  =  t2.name order by t1.age;- except select * from conductor where nationality!= 'italian';<separator> select name from conductor where nationality!= 'usa';select t1.name,  t2.title from title as t1 join book as t2 on t1.book_id  =  t2.book_id order by t1.position; select * from book group by position asc limit 5;<separator> select name from conductor where nationality!= 'usa'; select t1.name,  t2.title from title as t1 join book as t2 on t1.book_id  =  t2.book_id order by t1.position; select * from book group by position asc limit 5;<separator> select distinct t2.record_company from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id order by t1.year_of_founded;-[select distinct t2.record_company from orchestra as t1 join performance as<separator> select distinct t2.record_company from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id order by t1.year_of_founded desc;) select * from orchestra where year_of_founded <= (select max(<separator> select avg(t1.attendace) from show as t1 join performance as t2 on t1.performance_id  =  t2.performance_id; select count(*),  sum(t3.share)/count(* ) from performance as t1 join show as t2 on t1.<separator> select avg(t1.attendances) from show as t1 join performance as t2 on t1.performance_id  =  t2.performance_id; select count(*),  sum(t3.attendances)/count(* ) from show as t1 join performance as t2 on t1<separator> select max(t2.share),  min(t1.share) from performance as t1 join show as t2 on t1.performance_id  =  t2.performance_id where t1.type!= 'live final';select max(t3.share),  min(t<separator> select max(t2.share),  min(t1.share) from performance as t1 join show as t2 on t1.performance_id  =  t2.performance_id where t1.type!= 'live final';select max(t3.share),  min(t<separator> select count(distinct nationality) from conductor;select distinct nationality from conductor;coalesce (count(*), 0); select sum((select count(*) from conductor where nationality!= "italian") + (select count(*) from conductor where nationality!= "german" )+ (select count<separator> select count(distinct nationality) from conductor;select distinct nationality from conductor;coalesce (count(*), 0); select sum((select count(*) from conductor where nationality!= "italian") + (select count(*) from conductor where nationality!= "german" )+ (select count<separator> select name from conductor order by year_of_work desc;
select t1.name from conductor as t1 join performance as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name order by count(*) asc limit 1;
select<separator> select name from conductor order by year_of_work desc; except select t1.name,  count(*) from conductor as t1 join performance as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name having count(*)  >  3<separator> select t1.name from conductor as t1 join (select max(t2.year_of_work),  t1.conductor_id from conductor as t2 group by t2.conductor_id ) as t3 on t1.conductor_id  =  t<separator> select t1.name from conductor as t1 join (select max(t2.year_of_work),  t3.conductor_id from conductor as t2 join performance as t3 on t2.conductor_id  =  t3.conductor_id group by<separator> select t1.name,  t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id;- except select distinct name from conductor intersect select distinct name from orchestra; select count(*) from conductor group<separator> select t1.name,  t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id; select name from conductor order by age asc limit 5; select * from conductor where nationality!= '<separator> select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name having count(*)  >  1;
select name from conductor where conductor_id in (select distinct conductor<separator> select name from conductor where conductor_id in (select distinct t1.conductor_id from orchestra as t1 join performance as t2 on t1.conductor_id  =  t2.conductor_id group by t1.conductor_id having count(*)  ><separator> select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.conductor_id order by count(*) desc limit 1;
select t1.name from conductor as t1<separator> select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.conductor_id order by count(*) desc limit 1;) select * from orchestra where major_record_format<separator> select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id where year_of_work >  2008;-[select distinct t3.name,  t4.title from conductor as<separator> select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id where t2.year_of_founded >= 2009;select name from conductor order by age asc limit 5;select<separator> select distinct t1.record_company,  count(*) from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id group by t1.record_company;select * from orchestra order by year_of_founded asc limit 5;<separator> select count(*),  record_company from orchestra group by record_company;select t1.title,  t2.record_company from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id order by title asc; select * from or<separator> select major_record_format from orchestra group by major_record_format order by count(*) desc;select t1.major_record_format,  count(*) from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id group by t1<separator> select distinct t2.major_record_format from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id group by t2.major_record_format order by count(*) desc;) select * from orchestra where year_of_founded<separator> select distinct t2.record_company from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id group by t2.record_company order by count(*) desc limit 1;coalesce(distinct t2.record_company, "<separator> select record_company from orchestra group by record_company order by count(*) desc limit 1;) select t2.title,  t3.author from book as t1 join author as t2 on t1.book_authors_id  =  t2.author_id join title as t3 on<separator> select distinct t2.orchestra from performance as t1 join orchestra as t2 on t1.orchestra_id  =  t2.orchestra_id where t1.performance_id is null;select distinct t2.orchestra from performance as t1 join orchestra as t2 on t1<separator> select t1.orchestra from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id where t2.orchestra_id is null; select distinct t3.orchestra from orchestra as t1 join performance as t2 on t1.<separator> select distinct t1.record_company from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id where year_of_founded <  2003 intersect select distinct t1.record_company from orchestra as t1 join performance as<separator> select distinct t1.record_company from orchestra as t1 join orchestra as t2 on t1.orchestra_id!= t2.orchestra_id where year_of_founded < 2003 intersect select distinct t1.record_company from orchestra as t1 join orchestra as<separator> select count(*) from orchestra where major_record_format  =  'cd' union all select count(*) from orchestra where major_record_format  =  'dvd'; select count(*) from orchestra; select count(*) from performance; select count(*) from show; select sum(t2.share), <separator> select count(*) from orchestra where major_record_format  =  'cd' union all select count(*) from orchestra where major_record_format  =  "dvd"; select count(*) from orchestra; select count(distinct t1.title),  count(t2.author) from book as<separator> select year_of_founded from orchestra where record_company != "self" group by year_of_founded having count(*)  >  1;select t2.title,  t3.year_of_founded from orchestra as t1 join performance as t2 on t1.orchestra<separator> select distinct year_of_founded from orchestra where count(*)  >  1;select t2.year_of_founded from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id group by t1.orchestra_id having<separator> select count(*) from highschooler;-> 10;select * from highschooler order by id asc limit 5; -> t2, student_id, name, grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where liked_<separator> select count(*) from highschooler;-> 10;select * from highschooler order by id asc limit 5; -> select name, grade from highschooler order by id desc limit 3; select t2.name, t1.grade from highschooler as t1 join highschooler as t2<separator> select name,  grade from highschooler; select t1.name,  t2.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id order by t1.id asc; select student_id,  name,  grade from high<separator> select name,  grade from highschooler; select t1.name,  t2.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.id; select student_id,  name,  grade from highschool<separator> select grade from highschooler;-> select name,  grade from highschooler order by id asc; select t1.name,  t2.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name; select<separator> select grade from highschooler;-> select name,  grade from highschooler order by id asc; select t1.name,  t2.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.id; select<separator> select grade from highschooler where name  =  "kyle";-> grade -> t1.grade; select * from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where t1.name  =  "kyle" union all select *<separator> select grade from highschooler where name  =  "kyle";-> grade -> t1.grade; except select grade from highschooler as t2 join likes as t3 on t2.id  =  t3.student_id where t2.name  =  "kyle" limit 1<separator> select name from highschooler where grade  =  10; select t2.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where t1.grade  =  10; select student_id, count(*) from like group by<separator> select name from highschooler where grade  =  10; select t2.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where t1.grade  =  10; select distinct student_id, count(*) from like group<separator> select t1.id from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where name  =  "kyle";-> select t1.id from highschooler as t1 join likes as t2 on t1.id  = <separator> select t1.id from student as t1 join highschooler as t2 on t1.id  =  t2.student_id where name  =  "kyle";->  select t1.id from student as t1 join highschooler as t2 on t1.id  =  t<separator> select count(*) from highschooler where grade  =   '9' or grade  =   '10'; select count(*) from highschooler; select name,  grade from highschooler order by grade asc limit 2; select t3.name,  t4.grade from highschooler as t1 join<separator> select count(*) from highschooler where grade  =   "9" or grade  =   "10"; select name, grade from highschooler group by grade; select t2.name from highschooler as t1 join likes as t2 on t1.id  =  liked_id order by t<separator> select count(*),  grade from highschooler group by grade; select t1.name,  t2.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id order by t2.like_count desc limit 5; select name,<separator> select count(*),  grade from highschooler group by grade;select name,  grade from highschooler order by grade asc limit 10; select t2.name from highschooler as t1 join likes as t2 on t1.id  =  liked_id where student_id  =  <separator> select grade from highschooler group by grade order by count(*) desc limit 1;select t2.name,  max(t3.count) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id join highschooler as t3 on t<separator> select max(grade) from highschooler group by grade;select t1.grade,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.grade order by count(*) desc limit 1; select name from high<separator> select grade from highschooler group by grade having count(*) >= 4;select name, grade from highschooler where id in (select t1.student_id from like as t2 join highschooler as t1 on t2.student_id  =  t1.id group by student_id having count<separator> select grade from highschooler group by grade having count(*)  >=  4;select name, grade from highschooler where id in (select t1.student_id from like as t2 join highschooler as t1 on t2.student_id  =  t1.id group by t2.student<separator> select t1.student_id,  count(*) from friend as t1 join highschooler as t2 on t1.student_id  =  t2.id group by t1.student_id;select id, name from highschooler order by grade asc;select * from like where liked_id in<separator> select count(*),  t1.student_id from friend as t1 join highschooler as t2 on t1.student_id  =  t2.id group by t1.student_id;select name, grade from highschooler order by id asc; select * from like where liked_id in<separator> select name,  count(*) from student group by id;select t1.name,  sum(t2.count) from student as t1 join like as t2 on t1.id  =  t2.student_id group by t1.id; select grade,  count(*) from highschooler group<separator> select name,  count(*) from highschooler group by name;select t1.name,  sum(t2.count) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name; select student_id, <separator> select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id group by t1.name order by count(*) desc limit 1;) select * from like where student_id in (select id from highschooler); select grade, <separator> select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id group by t1.name order by count(*) desc limit 1;) select * from like where liked_id in (select id from highschooler); select grade, <separator> select name from highschooler where count(*) >= 3; select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.id having count(*)  >=  3; select distinct student_id, name from highschool<separator> select name from highschooler where count(*) >= 3; select t1.name,  t2.name from highschooler as t1 join highschooler as t2 on t1.id!= t2.id group by t1.name having count(*) >= 3; select distinct student_id from like<separator> select name from student as t1 join friend as t2 on t1.id  =  t2.student_id where t1.name  =  "kyle";; select distinct name from like as t1 join highschooler as t2 on t1.student_id  =  t2.id<separator> select name from highschooler where id  =  1; -> "kyle"; select t2.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id where t1.id  =  1; -------------------------- select * from like except<separator> select count(*) from friend where student_id  =  1;-> select name, grade from highschooler order by id asc limit 2; -> select t3.name, t4.grade from highschooler as t1 join like as t2 on t1.id  =  t2.student_id<separator> select count(*) from friend where student_id  =  1; -> 2; select t3.*,  t4.name from like as t1 join highschooler as t2 on t1.student_id  =  t2.id join friend as t3 on t1.liked_id <separator> select id from student where id not in (select t1.student_id from friend as t1 join highschooler as t2 on t1.student_id  =  t2.id); select * from like; select name, grade from highschooler order by grade asc limit 5; select count(*) from<separator> select id from highschooler where student_id not in (select t1.student_id from friend as t2 join highschooler as t1 on t2.student_id  =  t1.id); select * from highschooler except select distinct id from highschooler; select name, grade from high<separator> select name from highschooler where id not in (select student_id from friend); select t1.name from highschooler as t1 join like as t2 on t1.id  =  t2.student_id except select t3.name from highschooler as t3 join like as t4 on<separator> select name from student where id not in (select t1.student_id from friend as t1 join highschooler as t2 on t1.student_id  =  t2.id); select name from student; select grade from highschooler; select * from like except select liked_id,  student_<separator> select id from highschooler where student_id in (select t1.student_id from like as t2 join highschooler as t1 on t2.student_id  =  t1.id) union select id from highschooler; select * from highschooler except select distinct id from highschooler<separator> select t1.id from student as t1 join like as t2 on t1.id  =  t2.student_id where t1.id in (select id from friend); select t3.id from student as t1 join like as t2 on t1.id  =  t2.student<separator> select t1.name from student as t1 join like as t2 on t1.id  =  t2.student_id where exists (select * from friend as t3 join highschooler as t4 on t3.student_id  =  t4.id where t4.id!= t1<separator> select name from highschooler where student_id in (select t1.student_id from like as t2 join highschooler as t1 on t2.student_id  =  t1.id); select name from highschooler; select * from like; select id,  name from highschooler;<separator> select t1.student_id,  count(*) from likes as t2 join highschooler as t1 on t2.student_id  =  t1.id group by t1.student_id;select name, grade from highschooler order by grade asc;select * from like where liked_id<separator> select count(*) from likes as t1 join highschooler as t2 on t1.student_id  =  t2.id; select * from like where liked_id in (select distinct liked_id from likes); select name, grade from highschooler order by grade asc limit 5; select *<separator> select name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.id; select name,  count(*) from highschooler where id in (select liked_id from likes); select grade from highschooler<separator> select name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name;); select student_id,  grade from highschooler order by id asc limit 5; select * from like where liked_id<separator> select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.id order by count(*) desc limit 1;) select student_id, max(count(*)) from likes group by student_id; select<separator> select t1.name from like as t2 join highschooler as t1 on t2.student_id  =  t1.id group by t2.student_id order by count(*) desc limit 1;) select max(t3.like_count),  t4.name from like as<separator> select name from student where id in (select t1.student_id from like as t1 join highschooler as t2 on t1.student_id  =  t2.id group by t1.student_id having count(*) >=  2); select name from student; select grade from highschooler;<separator> select name from highschooler where id in (select student_id from likes group by student_id having count(*) >= 2); select t1.name,  t2.name from highschooler as t1 join highschooler as t2 on t1.id!= t2.id where t1.<separator> select name from highschooler where grade  >  5 group by name having count(*)  >=  2;select t1.name,  t2.name from highschooler as t1 join highschooler as t2 on t1.id!= t2.id where t1.grade  >  5 group<separator> select name from highschooler where grade  >  5 group by name having count(*)  >=  2;select t1.name,  t2.name from highschooler as t1 join highschooler as t2 on t1.id!= t2.id where t1.grade  >  5 group<separator> select count(*) from likes where liked_id  =  1; select count(*) from likes where student_id  =  2; select count(*) from likes where liked_id  =  3; select count(*) from likes where liked_id  =  4; select count(*) from likes where liked<separator> select count(*) from likes as t1 join highschooler as t2 on t1.student_id  =  t2.id where name  =  "kyle"; select count(*) from likes; select * from like; select id, grade from highschooler order by grade asc limit 5; select<separator> select avg(t1.grade) from student as t1 join friend as t2 on t1.id  =  t2.student_id group by t1.id; select name, avg(grade) from highschooler group by id; select count(*) from like where liked_id in (select<separator> select avg(t1.grade) from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id; select name, avg(grade) from highschooler group by name; select student_id, count(*) from like where liked_id in (select<separator> select min(t1.grade) from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id where t2.friend_id is null; select name,min(grade) from highschooler group by name order by grade asc limit 1; select *<separator> select min(t1.grade) from highschooler as t1 join friend as t2 on t1.id !=  t2.student_id; select name,  grade from highschooler where id !=  (select student_id from like); select * from friend except select * from highschooler<separator> select state from owners intersect select state from professionals; select distinct t1.state from owners as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id; select distinct t3.state from owners as t1 join professionals as t2 on t1<separator> select state from owners intersect select state from professionals; select distinct t1.state,  t2.state from owners as t1 join professionals as t2 on t1.owner_id  =  t2.professional_id; select distinct t1.state,  t2.state from own<separator> select avg(t1.age) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id; select avg(t1.age) from dogs as t1 join treatments as t2 on t1.dog_id  =  t<separator> select avg(t1.age) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id; select count(*),  avg(t1.age) from dogs as t1 join treatments as t2 on t1.dog_id<separator> select professional_id,  last_name,  home_phone from professionals where street like '%indiana%' intersect select t1.professional_id,  t3.last_name,  t4.home_phone from treatments as t1 join professionals as t2 on t1.professional_<separator> select professional_id,  last_name,  home_phone from professionals where street like '%indiana%' intersect select t1.professional_id,  t2.last_name,  t3.home_phone from treats as t1 join professionals as t2 on t1.professional_<separator> select name from dogs where date_of_treatment < (select max(date_of_treatment) from treats as t2 join dogs as t1 on t1.dog_id  =  t2.dog_id group by t1.dog_id having count(*) >  100<separator> select name from dogs where date_spent_for_treatment < 1000; select t2.name,  count(*) as total_spend from treats as t1 join dogs as t2 on t1.dog_id  =  t2.dog_id group by t2.<separator> select distinct t1.first_name from owners as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id except select distinct t3.first_name from dogs as t4 join owners as t5 on t4.owner_id  =  t5<separator> select distinct t1.first_name from owners as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id except select distinct t3.first_name from dogs as t4 join owners as t5 on t4.owner_id  =  t5<separator> select t1.professional_id,  t2.role_code,  t3.email_address from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id join owners as t3 on t2.dog_id <separator> select professional_id,  last_name from professionals where professional_id not in (select t1.professional_id from treats as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id); select first_name,  last_name from<separator> select t1.owner_id,  t2.first_name,  t2.last_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by count(*) desc limit 1;);<separator> select t1.owner_id,  t2.first_name,  t2.last_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by count(*) desc limit 1;);<separator> select t1.professional_id,  t2.role_code,  t3.first_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id join owners as t3 on t2.owner_id <separator> select professional_id,  role_code,  first_name from professionals group by professional_id having count(*)  >=  2;); select t1.dog_id,  t3.treatment_type_code,  t4.treatment_type_description from dogs as t1 join<separator> select t1.breed_name from breeds as t1 join dogs as t2 on t1.breed_code  =  t2.breed_code group by t1.breed_name order by count(*) desc limit 1;); select * from dogs where abandoned_yn!= "y";<separator> select t1.breed_name from breeds as t1 join dogs as t2 on t1.breed_code  =  t2.breed_code group by t1.breed_name order by count(*) desc limit 1; select * from breeds where breed_name in (select<separator> select t1.owner_id,  t2.last_name from owners as t1 join treatments as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t2.cost_of_treatment) desc limit<separator> select t1.owner_id,  t2.last_name from owners as t1 join treatments as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t2.cost_of_treatment) desc limit<separator> select t1.treatment_type_description from treatment_types as t1 join treatments as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by cost_of_treatment order by sum(t2.cost_of_<separator> select t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by t1.total_cost order by t1.total_cost limit 1;<separator> select t1.owner_id,  t2.zip_code from owners as t1 join charges as t2 on t1.owner_id  =  t2.owner_id group by t2.zip_code order by sum(t2.charge_amount) desc limit 1; select *<separator> select t1.owner_id,  t2.zip_code from charges as t1 join owners as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t1.charge_amount) desc limit 1;
select<separator> select t1.professional_id,  t2.cell_number from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*) >=  2; select * from professionals where<separator> select professional_id,  max(cell_number) from professionals group by professional_id having count(*)  >=  2;);select t1.treatment_type_description,  t3.treatment_type_code from treatment_types as t1 join treatments as t2 on t1<separator> select t1.first_name,  t2.last_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where cost_of_treatment < (select avg(cost_of_treatment) from<separator> select t1.first_name,  t1.last_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where cost_of_treatment < (select avg(cost_of_treatment) from<separator> select t1.date_of_treatment,  t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id;-); select * from owners order by owner_id asc; select * from dogs<separator> select t1.date_of_treatment,  t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id;-); select * from owners order by owner_id asc; select * from dogs<separator> select t1.cost_of_treatment,  t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code;-); select count(*) from treat<separator> select t1.cost_of_treatment,  t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code;-); select count(*) from treat<separator> select t1.first_name,  t2.last_name,  t3.size_description from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id join sizes as t3 on t2.size_code  =  t3.<separator> select t1.first_name,  t2.last_name,  t3.size_description from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id join sizes as t3 on t2.size_code  =  t3.<separator> select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;- select * from owners order by last_name asc; select * from dogs order by date_of_birth desc limit<separator> select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;-);select distinct(t3.first_name),  count(*) from owners as t1 join dogs as t2<separator> select t1.name,  date_of_treatment from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id where t1.breed_code in (select breed_code from breeds group by breed_code order by count<separator> select t1.name,  date_of_treatment from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id where t1.breed_code in (select breed_code from breeds order by count(*) desc limit 1);<separator> select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id where t1.state  =  "virginia";; select * from owners except select * from owners where state!=<separator> select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id where state  =  "virginia";; select name from dogs order by name asc limit 5; select owner_id from<separator> select t1.date_arrived,  t2.date_departed from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id;- except select * from dogs where dog_id in (select dog_id from treatments); select<separator> select t1.date_arrived,  t2.date_departed from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id;- select * from dogs where abandoned_yn!= "y"; select name,  size_code,<separator> select t2.last_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id order by date_of_birth desc limit 1;); select first_name, last_name from owners where email_address!= '' group by first<separator> select t1.last_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id order by age asc limit 1;-[select first_name,  last_name from owners where owner_id  =  (select min(t<separator> select email_address from professionals where street like '%hawaii%' or street like '%wisconsin%';; select first_name,  last_name from professionals order by professional_id asc; select t1.treatment_type_description from treatment_types as t1 join treatments as t<separator> select email_address from professionals where first_name like '%hawai%' intersect select email_address from professionals where first_name like '%wisconsin%';; select distinct t1.first_name,  t2.first_name from professionals as t1 join professionals as t2 on t1<separator> select t1.date_arrived,  t2.date_departed from dogs as t1 join treats as t2 on t1.dog_id  =  t2.dog_id;-); select count(*) from dogs where abandoned_yn!= 'y'; select sum(t3.<separator> select t1.date_arrived,  t2.date_departed from dogs as t1 join treats as t2 on t1.dog_id  =  t2.dog_id;-); select count(*) from dogs where abandoned_yn!= 'y'; select sum(t3.<separator> select count(*) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id; select count(*) from dogs where dog_id in (select dog_id from treatments); select sum(t3.cost_of_treatment),  count(*)<separator> select count(*) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id; select count(*) from dogs where abandoned_yn!= 'y'; select count(*) from dogs where gender!= "male"; select count(*) from dogs where age > (select max(age<separator> select count(*) from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having sum(t2.cost_of_treatment)!= 0;); select * from owners where first<separator> select count(*) from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*) >  0;); select * from professionals where professional_id in (select professional_id from treatments<separator> select t1.first_name,  t2.street,  t3.city,  t4.state from professionals as t1 join owners as t2 on t1.owner_id  =  t2.owner_id join cities as t3 on t2.city  =  t3<separator> select t1.role,  t2.street,  t3.city,  t4.state from professionals as t1 join owners as t2 on t1.owner_id  =  t2.owner_id join cities as t3 on t2.city  =  t3.city<separator> select t1.first_name,  t1.last_name,  t2.email_address from owners as t1 join professionals as t2 on t1.owner_id  =  t2.professional_id where t2.state like '% north';; select * from owners except<separator> select t1.first_name,  t2.last_name,  t3.email_address from owners as t1 join professionals as t2 on t1.owner_id  =  t2.professional_id join cities as t3 on t2.city  =  t3.<separator> select count(*) from dogs where age  < (select avg(age) from dogs); select count(*) from dogs where age  < (select avg(age) from dogs); select count(*) from dogs where age  < (select avg(age) from dogs); select count(*) from dogs where age  < (select<separator> select count(*) from dogs where age  < (select avg(age) from dogs); select count(*) from dogs where abandoned_yn!= "y"; select count(*) from dogs; select sum(t1.cost_of_treatment),  t2.treatment_type_code from treatments as<separator> select max(t1.cost_of_treatment) from treats as t1 join treatments as t2 on t1.treatment_id  =  t2.treatment_id;-[select max(cost_of_treatment) from treatments]; select max(cost<separator> select max(t1.cost_of_treatment) from treats as t1 join treatments as t2 on t1.treatment_id  =  t2.treatment_id order by date_of_treatment desc limit 1;); select * from dog_treat<separator> select count(*) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id where t2.treatment_type_code!= "none";; select sum(t3.cost_of_treatment) from treats as t1 join treat<separator> select count(*) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id where t2.treatment_type_code is null; select count(*) from dogs as t1 join treatments as t2 on t1.dog_id  = <separator> select count(*) from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id where abandoned_yn!= "y"; select count(*) from owners; select count(*) from dogs; select count(*) from treats; select count(*) from dog_treatments;<separator> select count(*) from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id except select * from owners; select count(*) from owners where owner_id not in (select owner_id from dogs); select count(*) from owners except select * from own<separator> select count(*) from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where t2.dog_id is null; select count(*) from professionals as t1 join treatments as t2 on t1.professional_id  =<separator> select count(*) from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where t2.dog_id is null; select count(*) from professionals as t1 join treatments as t2 on t1.professional_id  =<separator> select t2.name,  t3.age,  t4.weight from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id join size_codes as t3 on t1.size_code  =  t3.size_code join<separator> select t2.name,  t3.age,  t4.weight from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t1.abandoned_yn  =  1 intersect select t2.name,  t3.<separator> select avg(t1.age) from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id;-> select avg(t1.age) from dogs as t1 join owners as t2 on t1.owner_id  = <separator> select avg(t1.age) from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id; select avg(t1.age) from dogs as t1 join owners as t2 on t1.owner_id  =  t<separator> select max(t1.age) from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id;-[select max(t1.age) from dogs as t1 join owners as t2 on t1.owner_id  =  t<separator> select max(t1.age) from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id;-  select max(t1.age) from dogs as t1 join owners as t2 on t1.owner_id  =  t<separator> select t1.charge_type,  sum(t2.charge_amount) from charges as t1 join charges as t2 on t1.charge_id  =  t2.charge_id group by t1.charge_type;); select count(*) from charges; select count(*) from dogs; select count<separator> select t1.charge_type,  sum(t2.charge_amount) from charges as t1 join charges as t2 on t1.charge_id  =  t2.charge_id group by t1.charge_type;-);select count(*) from charges;-- 304 select count<separator> select max(t2.cost_of_treatment) from charges as t1 join treatments as t2 on t1.treatment_id  =  t2.treatment_id group by t1.charge_type;-[select max(t2.cost_of_treat<separator> select max(t2.charge_amount) from charges as t1 join charges as t2 on t1.charge_type  =  t2.charge_type order by t2.charge_amount desc limit 1;); select * from charges where charge_type  =  'boarding'; select * from<separator> select first_name,  last_name,  street,  city,  state,  zip_code,  email_address,  home_phone from professionals;);select t1.first_name,  t2.last_name,  t3.street,  t4.city,  t<separator> select t1.email_address,  t2.cell_number,  t3.home_phone from professionals as t1 join owners as t2 on t1.owner_id  =  t2.owner_id join professionals as t3 on t1.professional_id  = <separator> select distinct t1.breed_name,  t2.size_description from breeds as t1 join sizes as t2 on t1.size_code  =  t2.size_code;-);select distinct t3.treatment_type_description from treatment_types as t1 join treat<separator> select distinct t1.breed_type,  t2.size_type from dogs as t1 join sizes as t2 on t1.size_code  =  t2.size_code;- select distinct t1.breed_type,  t2.size_type from dogs as t1 join<separator> select t1.first_name,  t2.treatment_type_description from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id;-); select * from owners order by last_name asc; select * from dogs<separator> select t1.first_name,  t2.treatment_type_description from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id;- except select distinct(t3.treatment_type_description) from profession<separator> select count(*) from singer;select count(*) from singer; 2019 select count(*) from singer where birth_year  =  2019; select count(*) from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t<separator> select count(*) from singer;select count(*); 2019-03-18 15:47:06.996 UTC (1 row) 2019-03-18 15:47:06.996 UTC select count(*) from<separator> select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id order by t1.net_worth_millions; select * from singer order by birth_year desc; select count(*),  max(t3.sales<separator> select name from singer order by net_worth_millions;select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id order by t2.net_worth_millions desc; select distinct name, birth_year from singer<separator> select t1.birth_year,  t2.citizenship from singer as t1 join citizen as t2 on t1.citizen_id  =  t2.citizen_id; select * from singer where name like "%john%"; select count(*) from song where title like "%<separator> select t1.birth_year,  t2.citizenship from singer as t1 join citizen as t2 on t1.citizen_id  =  t2.citizen_id;- except select * from singer where name like '%taylor%'; select count(*) from song group by<separator> select t1.name from singer as t1 join citizen as t2 on t1.citizenship  =  t2.country where country!= 'france'; select * from singer except select * from citizen; select count(*),  max(t3.sales),  min(t4<separator> select name from singer where citizenship!= 'french';select t1.name from singer as t1 join citizen as t2 on t1.citizenship  =  t2.country except select t3.name from singer as t3 join citizen as t4 on t3.citizenship<separator> select t2.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t1.birth_year in (1948,  1949);select * from singer;select title,  sales from song order by<separator> select name from singer where birth_year in (select min(birth_year), max(birth_year) from singer); select t2.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.sing<separator> select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id order by t1.net_worth_millions desc limit 1;-> select t1.name from singer as t1 join song as t2 on t1<separator> select t1.name from singer as t1 join (select max(net_worth_millions),  name from singer group by name) as t2 on t1.name  =  t2.name; select * from singer order by net_worth_millions desc limit 1; select count(*) from<separator> select distinct t1.citizenship,  count(*) from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.citizenship;
\end{code}<separator> select count(*),  t2.country from citizen as t1 join singer as t2 on t1.country  =  t2.citizenship group by t1.country;select * from citizen order by country asc; select name, birth_year from singer where net_worth_millions ><separator> select t1.citizenship from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.citizenship order by count(*) desc limit 1;--output: canadian;select name, birth_year from singer<separator> select t1.citizenship from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.citizenship order by count(*) desc limit 1;---> select t1.citizenship from singer as t<separator> select t1.citizenship,  max(t2.net_worth_millions) from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.citizenship;
\end{code}<separator> select max(net_worth_millions),  citizenship from singer group by citizenship;select t1.name,  t2.max_net_worth from singer as t1 join (select name,  max(net_worth_millions) from singer group by citizenship) as t2 on t<separator> select title,  name from song; select t1.title,  t2.name from song as t1 join singer as t2 on t1.singer_id  =  t2.singer_id; select * from song order by highest_position desc limit 5; select * from song where sales<separator> select title,  name from song; select t1.title,  t2.name from song as t1 join singer as t2 on t1.singer_id  =  t2.singer_id; select distinct title from song order by highest_position desc limit 5; select count(*) from song<separator> select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t2.sales  >  300000;select name, count(*) from singer group by name having count(*)  >=  5; select<separator> select name from singer where sales  >  300000;select t1.name, count(*) as total from song as t1 join singer as t2 on t1.singer_id  =  t2.singer_id group by t1.singer_id having sum(t1<separator> select name from singer where count(*)  >  1;select t2.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.singer_id having count(*)  >  1;select distinct name from singer;<separator> select name from singer where count(*)  >  1;select t2.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.singer_id having count(*)  >  1; select distinct name from singer order<separator> select t1.name,  sum(t2.sales) from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.name; select name,  sum(sales) from song group by title; select count(*)<separator> select t1.name,  sum(t2.sales) from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.name;select count(*) from song where highest_position!= '0';select max(highest<separator> select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t2.song_id is null; select distinct t3.name from singer as t1 join song as t2 on t1.singer_id <separator> select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id except select name from song; select * from song where title!= "the best"; select * from song where sales > 5000000; select *<separator> select t2.citizenship from singer as t1 join citizen as t2 on t1.citizenship  =  t2.citizen_id where t1.birth_year <  1945 intersect select t2.citizenship from singer as t1 join citizen<separator> select distinct t2.citizenship from singer as t1 join citizen as t2 on t1.citizenship  =  t2.citizen_id where t1.birth_year <  1945 intersect select distinct t2.citizenship from singer as t1 join<separator> select count(*) from other_available_features;  select count(*) from other_available_features; -> 4096;select count(distinct feature_type_code) from other_available_features;->  5;select distinct property_type_code,  date_on_market from properties order by<separator> select t4.feature_type_name from other_available_features as t1 join ref_feature_types as t2 on t1.feature_type_code  =  t2.feature_type_code join other_property_features as t3 on t1.feature_id  =  t3<separator> select t4.property_type_description from properties as t1 join ref_property_types as t2 on t1.property_type_code  =  t2.property_type_code join ref_property_types as t3 on t2.property_type_code  =  t3.property<separator> select property_name from properties where (property_type_code  =   'house' or property_type_code  =   'apartment') and room_count  >  1;select distinct t4.property_name from properties as t1 join other_property_features as t2 on t1.