 select count(*) from singer;<separator> select count(*) from singer;<separator> select t1.name,  t2.country,  t3.age from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id order by t3.age;<separator> select name,  country,  age from singer order by age desc;<separator> select avg(t1.age),  min(t2.age),  max(t2.age) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where country  =  "france<separator> select avg(t1.age),  min(t2.age),  max(t2.age) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where country  =  "france<separator> select t1.song_name,  t2.song_release_year from singer as t1 join song as t2 on t1.song_name  =  t2.title where age  <  (select min(t3.age) from singer as t3);<separator> select t1.song_name,  t2.song_release_year from song as t1 join singer as t2 on t1.song_name  =  t2.song_name where is_male  =  "false" and age  <= (select min(t3.age) from singer<separator> select country from singer where is_male!= "t" and age >  20 group by country;<separator> select distinct country from singer where is_male!= "t" and age  >  20;<separator> select name,  count(*) from singer group by country;<separator> select count(*),  country from singer group by country;<separator> select t1.song_name from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where is_male!= 'f' intersect select t3.song_name from singer as t1 join singer_in_concert<separator> select t1.song_name from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where age > (select avg(t3.age) from singer as t3);<separator> select t2.location,  t1.name from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id where t1.capacity between 5000 and 10000;<separator> select location,  name from station where capacity between 5000 and 10000;<separator> select max(t1.capacity),  avg(t2.capacity) from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id;<separator> select avg(t1.capacity),  max(t2.capacity) from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id;<separator> select t1.name,  t2.capacity from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id order by t2.avg(attendance) desc limit 1;<separator> select t1.name,  t2.capacity from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id order by avg(t2.attendance) desc limit 1;<separator> select count(*) from concert where year  =  2014 or year  =  2015;<separator> select count(*) from concert where year  =  2014 intersect select count(*) from concert where year  =  2015;<separator> select t1.name,  count(*) from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id group by t2.stadium_id;<separator> select count(*) from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id; unnest(distinct location)<separator> select t3.name,  t5.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id join singer_in_concert as t3 on t1.concert_id  =  t3.concert_<separator> select t4.name,  t5.capacity from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id join singer as t3 on t2.singer_id  =  t3.singer_id<separator> select t1.year from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id group by t1.year order by count(*) desc limit 1;<separator> select max(t1.year) from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id group by t1.year;<separator> select name from stadium where stadium_id not in (select t1.stadium_id from concert as t1 join singer_in_concert as t2 on t1.stadium_id  =  t2.concert_id);<separator> select name from stadium where stadium_id not in (select t1.stadium_id from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id);<separator> select country from singer where is_male!= 't' intersect select country from singer except select t1.country from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by t1.country having count(*) >  4<separator> select name from stadium where location!= "outside" intersect select t3.name from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id intersect select t5.name from singer_in_concert as t3 join concert as t4<separator> select t3.name from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id join stadium as t3 on t2.stadium_id  =  t3.stadium_id where year(t1.<separator> select t1.concert_name,  t2.theme from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id;<separator> select t1.concert_name,  t2.theme,  count(*) from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id group by t1.concert_name;<separator> select t1.name,  count(*) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by name;<separator> select t1.name,  count(*) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by name;<separator> select t3.name from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id join singer as t3 on t2.singer_id  =  t3.singer_id where t1.year  =<separator> select t3.name from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id join singer as t3 on t2.singer_id  =  t3.singer_id where year(t1.year<separator> select t1.name,  t2.nation from singer as t1 join song_name as t2 on t1.song_name  =  t2.song_name where t2.title like '%hey%';<separator> select t1.name,  t2.country from singer as t1 join song_title as t2 on t1.song_name like '% hey %';<separator> select t3.name,  t1.location from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where year(t1.date)  =  2014 intersect select t3.name,  t1.location from<separator> select t3.name,  t1.location from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id join singer_in_concert as t3 on t1.concert_id  =  t3.concert_id<separator> select count(*) from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t2.capacity  =  (select max(t3.capacity) from stadium as t3);<separator> select count(*) from concert where highest  =  (select max(t1.highest) from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id);<separator> select count(*) from pets where weight  >  10;<separator> select count(*) from pets where weight  >  10;<separator> select t2.weight from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where t1.pet_age  <= (select min(t3.pet_age) from pets as t3);<separator> select weight from pets where pet_age  =   (select min(t1.pet_age) from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.petid);<separator> select max(t2.weight),  t1.pettype from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.pettype;<separator> select max(t1.weight),  t2.pettype from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t2.pettype;<separator> select count(*) from has_pet where stuid  >  20;<separator> select count(*) from has_pet where stuid  >  20;<separator> select count(*) from pets as t1 join student as t2 on t1.petid  =  t2.stuid where t2.sex  =  'f' and t1.tpeet  =  "dog";<separator> select count(*) from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.sex  =  'f' and t1.t1.pettype  =  "dog";<separator> select count(distinct t1.t2) from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid;<separator> select count(distinct t1.t2) from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid;<separator> select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.t1type  =  "cat" intersect select t1.fname from student as t1 join has_pet as t2 on t1.<separator> select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.t1type  =  "cat" intersect select t1.fname from student as t1 join has_pet as t2 on t1.<separator> select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.t1type  =  "cat" intersect select t1.fname from student as t1 join has_pet as t2 on t1.<separator> select fname from student where stuid in (select t1.stuid from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid group by petid having count(*)  >  2);<separator> select t1.major,  t2.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.t3!= "cat";<separator> select t1.major,  count(*) from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.t3!= "cat" group by t1.major;<separator> select stuid from has_pet where t1.t2 != "cat";<separator> select stuid from has_pet where pettype  =  "cat"; except select distinct t1.stuid from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid;<separator> select t1.fname,  t2.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.t1type!= "cat" group by t1.stuid having count(*) >  0;<separator> select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.pettype  =  "dog" except select fname from student;<separator> select t1.t2 from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid where t2.pet_age  <= (select min(pet_age) from pets);<separator> select t1.t2 from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid order by t2.pet_age limit 1;<separator> select petid,  weight from pets where pet_age  >  1;<separator> select t2.petid,  t3.weight from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where t1.pet_age  >  1;<separator> select avg(t1.pet_age),  max(t2.pet_age) from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.pettype;<separator> select avg(t1.pet_age),  max(t2.pet_age) from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.pettype;<separator> select avg(t2.weight),  t1.pettype from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.pettype;<separator> select avg(t2.weight),  t1.pettype from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.pettype;<separator> select t1.fname,  t2.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid!= "null";<separator> select distinct fname,  age from student where stuid in (select t1.stuid from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid);<separator> select t1.petid from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid where t2.tname  = 'smith';<separator> select t1.petid from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid where t2.tname  =  "smith";<separator> select count(*),  stuid from has_pet group by stuid;<separator> select stuid from has_pet group by stuid;<separator> select t1.fname,  t2.sex from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid having count(*)  >  1;<separator> select t1.fname,  t2.sex from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid having count(*)  >  1;<separator> select t2.lname from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t1.pettype  =  "cat" intersect select t2.lname from has_pet as t1 join student as t2 on t1.st<separator> select t2.lname from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid where t1.t1type  =  "cat" intersect select t2.lname from has_pet as t1 join pets as t2 on t<separator> select avg(t1.age) from student as t1 join has_pet as t2 on t1.stuid !=  t2.stuid;<separator> select avg(t1.age) from student as t1 join has_pet as t2 on t1.stuid !=  t2.stuid;<separator> select count(*) from continents;<separator> select count(*) from continents;<separator> select t1.contid,  t2.continent from continents as t1 join countries as t2 on t1.contid  =  t2.contid group by t1.contid;<separator> select t1.contid,  contid from continents as t1 join countries as t2 on t1.contid  =  t2.continent;<separator> select count(*) from countries;<separator> select count(*) from countries;<separator> select t1.fullname,  t2.id, count(*) from car_makers as t1 join model_list as t2 on t1.id  =  t2.t1 where make!= "unknown" group by t1.id;<separator> select t1.fullname,  count(*) from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id;<separator> select t1.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid group by t2.model order by sum(t1.horsepower) limit 1;<separator> select t1.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid order by t1.horsepower limit 1;<separator> select t1.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.weight  <  (select avg(t3.weight) from cars_data as t3);<separator> select t1.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.weight  <  (select avg(t3.weight) from cars_data as t3);<separator> select t2.fullname from car_makes as t1 join car_names as t2 on t1.id  =  t2.make where t2.year  =  1970;<separator> select t2.fullname from car_makers as t1 join cars_data as t2 on t1.id  =  t2.make where year  =  1970;<separator> select t1.make,  t2.productiontime from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id where t2.year  =  (select min(t3.year) from cars_data as t3);<separator> select t1.maker,  t2.year from car_makers as t1 join cars_data as t2 on t1.id  =  t2.id order by t2.year limit 1;<separator> select t2.model from car_names as t1 join model_list as t2 on t1.makeid  =  t2.modelid where year  >  1980;<separator> select distinct t2.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where year  >  1980;<separator> select t1.contid,  count(*) from continents as t1 join car_makers as t2 on t1.contid  =  t2.country group by t1.contid;<separator> select t1.contnamen,  count(*) from continents as t1 join countries as t2 on t1.contid  =  t2.countryid group by t1.contid;<separator> select countryname from countries group by contid order by count(*) desc limit 1;<separator> select t1.contnme from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country where count(*)  >  (select max(count) from car_makes);<separator> select t1.t2.fullname,  count(*) from car_makes as t1 join car_models as t2 on t1.id  =  t2.make where t2.produced !=  0 group by t1.id;<separator> select count(*),  t1.t2.fullname from car_makes as t1 join car_names as t2 on t1.id  =  t2.make where make!= " ";select distinct(distinct t3.fullname) from car_makers as t1 join car_names<separator> select accelerate from cars_data as t1 join car_names as t2 on t1.makeid  =  t2.make where t2.make  =  "amc" and t2.model  =  "hornet";<separator> select t1.accelerate from cars_data as t1 join car_names as t2 on t1.makeid  =  t2.id where make  =  "amc" and model  =  "hornet";<separator> select count(*) from car_makers where country  =  "france";<separator> select count(*) from car_makers where country  =  "france";<separator> select count(*) from car_names where make  =  'usa';<separator> select count(*) from car_names where make  =  'united states';<separator> select avg(mpg) from cars_data where cylinders  =  4;<separator> select avg(mpg) from cars_data where cylinders  =  4;<separator> select min(t2.weight) from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.cylinders  =  8 and year  =  1974;<separator> select min(t2.weight) from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.cylinders  =  8 and year  =  1974;<separator> select t1.make,  t2.model from car_makers as t1 join car_names as t2 on t1.id  =  t2.make;<separator> select t1.maker,  t2.model from car_makers as t1 join car_names as t2 on t1.id  =  t2.make;<separator> select t1.contriyfrom counties as t1 join car_makers as t2 on t1.countryid  =  t2.country where exists (select * from car_makers as t3 join cars_data as t4 on t3.id  =  t4.id);<separator> select t1.countryname,  t2.countryid from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country;<separator> select count(*) from cars_data where horsepower  >  150;<separator> select count(*) from cars_data where horsepower  >  150;<separator> select avg(t1.weight) from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid group by year;<separator> select avg(t1.weight),  t2.year from cars_data as t1 join model_list as t2 on t1.id  =  t2.model where t2.year  =  2015; unnest (distinct make) except select distinct make from car_<separator> select t1.contid from counties as t1 join car_makers as t2 on t1.contid  =  t2.country where continent  =  "europe" group by t1.contid having count(*)  >=  3;<separator> select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country where continent  =  "europe" group by t1.countryname having count(*)  >=  3;<separator> select max(t1.horsepower),  t2.make from cars_data as t1 join car_names as t2 on t1.makeid  =  t2.model where t1.cylinders  =  3;<separator> select max(t1.horsepower),  t2.make from cars_data as t1 join model_list as t2 on t1.modelid  =  t2.model where t1.cylinders  =  3;<separator> select t1.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid group by t2.model order by sum(t1.mpg) desc limit 1;<separator> select t1.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid order by t1.mpg desc limit 1;<separator> select avg(t2.horsepower) from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where year <  1980;<separator> select avg(t2.horsepower) from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where year  <  1980;<separator> select avg(edispl) from cars_data where make  =  'volvo';<separator> select avg(t1.edispl) from t2 as t1 join t3 as t2 on t1.id  =  t2.volvo where make  =  "volvo";<separator> select max(accelerate),  count(*) from cars_data group by cylinders;<separator> select max(accelerate),  cylinders from cars_data group by cylinders;<separator> select t1.model from car_names as t1 join model_list as t2 on t1.make  =  t2.model group by t1.model order by count(*) desc limit 1;<separator> select t1.model from model_list as t1 join car_names as t2 on t1.model  =  t2.model group by t1.model order by count(*) desc limit 1;<separator> select count(*) from cars_data where cylinders  >  4;<separator> select count(*) from cars_data where cylinders  >  4;<separator> select count(*) from cars_data where year  =  1980;<separator> select count(*) from cars_data;<separator> select count(*) from car_names as t1 join car_makers as t2 on t1.make  =  t2.id where t2.fullname  =  "american motor company";<separator> select count(*) from car_names as t1 join car_makers as t2 on t1.make  =  t2.id where t2.company  =  "american motor company";<separator> select t1.fullname,  t2.id from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >  3;<separator> select t1.fullname,  t2.id from car_makes as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >  3;<separator> select t1.model from car_names as t1 join car_makes as t2 on t1.makeid  =  t2.id where t2.fullname  =  "general motors" intersect select t1.model from cars_data as t1 join car_names as t2 on<separator> select distinct t1.model from car_names as t1 join car_makes as t2 on t1.makeid  =  t2.id where t2.company  =  "general motors" intersect select distinct t1.model from cars_data as t1 join car_names as t2<separator> select year from cars_data where weight between 3000 and 4000;<separator> select distinct year from cars_data where weight < 4000 intersect select distinct year from cars_data where weight > 3000;<separator> select horsepower from cars_data order by accelerate desc limit 1;<separator> select horsepower from cars_data order by accelerate desc limit 1;<separator> select count(*) from t1 as t2 join t3 as t4 on t2.id  =  t4.t1 where t4.accelerate  =  (select min(accelerate) from t3);<separator> select count(*) from t1 join t2 on t1.model  =  t2.model where t1.accelerate  <= (select min(t3.accelerate) from t1 as t1 join t2 as t2 on t1.model  =  t2.model group<separator> select count(*) from cars_data where accelerate  > (select max(accelerate) from cars_data);<separator> select count(*) from cars_data where accelerate  > (select max(accelerate) from cars_data);<separator> select count(*) from car_makers group by country having count(distinct id) >  2;<separator> select count(*) from car_makers group by country having count(distinct id) > 2;<separator> select count(*) from cars_data where cylinders > 6;<separator> select count(*) from cars_data where cylinders > 6;<separator> select t1.model from cars_data as t1 join model_list as t2 on t1.modelid  =  t2.model where t1.cylinders  =  4;<separator> select t1.model from cars_data as t1 join car_names as t2 on t1.makeid  =  t2.model where t1.cylinders  =  4 group by t1.model order by count(*) desc limit 1;<separator> select t1.make,  t2.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower > (select min(t4.horsepower) from cars_data as t1 join car_names<separator> select t1.make,  t2.make from cars_data as t1 join car_names as t2 on t1.makeid  =  t2.make where t1.horsepower <  4;<separator> select max(t2.mpg) from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.cylinders  =  8 intersect select mpg from cars_data where year  <  1980;<separator> select max(t2.mpg) from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.cylinders  =  8 intersect select max(t2.mpg) from cars_data as t1 join car_<separator> select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id where mpg  >  3500 except select make from car_names group by make having count(*)  >  1;<separator> select distinct t1.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where weight  <  3500 except select distinct t1.model from cars_data as t1 join car_names as t2 on t1.id<separator> select t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country except select distinct countryname from countries;<separator> select t1.contnamen from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country where t2.country is null;<separator> select t1.id,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2;<separator> select t1.id,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 and sum(t2.model)  >  3;<separator> select t1.country,  t2.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country where count(*)  >  3 intersect select countryname from car_makes except select "fiat";<separator> select t1.country,  t2.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country where (select count(*) from car_makes group by country) >  3 intersect select countryname from car_m<separator> select t1.country from airlines as t1 join countries as t2 on t1.country  =  t2.country where t1.airline  =  'jetblue airways';<separator> select t1.country from airlines as t1 join airports as t2 on t1.country  =  t2.country where t1.airline  =  "jetblue";<separator> select t1.abbreviation from airlines as t1 join airports as t2 on t1.airline  =  t2.airline where t2.airline  =  'jetblue airways';<separator> select t1.abbreviation from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.airline  =  'jetblue';<separator> select t1.airline,  t2.abbreviation from airlines as t1 join country as t2 on t1.country  =  t2.country where t2.countryabrev  =  'usa';<separator> select t1.airline,  t2.abbreviation from airlines as t1 join country as t2 on t1.country  =  t2.country where t2.countryabrev  =  "usa";<separator> select t1.airportcode,  t2.airportname from airports as t1 join flight as t2 on t1.airportcode  =  t2.sourceairport where t2.destairport  =  "anthony";<separator> select t1.airportcode,  t2.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport where t2.destairport  =  "anthony";<separator> select count(*) from airlines;<separator> select count(*) from airlines;<separator> select count(*) from airports;<separator> select count(*) from airports;<separator> select count(*) from flights;<separator> select count(*) from flights;<separator> select t1.airline from airlines as t1 join country as t2 on t1.country  =  t2.id where t2.abbr  =  "ual";<separator> select t1.airline from airlines as t1 join country as t2 on t1.country  =  t2.country where t2.countryabbrev  =  "ual";<separator> select count(*) from airlines where country  =  'usa';<separator> select count(*) from airlines where country  =  'usa';<separator> select t1.city,  t2.country from airports as t1 join country as t2 on t1.countryabbrev  =  t2.country where t1.airportcode  =  "atl";<separator> select t1.city,  t2.country from airports as t1 join country as t2 on t1.countryabbrev  =  t2.country;<separator> select t1.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport where t1.airportcode  =  "ako";<separator> select t1.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport where t1.airportcode  =  "ako";<separator> select t1.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport where t1.city  =  "aberdeen";<separator> select t1.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport where t1.city  =  "Aberdeen";<separator> select count(*) from flights where sourceairport  =  "apg";<separator> select count(*) from flights where sourceairport  =  "apg";<separator> select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where country  =  'ato';<separator> select count(*) from flights;<separator> select count(*) from flights where destairport  =  'ABZ';<separator> select count(*) from flights where sourceairport  =  'ABZ';<separator> select count(*) from flights where destairport  =  'ABZ';<separator> select count(*) from flights where destairport  =  'ABZ';<separator> select count(*) from flights where sourceairport  =  "aberdeen" intersect select destairport from flights where destairport  =  "ashley";<separator> select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  "ashley" intersect select count(*) from flights as t1 join airports as t2 on t1.destinationairport  =<separator> select count(*) from flights where airline  =  "jetblue airways";<separator> select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.airline  =  "jetblue";|<separator> select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportname  =  "asy";<separator> select count(*) from flights where destairport  =  'asy';<separator> select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  "ahd";<separator> select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  "ahd";<separator> select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.city  =  "aberdeen";<separator> select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.city  =  "Aberdeen";<separator> select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport group by t1.city order by count(*) desc limit 1;<separator> select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.city order by count(*) desc limit 1;<separator> select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport group by t1.city order by count(*) desc limit 1;<separator> select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport group by t1.city order by count(*) desc limit 1;<separator> select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport group by t1.airportcode order by count(*) desc limit 1;<separator> select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport group by t1.airportcode order by count(*) desc limit 1;<separator> select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport group by t1.airportcode order by count(*) limit 1;<separator> select min(t1.airportcode) from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport group by t1.airportcode;<separator> select t1.airline from flights as t1 join airlines as t2 on t1.airline  =  t2.airline group by t1.airline order by count(*) desc limit 1;<separator> select t1.airline from flights as t1 join airlines as t2 on t1.airline  =  t2.airline group by t1.airline order by count(*) desc limit 1;<separator> select t1.abbreviation,  t2.country from airlines as t1 join flights as t2 on t1.uid  =  t2.airline group by t1.abbreviation order by count(*) asc limit 1;<separator> select t1.abbreviation,  t2.country from airlines as t1 join airports as t2 on t1.uid  =  t2.airportcode group by t1.abbreviation order by count(*) asc limit 1;<separator> select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where destairport  =  "ahd";<separator> select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where destairport!= "ahd";<separator> select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.destairport where destairport  =  "ahd";<separator> select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.destairport where t2.destinationairport!= "ahd";<separator> select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where destairport  =  "apg" intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid  =<separator> select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.sourceairport where destairport in (select airportcode from airports where countryabbrev  =  'apg' intersect select airportcode from airports where countryab<separator> select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where destairport  =  "cvo" except select distinct t3.airline from airlines as t1 join flights as t2 on t1.uid <separator> select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.sourceairport where t2.destairport!= "cvo" except select distinct t3.airline from airports as t1 join flights as t2 on t1.<separator> select t2.airline from flights as t1 join airlines as t2 on t1.airline  =  t2.airline group by t2.airline having count(*)  >=  10;<separator> select t2.airline from flights as t1 join airlines as t2 on t1.airline  =  t2.uid group by t2.airline having count(*)  >=  10;<separator> select t1.airline from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where count(*)  <  200;<separator> select t1.airline from airlines as t1 join flights as t2 on t1.uid intersect select distinct t3.airline from flights as t4 join airlines as t5 on t4.uid where count(*)  <  200;<separator> select t1.flightno from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.airline  =  'united airlines';<separator> select t1.flightno from flights as t1 join airlines as t2 on t1.airline  =  t2.uid where t2.airline  =  'united';<separator> select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  'apg';<separator> select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  "apg";<separator> select t1.flightno from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportname  =  'apg';<separator> select t1.flightno from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportname  =  "apg";<separator> select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  'aberdeen';<separator> select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  "Aberdeen";<separator> select t1.flightno from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.city  =  'aberdeen';<separator> select t1.flightno from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.city  =  "Aberdeen";<separator> select count(*) from flights where destairport  =  'aberdeen' intersect select count(*) from flights where destairport  =  'abilene';<separator> select count(*) from flights where destairport  =  'aberdeen' intersect select count(*) from flights where sourceairport  =  'abilene';<separator> select t1.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport where t2.destairport is null;<separator> select t1.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport union all select t3.airportname from airports as t3 join flights as t4 on t3.airportcode  =  t4<separator> select count(*) from employee;<separator> select count(*) from employee;<separator> select name from employee order by age;<separator> select name from employee order by age;<separator> select count(*),  city from employee group by city;<separator> select city,  count(*) from employee group by city;<separator> select city from employee where age  <  30 group by city having count(*)  >  1;<separator> select city from employee where age  <  30 group by city having count(*)  >  1;<separator> select count(*),  district from shop group by district;<separator> select count(*),  district from shop group by district;<separator> select t1.manager_name,  t2.district from shop as t1 join shop as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;<separator> select t1.manager_name,  t2.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;<separator> select min(t1.number_products),  max(t2.number_products) from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id;<separator> select min(t1.number_products),  max(t2.number_products) from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id;<separator> select t1.name,  t2.location,  t3.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id join shop as t3 on t2.shop_id  =  t3.shop_id order by<separator> select t1.name,  t2.location,  t3.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc;<separator> select name from shop where number_products  >  (select avg(t1.number_products) from shop as t1 group by district);<separator> select name from shop where number_products  >  (select avg(t1.number_products) from shop as t1);<separator> select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t2.employee_id order by count(*) desc limit 1;<separator> select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t1.name order by count(*) desc limit 1;<separator> select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id order by t2.one_time_bonus desc limit 1;<separator> select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id order by bonus desc limit 1;<separator> select name from employee where employee_id not in (select t1.employee_id from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id);<separator> select name from employee where employee_id not in (select t1.employee_id from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id);<separator> select t1.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;<separator> select t1.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;<separator> select t1.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id where t2.employee_id is null;<separator> select name from shop where shop_id not in (select t1.shop_id from hiring as t1 join employee as t2 on t1.employee_id  =  t2.employee_id);<separator> select count(*),  t1.name from hiring as t1 join shop as t2 on t1.shop_id  =  t2.shop_id group by t2.name;<separator> select count(*),  t1.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id;<separator> select sum(bonus) from evaluation;<separator> select sum(bonus) from evaluation;<separator> select * from hiring;<separator> select * from hiring;<separator> select location from shop where number_products <  3000 intersect select location from shop where number_products >  10000;<separator> select district from shop where number_products < 3000 intersect select district from shop where number_products > 10000;<separator> select count(distinct location) from shop;<separator> select count(distinct location) from shop;<separator> select count(*) from documents;<separator> select count(*) from documents;<separator> select t1.document_id,  t2.document_name,  t3.document_description from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id join documents as t3 on t1.document_id  =  t3.<separator> select document_id,  document_name,  document_description from documents;<separator> select t1.document_name,  t2.template_id from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id where t1.document_description like '%w%';<separator> select document_name,  document_id from documents where document_description like '%w%';<separator> select t1.document_id,  t2.template_id,  t3.document_description from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id where t1.document_name  =  'robin cv';<separator> select t1.document_id,  t2.template_id,  t3.document_description from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id where t1.document_name  =  "robin cv";<separator> select count(distinct template_id) from documents;<separator> select count(distinct template_id) from documents;<separator> select count(*) from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id where t2.template_type_code  =  "ppt";<separator> select count(*) from documents where document_name like "%ppt%";<separator> select t1.template_id,  count(*) from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t2.template_id;<separator> select distinct t1.template_id,  count(*) from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t1.template_id;<separator> select t1.template_id,  t2.template_type_code from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t1.template_id order by count(*) desc limit 1;<separator> select t1.template_id,  t2.template_type_code from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t2.template_type_code order by count(*) desc limit 1;<separator> select t1.template_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.template_id having count(*)  >  1;<separator> select distinct t1.template_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id having count(*)  >  1;<separator> select template_id from templates where template_id not in (select t1.template_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id);<separator> select template_id from documents except select t1.template_id from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id;<separator> select count(*) from templates;<separator> select count(*) from templates;<separator> select t1.template_id,  t2.version_number,  t3.template_type_code from templates as t1 join document_templates as t2 on t1.template_id  =  t2.template_id join ref_template_types as t3 on t3.template_<separator> select t1.template_id,  t2.version_number,  t3.template_type_code from templates as t1 join document_templates as t2 on t1.template_id  =  t2.template_id join ref_template_types as t3 on t2.template_<separator> select distinct t1.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code;<separator> select distinct t1.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code;<separator> select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_code  =  "pp" intersect select t1.template_id from templates as t<separator> select template_id from templates where template_type_code  =  'pp' intersect select template_id from templates where template_type_code  =  'ppt';<separator> select count(*) from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_code  =  'cv';<separator> select count(*) from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_description  =  "cv";<separator> select t1.version_number,  t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where date_effective_to >   "2018-06<separator> select t1.version_number,  t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t1.version_number  >  5;<separator> select t1.template_type_code,  count(*) from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code;<separator> select count(*),  distinct t1.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code;<separator> select t2.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code order by count(*) desc limit 1;<separator> select t1.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code group by t2.template_type_code order by count(*) desc limit 1;<separator> select t1.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code having count(*)  <  3;<separator> select t1.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code having count(*)  <  3;<separator> select min(t1.version_number),  t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code group by t2.template_type_code order by t1<separator> select min(t1.version_number),  t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code group by t2.template_type_code order by t1<separator> select t2.template_type_code from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id where t1.document_name  =  'data base';<separator> select t1.template_type_code from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id where t1.document_name  =  "data base";<separator> select t1.document_name from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id where t2.template_type_code  =  'bk';<separator> select document_name from documents where template_id in (select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_code  =  'bk<separator> select t1.template_type_code,  count(*) from document as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t1.template_id;<separator> select count(*),  distinct t1.template_type_code from document as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t2.template_type_code;<separator> select t1.template_type_code from document as t1 join documents as t2 on t1.document_id  =  t2.document_id group by t1.template_type_code order by count(*) desc limit 1;<separator> select t1.template_type_code from document as t1 join documents as t2 on t1.document_id  =  t2.document_id group by t1.template_type_code order by count(*) desc limit 1;<separator> select distinct t1.template_type_code from ref_template_types as t1 join documents as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code having count(*)  >  0;<separator> select distinct t1.template_type_code from ref_template_types as t1 join documents as t2 on t1.template_type_code  =  t2.template_type_code where t2.document_id is null;<separator> select t1.template_type_code,  t2.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code;<separator> select t1.template_type_code,  t2.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code;<separator> select t2.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_code  =  'ad';<separator> select t2.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_code  =  "ad";<separator> select t2.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_description  =  'book';<separator> select t1.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_description  =  'book';<separator> select distinct t2.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_id in (select template_id from documents);<separator> select distinct template_details from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t2.template_details having count(*) >  0;<separator> select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_description  =  'presentation';<separator> select template_id from templates where template_type_description  =  "presentation";<separator> select count(*) from paragraphs;<separator> select count(*) from paragraphs; 106;<separator> select count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "summer show";<separator> select count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "summer show";<separator> select * from paragraphs where paragraph_text  =  "korea ";<separator> select t1.* from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t2.paragraph_text like '% korea %';<separator> select t1.paragraph_id,  t2.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "welcome to ny";<separator> select t1.paragraph_id,  t2.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "welcome to ny";<separator> select t1.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_title  =  'customer reviews';<separator> select t1.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "customer reviews";<separator> select t1.document_id,  count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id;<separator> select t1.document_id,  count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by t1.document_id;<separator> select t1.document_id,  t2.document_name, count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id;<separator> select t1.document_id,  t2.document_name, count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id;<separator> select distinct t1.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id having count(*)  >=  2;<separator> select document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id having count(*)  >=  2;<separator> select t1.document_id,  t2.document_name from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) desc limit 1;<separator> select t1.document_id,  t2.document_name from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) desc limit 1;<separator> select t1.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) asc limit 1;<separator> select t1.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) limit 1;<separator> select t3.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id having count(*) between 1 and 2;<separator> select document_id from documents where count(*)  >=  1 intersect select document_id from paragraphs group by document_id having count(*)  <=  2;<separator> select t1.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t2.paragraph_text like '%brazil%'; select t1.document_id from documents as t1 join paragraphs as t2 on t1<separator> select document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t2.paragraph_text like '%brazil%'; select distinct document_id from documents intersect select distinct document_id from paragraphs;<separator> select count(*) from teacher;<separator> select count(*) from teacher;<separator> select name from teacher order by age;<separator> select name from teacher order by age;<separator> select name,  age from teacher;<separator> select t1.age,  t2.hometown from teacher as t1 join teacher as t2 on t1.teacher_id  =  t2.teachert_id;<separator> select t1.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teachert where t2.grade!= "A";<separator> select name from teacher where hometown!= "little lever urban district";<separator> select t1.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teachert where age  =  32 intersect select t1.name from teacher as t1 join course_arrange as t2 on t1.teacher_<separator> select name from teacher where age  =  32 union all select name from teacher where age  =  33;<separator> select t1.hometown from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id order by age limit 1;<separator> select min(t1.age),  t2.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teachert_id group by t2.name;<separator> select count(*),  t2.hometown from teacher as t1 join teacher as t2 on t1.hometown!= t2.hometown group by t2.hometown;<separator> select count(*),  t2.hometown from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teachert_id group by t2.hometown;<separator> select t1.hometown from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id group by t1.hometown order by count(*) desc limit 1;<separator> select t1.hometown from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id group by t1.hometown order by count(*) desc limit 1;<separator> select distinct t1.hometown from teacher as t1 join teacher as t2 on t1.teacher_id!= t2.teachert where count(*)  >=  2;<separator> select hometown from teacher group by hometown having count(*)  >=  2;<separator> select t1.name,  t2.title from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id;<separator> select t1.name,  t2.title from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id;<separator> select t1.name,  t2.title from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id order by t1.title;<separator> select t1.name,  t2.title from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id order by t1.name;<separator> select t1.name from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id where t2.subject  =  "math";<separator> select name from teacher where grade  =   "math";<separator> select name,  count(*) from teacher group by name;<separator> select t1.name,  count(*) from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teachertable group by name;<separator> select name from teacher where teacher_id in (select t1.teacher_id from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id group by t2.teachers_id having count(*)  >=  2);<separator> select name from teacher where count(*)  >=  2;<separator> select name from teacher where teacher_id not in (select t1.teacher_id from course as t1 join course_arrange as t2 on t1.teachers_id  =  t2.teacher_id);<separator> select t1.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teachert where grade!= "arranged";<separator> select count(*) from visitor where level_of_membership  =   "free" intersect select t1.count(*) from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id where t2.total_spent  <  5;<separator> select name from visitor where level_of_membership > 4 order by level_of_membership;<separator> select avg(age) from visitor where level_of_membership <= 4;<separator> select t1.name,  t2.level_of_membership from visitor as t1 join visitor as t2 on t1.id  =  t2.id where t2.level_of_membership >  5 order by t2.age;<separator> select t1.museum_id,  t2.name from museum as t1 join visit as t2 on t1.museum_id  =  t2.museum_id group by t1.museum_id order by count(*) desc limit 1;<separator> select avg(num_of_staff) from museum where open_year <  2009;<separator> select open_year,  num_of_staff from museum where name  =  "plaza";<separator> select name from museum where num_of_staff > (select min(num_of_staff) from museum where open_year >= 2010);<separator> select t1.visitor_id,  t2.name,  t3.age from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id group by t1.id having count(*)  >  1;<separator> select t1.visitor_id,  t2.name,  t3.level_of_membership from visitor as t1 join museum as t2 on t1.museum_id  =  t2.museum_id join visit as t3 on t1.id  =  t3.<separator> select t1.museum_id,  t2.name from visit as t1 join museum as t2 on t1.museum_id  =  t2.museum_id group by t1.museum_id order by count(*) desc limit 1;<separator> select t1.name from museum as t1 join visit as t2 on t1.museum_id  =  t2.museum_id where not exists (select * from visit);<separator> select t1.name,  t2.age from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id group by t2.visitor_id order by sum(t2.num_of_ticket) desc limit 1;<separator> select avg(num_of_ticket),  max(num_of_ticket) from visit;<separator> select sum(total_spent) from visitor where level_of_membership  =  1;<separator> select t3.name from visit as t1 join museum as t2 on t1.museum_id  =  t2.museum_id join visitor as t3 on t1.visitor_id  =  t3.id where open_year(t2.open_year) <  200<separator> select count(*) from visit where num_of_ticket  =  0; except select t3.count(*) from visit as t1 join museum as t2 on t1.museum_id  =  t2.museum_id intersect select t4.count(*) from visit as t1 join visitor as t2 on<separator> select count(*) from museum where open_year >= 2013 intersect select count(*) from museum where open_year <= 2008;<separator> select count(*) from players;<separator> select count(*) from players;<separator> select count(*) from matches;<separator> select count(*) from matches; 1069;<separator> select t1.first_name,  t2.birth_date from players as t1 join countries as t2 on t1.country_code  =  "usa";<separator> select t1.first_name,  t2.birth_date from players as t1 join country_codes as t2 on t1.country_code  =  t2.country_code where t2.country_code  =  'usa';<separator> select avg(loser_age),  avg(winner_age) from matches;<separator> select avg(loser_age),  avg(winner_age) from matches;<separator> select avg(winner_rank) from matches where winner_id!= 0;<separator> select avg(winner_rank) from matches where winner_id!= 0;<separator> select max(loser_rank) from matches;<separator> select max(loser_rank) from matches;<separator> select count(distinct country_code) from players; 107;<separator> select count(distinct country_code) from players; 106;<separator> select count(distinct loser_name) from matches; 1065;<separator> select count(distinct loser_name) from matches;<separator> select t2.tourney_name from tournaments as t1 join matches as t2 on t1.tourney_id  =  t2.tourney_id group by t1.tourney_name having count(*)  >  10;<separator> select t2.tourney_name from tourneys as t1 join matches as t2 on t1.tourney_id  =  t2.tourney_id group by t1.tourney_name having count(*)  >  10;<separator> select t4.win_name from wins as t1 join tourneys as t2 on t1.tourn_id  =  t2.tourn_id join tournaments as t3 on t2.tourn_id  =  t3.tourn_id join players as t4 on t<separator> select t1.first_name,  t1.last_name from wins as t1 join players as t2 on t1.winner_id  =  t2.player_id where year(t1.winning_date)  =  2013 intersect select t1.first_name<separator> select count(*) from matches where year  =  2013 union select count(*) from matches where year  =  2016;<separator> select count(*) from matches where tourney_date between '2013-01-01' and '2017-01-01'; select count(*) from matches where tourney_date between '2015-01-01' and '2018-01<separator> select t1.country_code,  t2.first_name from wins as t1 join tournaments as t2 on t1.tournament_id  =  t2.tournament_id where t2.title  =  "australian open" intersect select t1.country_code<separator> select t1.first_name,  t2.country_code from wins as t1 join tournaments as t2 on t1.tournament_id  =  t2.tournament_id where t1.title  =  "australian open" intersect select t1.first_name<separator> select t1.first_name,  t2.country_code from players as t1 join countries as t2 on t1.country_code  =  t2.country_code order by birth_date desc limit 1;<separator> select t1.first_name,  t2.country_code from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id order by birth_date desc limit 1;<separator> select t1.first_name,  t1.last_name from players as t1 join (select distinct first_name,  last_name from players) as t2 on t1.first_name  =  t2.first_name and t1.last_name  =  t2.last<separator> select t1.first_name,  t2.last_name from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id order by t1.birth_date;<separator> select t1.first_name,  t1.last_name from players as t1 join hands as t2 on t1.hand  =  t2.hand where t2.l; order by t1.birth_date; unnest(distinct player_id) as id;<separator> select t1.first_name,  t1.last_name from players as t1 join hands as t2 on t1.hand  =  t2.hand where hand  =  "lh";select first_name,  last_name from players order by birth_date;<separator> select first_name,  country_code from players group by hand order by ranking_points desc limit 1;<separator> select first_name,  country_code from players order by ranking_points desc limit 1;<separator> select max(year) from matches;<separator> select max(year) from matches;<separator> select t1.winner_name,  t2.winner_rank_points from wins as t1 join rankings as t2 on t1.winner_id  =  t2.player_id group by t1.winner_id order by count(*) desc limit 1;<separator> select t1.winner_name,  sum(t2.ranking_points) from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id group by t1.winner_id order by sum(t2.ranking_points)<separator> select t1.winner_name from wins as t1 join rankings as t2 on t1.winner_id  =  t2.player_id where t2.tours  =   "australia" order by ranking_points desc limit 1;<separator> select t1.winner_name from wins as t1 join tourneys as t2 on t1.tournery_id  =  t2.tourney_id where t2.tourney_name  =  "australian open" group by t1.winner_id order<separator> select t1.loser_name,  t2.winner_name from matches as t1 join players as t2 on t1.loser_id  =  t2.player_id order by t1.minutes desc limit 1;<separator> select t1.winner_name,  t2.loser_name from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id where draw_size  =  3 intersect select t1.winner_name,  t2.loser<separator> select avg(ranking),  t1.first_name from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id group by t1.first_name;<separator> select t1.first_name,  avg(t2.ranking) from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.first_name;<separator> select t1.total_rating,  t2.first_name from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id; unnest(distinct tourney_name)<separator> select t1.first_name,  sum(t2.ranking_points) from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.first_name;<separator> select count(*),  country_code from players group by country_code;<separator> select count(*),  country_code from players group by country_code; unnest(distinct country_code) as t1 join (select distinct country_code from players ) as t2 on t1.country_code  =  t2.country_code;<separator> select country_code from players group by country_code order by count(*) desc limit 1;<separator> select country_code from players group by country_code order by count(*) desc limit 1;<separator> select country_code from players group by country_code having count(*)  >  50;<separator> select country_code from players group by country_code having count(*)  >  50;<separator> select sum(tours),  ranking_date from rankings group by ranking_date; unnest (select distinct tourney_name from tournaments);<separator> select count(*),  ranking_date from rankings group by ranking_date; unnest(select ranking_date from rankings);<separator> select count(*),  year from matches group by year; unnest(distinct tourney_date) as t1 join tournaments on t1 like "%" intersect select distinct tourney_date from matches;<separator> select count(*),  year from matches group by year; unnest(distinct tourney_date) as t1 join tournaments as t2 on t1.tournament_id  =  t2.tournament_id group by t1 order by t1;<separator> select t1.winner_name,  t2.winner_rank from wins as t1 join rankings as t2 on t1.winner_id  =  t2.player_id order by t1.winner_age limit 3;<separator> select t1.winner_name,  t2.winner_rank from wins as t1 join rankings as t2 on t1.winner_id  =  t2.player_id order by t1.winner_age limit 3;<separator> select count(distinct winner_id) from matches where tourney_name  =  "wta" intersect select distinct t1.winner_id from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id where hand  =  'l';<separator> select count(*) from wins as t1 join tournaments as t2 on t1.tournament_id  =  t2.tournament_id where t2.title  =  "wta" and hand  =  'l';<separator> select t1.first_name,  t2.country_code,  t3.birth_date from wins as t1 join players as t2 on t1.winner_id  =  t2.player_id join rankings as t3 on t1.winner_id  = <separator> select t1.first_name,  t2.country_code,  t3.birth_date from players as t1 join matchs as t2 on t1.player_id  =  t2.winner_id group by t1.player_id order by ranking_points desc limit <separator> select count(*),  hand from players group by hand; unnest(hand) as t1 join (select distinct hand from players ) as t2 on t1  =  t2.hand; except select * from players where hand!= "x"; select hand from players order by hand desc limit 5;<separator> select count(*),  hand from players group by hand; unnest(hand) as t1 join (select distinct hand from players ) as t2 on t1  =  t2.hand; except select * from players where hand!= "x"; select hand from players order by hand desc limit 5;<separator> select count(*) from ship where disposition_of_ship  =  "captured";<separator> select name,  tonnage from ship order by name;<separator> select t1.name,  t2.date,  t3.result from battle as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id join results as t3 on t2.result  =  t3.id;<separator> select max(t1.total),  min(t2.total) from (select sum(t3.kills + t4.wounds) as total from death as t1 join killed as t2 on t1.caused_by_ship_id  =  t2.id union all select<separator> select avg(injured) from death;<separator> select injured,  killed from death where tonnage  =  "t";<separator> select t1.name,  t2.result from battle as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id where t1.bulgarian_commander!= "boril";<separator> select distinct t1.id,  t2.name from battle as t1 join ship as t2 on t1.losing_side_ship_id  =  t2.id where t2.ship_type  =  "brig";<separator> select t2.id,  t3.name from battle as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id join ship as t3 on t2.caused_by_ship_id  =  t3.id group by t2<separator> select t1.id,  t2.name from ship as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id group by t2.caused_by_ship_id order by sum(t2.injured) desc limit 1<separator> select t1.name from battle as t1 join (select name from battle where bulgarian_commander  =  "kaloyan" intersect select name from battle where latin_commander  =  "baldwin i") as t2 on t1.name!= t2.name;<separator> select count(distinct result) from battle;<separator> select count(*) from battle where lost_in_battle != (select id from ship where tonnage  =  225);<separator> select t1.name,  t2.date from battle as t1 join ship as t2 on t1.id  =  t2.id where t2.name  =  "lettice" intersect select t1.name,  t2.date from battle as t1 join ship as t2 on<separator> select name,  result,  latin_commander from battle where location!= "english channel";<separator> select note from death where note like '%east%';<separator> select t1.line_1,  t1.line_2 from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.current_address_id;<separator> select t1.line_1,  t1.line_2 from addresses as t1;<separator> select count(*) from courses;<separator> select count(*) from courses;<separator> select t1.course_description from courses as t1 join section_descriptions as t2 on t1.course_id  =  t2.course_id where t2.subject_area_of_interest like '%math%';<separator> select course_description from courses where subject_area  =  "math";<separator> select t1.zip_postcode from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.current_address_id where t2.student_id  =  5;<separator> select t1.zip_postcode from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.current_address_id where t2.student_id  =  5;<separator> select t1.department_name,  t1.department_id from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1;<separator> select t1.department_name,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1;<separator> select count(*) from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id having count(*) >  0;<separator> select count(distinct department_id) from degree_programs;<separator> select count(distinct t1.degree_summary_name) from degrees as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id;<separator> select count(distinct t1.degree_summary_name) from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id  =  t2.degree_program_id;<separator> select count(*) from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id where t2.department_name  =  "engineering";<separator> select count(*) from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id where t2.department_name  =  "engineering";<separator> select section_name,  course_description from sections;<separator> select section_name,  course_description from sections;<separator> select t1.course_name,  t1.course_id from courses as t1 join sections as t2 on t1.course_id  =  t2.course_id group by course_id having count(*)  <=  2;<separator> select t1.course_name,  t1.course_id from courses as t1 join sections as t2 on t1.course_id  =  t2.course_id group by t1.course_id having count(*)  <  2;<separator> select t4.section_name from address as t1 join sections as t2 on t1.address_id  =  t2.section_id join course as t3 on t2.course_id  =  t3.course_id join student_enrolment_courses as t4 on t<separator> select section_name from sections order by section_name desc;<separator> select t1.semester_name,  t1.semester_id from semesters as t1 join student_enrolment as t2 on t1.semester_id  =  t2.semester_id group by t1.semester_id order by count(*) desc limit 1;<separator> select t1.semester_name,  t1.semester_id from semesters as t1 join student_enrolment on t1.semester_id  =  student_enrolment.semester_id group by t1.semester_id order by count(*) desc limit 1;<separator> select t4.department_description from departments as t1 join degrees_programs as t2 on t1.department_id  =  t2.department_id join student_enrolment as t3 on t2.degree_program_id  =  t3.degree_<separator> select t1.department_description from departments as t1 join student_enrolment as t2 on t1.department_id  =  t2.degree_program_id where t2.degree_program_id in (select degree_program_id from student_enrolment where<separator> select t1.first_name,  t1.middle_name,  t1.last_name,  t1.student_id from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.degree_<separator> select t1.first_name,  t1.middle_name,  t1.last_name,  t1.student_id from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.semester_<separator> select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.degree_program_id  =  4;<separator> select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.degree_program_id  =  4;<separator> select t1.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_summary_name order by count(*) desc limit 1<separator> select t4.degree_summary_name from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id join degrees as t3 on t2.degree_summary_name  =  t<separator> select t1.degree_summary_name,  t1.degree_summary_description from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_<separator> select t1.degree_program_id,  t2.degree_summary_name from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_<separator> select t1.student_id,  t1.first_name,  t1.middle_name,  t1.last_name, count(*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.deg<separator> select t1.first_name,  t1.middle_name,  t1.last_name,  count(*) from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_en<separator> select t1.semester_name from semesters as t1 join student_enrolment as t2 on t1.semester_id  =  t2.semester_id where t2.student_enrolment_id is null;<separator> select t4.semester_name from semesters as t1 join student_enrolment as t2 on t1.semester_id  =  t2.semester_id join student_enrolment_courses as t3 on t2.student_enrolment_id  =  t<separator> select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id; unnest(distinct course_name) except select distinct course_name from courses;<separator> select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id;<separator> select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id group by t1.course_name order by count(*) desc limit 1;<separator> select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id group by t1.course_name order by count(*) desc limit 1;<separator> select t1.last_name from students as t1 join address as t2 on t1.current_address_id  =  t2.address_id where t2.state_province_county  =  "nc" except select distinct(t1.last_name) from students as t1<separator> select t1.last_name from students as t1 join address as t2 on t1.permanent_address_id  =  t2.address_id where state_province_county  =  "nc" except select distinct(t1.last_name) from students as t1 join<separator> select t1.transcript_date,  t1.transcript_id from transcripts as t1 join transcript_contents as t2 on t1.transcript_id  =  t2.transcript_id group by t1.transcript_id having count(*)  >=  2;<separator> select t1.transcript_date,  t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.transcript_id group by t1.transcript_id having count(*)  >=<separator> select cell_phone_number from students where first_name  =  "timmothy" and last_name  =  "ward";<separator> select cell_mobile_number from students where first_name  =  "timmothy" and last_name  =  "ward";<separator> select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id order by t2.date_first_registered limit 1;<separator> select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id order by t2.date_first_registered limit 1;<separator> select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.degree_program_id in (select degree_<separator> select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where date_graduated  <= (select max(date_grad<separator> select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t1.permanent_address_id!= t1.current_address_id;<separator> select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t1.permanent_address_id!= t1.current_address_id;<separator> select t1.address_id,  line_1,  line_2,  line_3 from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.current_address_id group by t1.address_id order by count(*) desc limit<separator> select t1.address_id,  t1.line_1,  t1.line_2 from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.current_address_id group by t1.address_id order by count(*) desc<separator> select avg(transcript_date) from transcripts;<separator> select avg(t1.transcript_date) from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.transcript_id;<separator> select t1.transcript_date,  t2.other_details from transcripts as t1 join transcript_contents as t2 on t1.transcript_id  =  t2.transcript_id order by t1.transcript_date limit 1;<separator> select min(t1.transcript_date),  t2.other_details from transcripts as t1 join transcript_contents as t2 on t1.transcript_id  =  t2.transcript_id;<separator> select count(*) from transcripts;<separator> select count(*) from transcripts;<separator> select max(t4.transcript_date) from address as t1 join degrees as t2 on t1.address_id  =  t2.address_id join transcripts as t3 on t2.address_id  =  t3.address_id join transcript_contents as t4<separator> select max(t1.release_date) from transcripts as t1 join transcript_contents as t2 on t1.transcript_id  =  t2.transcript_id;<separator> select count(*),  t1.student_course_id from student_enrolment as t1 join transcripts as t2 on t1.student_enrolment_id  =  t2.transcript_id group by t1.student_course_id having count(*)  >  1;<separator> select max(t1.course_id),  t2.student_course_id from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.transcript_id group by t2.student_course_id;<separator> select t1.transcript_date,  t1.transcript_id from transcripts as t1 join transcript_contents as t2 on t1.transcript_id  =  t2.transcript_id group by t1.transcript_date order by count(*) asc limit 1;<separator> select t1.transcript_date,  t1.transcript_id from transcripts as t1 join transcript_contents as t2 on t1.transcript_id  =  t2.transcript_id group by t1.transcript_id order by count(*) asc limit 1;<separator> select t1.semester_id from student_enrolment as t1 join degrees as t2 on t1.degree_program_id  =  t2.degree_program_id where t2.title like'master%'; intersect select t1.semester_id from student_enrol<separator> select t1.semester_id from student_enrolment as t1 join degrees as t2 on t1.degree_program_id  =  t2.degree_program_id where t2.degree_summary_name  =  "master"; intersect select t1.semester_<separator> select count(distinct current_address_id) from students;<separator> select distinct t1.address_id from address as t1 join students as t2 on t1.address_id  =  t2.current_address_id;<separator> select * from students order by last_name,  first_name;<separator> select t4.* from students as t1 join address_details as t2 on t1.permanent_address_id  =  t2.address_detail_id join permanent_addresses as t3 on t2.permanent_address_id  =  t3.address_id join current<separator> select t4.section_name from address as t1 join sections as t2 on t1.address_id  =  t2.section_id join course as t3 on t2.course_id  =  t3.course_id join student_enrolment_courses as t4 on t<separator> select t4.section_description from address as t1 join sections as t2 on t1.address_id  =  t2.section_id join course as t3 on t2.course_id  =  t3.course_id join transcript_contents as t4 on t3.course_<separator> select t1.first_name from students as t1 join permanent_addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country like '%haiti' intersect select distinct t1.first_name from students as t1 join current_<separator> select t1.first_name from students as t1 join permanent_addresses as t2 on t1.permanent_address_id  =  t2.address_id where country  =  "haiti" intersect select distinct t1.first_name from students as t1 join current_address<separator> select t2.title from cartoon as t1 join tv_show as t2 on t1.channel  =  t2.id order by t1.title;<separator> select title from cartoon order by title;|<separator> select title from cartoon where directed_by  =  'ben jones';<separator> select title from cartoon where directed_by  =  'ben jones';|<separator> select count(*) from cartoon where directed_by  =  'joseph kuhr';<separator> select count(*) from cartoon where directed_by  =   "joseph kuhr";<separator> select title,  directed_by from cartoon order by original_air_date;<separator> select title,  directed_by from cartoon order by original_air_date;<separator> select t2.title from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id where t1.directed_by like "%ben%jones%" or t1.directed_by like "%brandon%vietti";<separator> select title from cartoon where directed_by  =  'ben jones' intersect select title from cartoon where directed_by  =  'brandon vietti';<separator> select t2.country,  count(*) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t2.country order by count(*) desc limit 1;<separator> select t2.country,  count(*) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t2.country order by count(*) desc limit 1;<separator> select count(distinct t2.series_name),  count(distinct t3.content) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel join tv_channel as t3 on t1.id!= t2.channel;<separator> select count(distinct t2.series_name),  count(distinct t3.content) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel join tv_channel as t3 on t1.id  =  t3.id<separator> select t2.content from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.series_name  = 'sky radio';<separator> select t2.content from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.series_name  =  "sky radio";<separator> select t2.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.series_name  = 'sky radio';<separator> select t2.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.series_name like "%sky%radio%";<separator> select count(*) from tv_channel where language  =  'english';<separator> select count(*) from tv_channel where country  =  'english';<separator> select t2.language from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t2.language order by count(*) asc limit 1;<separator> select language from tv_channel group by language order by count(*) asc limit 1;<separator> select t2.language,  count(*) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t2.language;<separator> select count(*),  t2.language from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t2.language;<separator> select t2.series_name from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where title  =  'the rise of the blue beetle!';<separator> select t2.series_name from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where title  =  'the rise of the blue beetle';<separator> select t2.title from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.series_name  = 'sky radio';<separator> select t2.title from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.series_name  = 'sky radio';<separator> select t2.episode from tv_serie as t1 join tv_series as t2 on t1.id  =  t2.id order by t1.rating;<separator> select episode from tv_series order by rating;<separator> select t2.episode,  t1.rating from tv_series as t1 join tv_series as t2 on t1.id  =  t2.parent where t1.rating  >   (select max(t1.rating) from tv_series);<separator> select t2.episode,  t2.rating from tv_series as t1 join tv_series as t2 on t1.id  =  t2.parent where rating  >  7 order by rating desc limit 3;<separator> select min(t2.share),  max(t2.share) from tv_series as t1 join tv_series as t2 on t1.id!= t2.id;<separator> select max(t2.share),  min(t2.share) from tv_series as t1 join tv_series as t2 on t1.id!= t2.id;<separator> select t2.air_date from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t1.episode  =  'a love of a lifetime';<separator> select t2.air_date from tv_series as t1 join tv_series as t2 on t1.id  =  t2.parent where title  =  'a love of a lifetime';<separator> select t2.weekly_rank from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t1.episode  =  'a love of a lifetime';<separator> select t2.weekly_rank from tv_series as t1 join tv_series as t2 on t1.episode  =  t2.episode where title  =  'a love of a lifetime';<separator> select t2.series_name from tv_serie as t1 join tv_channel as t2 on t1.channel  =  t2.id where t1.episode  =  'a love of a lifetime';<separator> select t2.series_name from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t1.episode  =  'a love of a lifetime';<separator> select t2.episode from tv_serie as t1 join tv_channel as t2 on t1.channel  =  t2.id where t1.series_name  = 'sky radio';<separator> select t2.episode from tv_serie as t1 join tv_series as t2 on t1.id  =  t2.id where t1.series_name  = 'sky radio';<separator> select count(*),  t2.director from cartoon as t1 join tv_show_crew as t2 on t1.directed_by  =  t2.person where t2.position like "%director%";<separator> select count(*),  directed_by from cartoon group by directed_by;<separator> select t2.production_code,  t3.channel from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id join tv_series as t3 on t1.id  =  t3.channel order by air_date desc limit 1;<separator> select production_code,  t2.channel from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id order by air_date desc limit 1;<separator> select t2.package_choice,  t3.series_name from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel intersect select t3.series_name from tv_channel as t1 join tv_series as t2 on t1.id<separator> select t2.package_option,  t3.series_name from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel intersect select t2.package_option,  t3.series_name from tv_channel as t1 join tv_series<separator> select t2.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.directed_by where t2.written_by  =  "todd";<separator> select country from tb2 as tv_channel where directed_by  =   "todd casey";<separator> select country from tb_tv_channel except select country from tb_tv_channel where directed_by  =  "todd casey";<separator> select country from tb2 where directed_by!= "todd casey";<separator> select t2.series_name,  t3.country from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel join cartoon as t3 on t3.channel  =  t1.id where t3.directed_by like "%ben<separator> select t2.series_name,  t3.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel join tv_channel as t3 on t2.directed_by  =  "ben jones" or t2.directed_<separator> select t2.pixel_aspect_ratio_par,  t3.nation from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel join country as t3 on t1.country  =  t3.id where language!= '<separator> select t2.pixel_aspect_ratio_par,  t2.country from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.language!= 'english';<separator> select t2.id from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by country having count(*)  >  2;<separator> select id from tv_channel where count(*)  >  2;<separator> select t2.id from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.directed_by  =  "ben jones";<separator> select t2.id from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.directed_by  =  "ben jones";|<separator> select t2.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.directed_by like "%ben%jones";<separator> select t2.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.directed_by!= "ben jones";<separator> select count(*) from poker_player;<separator> select count(*) from poker_player;<separator> select money_rank,  sum(earnings) from poker_player group by best_finish order by sum(earnings) desc;<separator> select sum(t2.earnings) from poker_player as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t2.earnings desc;<separator> select t1.final_table_made,  t2.best_finish from poker_player as t1 join poker_tournament as t2 on t1.poker_tournament_id  =  t2.poker_tournament_id;<separator> select t1.final_table_made,  t2.best_finish from poker_player as t1 join poker_tournament as t2 on t1.poker_tournament_id  =  t2.poker_tournament_id;<separator> select avg(t1.earnings) from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id;<separator> select avg(t1.earnings) from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id;<separator> select money_rank from poker_player order by best_finish desc limit 1;<separator> select money_rank from poker_player order by best_finish desc limit 1;<separator> select max(t1.final_table_made) from poker_player as t1 join earning as t2 on t1.people_id  =  t2.people_id where t2.earnings  <  200000;<separator> select max(t1.final_table_made) from poker_player as t1 join earning as t2 on t1.people_id  =  t2.people_id where t2.earnings  <  200000;<separator> select t1.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id;<separator> select t1.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id;<separator> select t1.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id where t2.earnings  >  300000;<separator> select t1.name from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id where t1.earnings  >  300000;<separator> select t1.name from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by best_finish;<separator> select t1.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by sum(t2.final_table_made) desc;<separator> select t1.birth_date from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t2.earnings limit 1;<separator> select t1.birth_date from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t2.earnings limit 1;<separator> select best_finish from poker_player order by height desc limit 1;<separator> select t2.money_rank from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.height desc limit 1;<separator> select avg(t1.earnings) from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id where t2.height  >  200;<separator> select avg(t1.earnings) from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id where height  >  200;<separator> select name from poker_player order by money_rank desc;<separator> select t1.name from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.earnings desc;<separator> select distinct t1.nationality,  count(*) from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id group by t1.nationality;<separator> select count(*),  t1.nationality from people as t1 group by t1.nationality;<separator> select t1.nationality from people as t1 group by t1.nationality order by count(*) desc limit 1;<separator> select t1.nationality from people as t1 group by t1.nationality order by count(*) desc limit 1;<separator> select distinct t1.nationality from people as t1 join people as t2 on t1.people_id  =  t2.people_id group by t1.nationality having count(*)  >=  2;<separator> select t1.nationality from people as t1 join people as t2 on t1.people_id!= t2.people_id group by t1.nationality having count(*)  >=  2;<separator> select t1.name,  t2.birth_date from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t1.name;<separator> select name,  birth_date from people order by name;<separator> select name from people where nationality!= 'russia';<separator> select name from people where nationality!= "russian";<separator> select name from people where people_id not in (select people_id from poker_player);<separator> select name from people where people_id not in (select people_id from poker_player);<separator> select count(distinct nationality) from people;<separator> select count(distinct nationality) from people;<separator> select count(*) from area_code_state;<separator> select t1.contestant_number,  t2.contestant_name from contestants as t1 join contestants as t2 on t1.contestant_number  =  t2.contestant_number order by t2.contestant_name desc;<separator> select t1.vote_id,  t2.phone_number,  t3.state from votes as t1 join contestants as t2 on t1.contestant_number  =  t2.contestant_number join area_code_state as t3 on t1.state  =<separator> select max(t1.area_code),  min(t2.area_code) from area_code as t1 join area_code_state as t2 on t1.area_code_id  =  t2.area_code;<separator> select max(t1.created) from area_code_state as t1 join votes as t2 on t1.state  =  t2.state where t2.state  =  "ca";<separator> select t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number where t1.contestant_name!= "jessie alloway";<separator> select state,  created from votes group by state;<separator> select t1.contestant_number,  t2.contestant_name from contests as t1 join contestants as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number having count(*)  >=  2<separator> select t1.contestant_number,  t2.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number order by count(*) asc limit 1<separator> select count(*) from votes where state  =  "ny" union select count(*) from votes where state  =  "ca";<separator> select count(*) from contestants where contestant_number not in (select distinct contestant_number from votes);<separator> select t1.area_code from area_code_state as t1 join votes as t2 on t1.area_code  =  t2.state group by t1.area_code order by count(*) desc limit 1;<separator> select created,  state,  phone_number from votes where contestant_name  =  "tabatha gehling";<separator> select t1.area_code from area_code_state as t1 join votes as t2 on t1.area_code  =  t2.state where t2.contestant_number  =  "tabatha gehling" intersect select t1.area_code from area_code_<separator> select t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number where t1.contestant_name like '%al%';<separator> select name from country where indepyear >= 1950;<separator> select name from country where indepyear >= 1950;<separator> select count(*) from country where governmentform  =  "republic";<separator> select count(*) from country where governmentform  =  "republic";<separator> select sum(surfacearea) from country where continent  =  "caribbean" and region  =  "caribbean";<separator> select sum(surfacearea) from country where continent  =  "caribbean";<separator> select t1.continent from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "anguilla";<separator> select t1.continent from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofullname  =  "anguilla";<separator> select t1.region from country as t1 join city as t2 on t1.code  =  t2.countrycode where name  =  "kabul";<separator> select region from country where name  =  "kabul";<separator> select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  >  0 group by t1.language order by count(*) desc limit 1;<separator> select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  >  0.75;<separator> select t1.population,  t3.lifeexpectancy from country as t1 join countrylanguage as t2 on t1.code  =  t2.code intersect select t4.lifeexpectancy from country as t3;<separator> select t1.population,  t3.lifeexpectancy from country as t1 join countrylanguage as t2 on t1.code  =  t2.code intersect select t4.lifeexpectancy from country as t1 join countrylanguage as t2 on t1.code  =  t2.code<separator> select t1.region,  t1.population from country as t1 join district as t2 on t1.district  =  t2.id where t1.name  =  "angola";<separator> select t1.region,  count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code where t2.language  =  "portuguese" group by t1.region;<separator> select avg(t1.lifeexpectancy) from country as t1 join country as t2 on t1.continent  =  "central africa" group by t1.continent;<separator> select avg(t1.lifeexpectancy) from country as t1 join country as t2 on t1.continent  =  "central africa" intersect select t3.lifeexpectancy from country as t3 where t3.continent  =  "central africa";<separator> select t1.name from country as t1 join country as t2 on t1.continent  =  "asia" where t2.lifeexpectancy  <= (select min(t3.lifeexpectancy) from country as t3 where continent  =  "asia");<separator> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where continent  =  "asia" order by lifeexpectancy limit 1;<separator> select sum(t1.population),  max(t3.gnp) from country as t1 join country as t2 on t1.continent  =  "asia" join country as t3 on t1.code  =  t3.code where continent  =  'asia';<separator> select sum(t1.population),  max(t3.gnp) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code group by continent having count(*)  >  0 intersect select max(t3.gnp) from country as t1 join<separator> select avg(t1.lifeexpectancy) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code where continent  =  "africa" and governmentform  =  "republic";<separator> select avg(t1.lifeexpectancy) from country as t1 join country as t2 on t1.continent  =  "africa" where t2.governmentform  = 'republic';<separator> select sum(t1.surfacearea) from country as t1 join country as t2 on t1.continent  =  "asia" intersect select sum(t3.surfacearea) from country as t3 join country as t4 on t3.continent  =  "europe";<separator> select sum(surfacearea) from country where continent  =  "asia" intersect select sum(surfacearea) from country where continent  =  "europe";<separator> select count(*) from city where name  =  "gelderland";<separator> select sum(t1.population) from city as t1 join country as t2 on t1.countrycode  =  t2.code where t2.district  =  "gelderland";<separator> select avg(t1.gnp),  sum(t3.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code where t2.isoterminal  =   "us" union select avg(t1.gnp),<separator> select avg(t1.gnp),  sum(t3.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code where t2.isousa  =  1 group by t1.code;<separator> select count(distinct language) from countrylanguage;<separator> select count(distinct language) from countrylanguage;<separator> select count(*) from governmentform where continent  =  "africa";<separator> select count(distinct governmentform) from country where continent  =  "africa";<separator> select sum(t1.percentage) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.countrycode  =  "aruba";<separator> select count(*) from countrylanguage where countrycode  =  "aruba";<separator> select count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isoficial  =  "yes" and t1.name  =  'afghanistan';<separator> select count(*) from countrylanguage where language  =  "afghani";<separator> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t2.countrycode order by count(*) desc limit 1;<separator> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.name order by sum(t2.percentage) desc limit 1;<separator> select t1.continent from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.continent order by count(*) desc limit 1;<separator> select t1.continent from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.continent order by count(*) desc limit 1;<separator> select count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language  =  "english" intersect select count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language  =<separator> select count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language  =  'english' intersect select count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language  =<separator> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language  =  "english" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode<separator> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language  =  "english" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode<separator> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language  =  "english" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode<separator> select t1.name from country language  join country on (t1.countrycode  =  t2.code) where isofficial  =  "english" intersect select t1.name from country language  join country on (t1.countrycode  =  t2.code) where isofficial<separator> select count(distinct continent) from countrylanguage where language  =  "chinese";<separator> select count(*) from country where language  =  "chinese";<separator> select region from country where language  =  'english' intersect select region from country where language  =  'dutch';<separator> select region from country where language  =  "english" intersect select region from country where language  =  "dutch";<separator> select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where percentage  >  0.5 intersect select name from country where language  =  "english" union select name from country where language  =  "dutch";<separator> select t1.name from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t1.official  =  "english" union all select t1.name from countrylanguage as t1 join country as t2 on t1.countrycode  =<separator> select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.continent  =  "asian" group by t1.language order by count(*) desc limit 1;<separator> select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where continent  =  "asia" group by t1.language order by count(*) desc limit 1;<separator> select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.govtype  =   "republic" group by t1.language having count(*)  =  1;<separator> select language from countrylanguage where code  = 'republic' group by language having count(*)  =  1;<separator> select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where language  =  "english" order by poplimit desc limit 1;<separator> select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where language  =  "english" order by population desc limit 1;<separator> select t1.name,  t1.population,  t3.lifeexpectancy from country as t1 join country as t2 on t1.continent!= "asia" except select t4.name,  t4.population,  t5.lifeexpectancy from country as t1 join country<separator> select t1.name,  t1.population,  t3.lifeexpectancy from country as t1 join country as t2 on t1.continent  =  "asia" union all select t4.name,  t4.population,  t5.lifeexpectancy from country as t<separator> select avg(t1.lifeexpectancy) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode except select avg(t1.lifeexpectancy);<separator> select avg(t1.lifeexpectancy) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial!= "english";<separator> select sum(t1.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language!= 'english';<separator> select count(*) from country where language!= 'english';<separator> select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.headofstate  =  "beatrix";<separator> select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.headofstate  =  "beatrix";<separator> select count(distinct language) from countrylanguage where indepyear <=  1930;<separator> select count(distinct language) from countrylanguage where indepyear <  1930;<separator> select t1.name from country as t1 join country as t2 on t1.continent!= "europe" intersect select name from country where continent  =  'europe';<separator> select t1.name from country as t1 join country as t2 on t1.continent!= "europe" intersect select name from country where continent  =  'europe';<separator> select t1.name from country as t1 join country as t2 on t1.code!= t2.code where t1.continent  =  "africa" intersect select name from country except select name from country where continent  =  "asia";<separator> select t1.name from country as t1 join country as t2 on t1.code!= t2.code where t1.continent  =  "africa" intersect select name from country except select name from country where continent  =  "asia";<separator> select t1.name from country as t1 join country as t2 on t1.code!= t2.code where t1.population  >  (select max(t3.population) from country as t3);<separator> select t1.name from country as t1 join country as t2 on t1.code!= t2.code where t1.population  >  (select max(t3.population) from country as t3);<separator> select t1.code from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language!= 'english';<separator> select t1.code from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language!= 'english';<separator> select t1.code from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t2.language having count(*) >  0;<separator> select t1.code from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where language!= 'english';<separator> select code from country where language!= 'english' intersect select t1.code from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode except select distinct capital from country;<separator> select code from country where language!= 'english' except select t1.code from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language == "english"; select distinct t3.code from country as t1 join countrylanguage as t2<separator> select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode except select name from city where district!= "europe" intersect select name from countrylanguage where percentage <> 'english';<separator> select name from city where district != "europe" except select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.langofficial !=  'english';<separator> select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.language  =  "chinese" intersect select name from city where continent  =  'asia';<separator> select distinct name from city where district  =  "asia" intersect select t1.name from countrylanguage as t1 join city as t2 on t1.countrycode  =  t2.countrycode except select distinct name from city;<separator> select t1.name,  t1.indepyear,  t1.surfacearea from country as t1 order by poplimit desc limit 1;<separator> select t1.name,  t3.indepyear,  t4.surfacearea from country as t1 join countrylanguage as t2 on t1.code  =  t2.code join country as t3 on t1.code  =  t3.code where t3.population <separator> select t1.population,  t1.name,  t3.leader from country as t1 join country as t2 on t1.code2  =  t2.code where t2.surfacearea  >  (select max(t4.surfacearea) from country as t4<separator> select t1.name,  t1.population,  t3.headofstate from country as t1 join countrylanguage as t2 on t1.code  =  t2.code join country as t3 on t1.code  =  t3.code where surfacearea  =  (select<separator> select t1.name, count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.name having count(*) >=  3;<separator> select t1.name,  count(*) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code group by t1.countriespeaks having count(*)  >  2;<separator> select count(*),  t1.district from city as t1 join (select avg(population),  district from city group by district ) as t2 on t1.district  =  t2.t1;<separator> select count(*),  t1.district from city as t1 join (select avg(population),  district from city group by district ) as t2 on t1.district!= t2.district where t1.population > t2.avg;<separator> select t1.govtform,  sum(t3.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code group by t1.govtform having avg(t4.lifeexpectancy)  >  72;<separator> select distinct t1.governmentform,  sum(t3.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code group by t1.governmentform having avg(t3.lifeexpectancy)  >  72;<separator> select avg(t1.lifeexpectancy),  sum(t3.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code group by t1.continent having avg(t1.lifeexpectancy) <  72;<separator> select t1.continent,  sum(t3.population),  avg(t4.lifeexpectancy) from country as t1 join countrylanguage as t2 on t1.code  =  t2.code group by t1.continent having avg(t4.lifeexpectancy<separator> select name,  surfacearea from country order by surfacearea desc limit 5;<separator> select name,  surfacearea from country order by population desc limit 5;<separator> select name from country order by population desc limit 3;<separator> select name from country order by population desc limit 3;<separator> select name from country order by population desc limit 3;<separator> select name from country order by population limit 3;<separator> select count(*) from country where continent  =  "asia";<separator> select count(*) from country where continent  =  "asia";<separator> select name from country where continent  =  "europe" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.population  =  80000;<separator> select name from country where continent  =  "europe" intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.population  =  80000;<separator> select sum(t1.population),  avg(t1.surfacearea) from country as t1 join country as t2 on t1.continent  =  "north america" where t2.surfacearea  >  3000;<separator> select sum(t1.population),  avg(t2.surfacearea) from country as t1 join country as t2 on t1.code  =  t2.code where continent  =  "north america" and t2.surfacearea  >  3000<separator> select name from city where population between 160000 and 900000;<separator> select name from city where population between 160000 and 900000;<separator> select t1.language from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code group by t1.language order by count(*) desc limit 1;<separator> select t1.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.language order by count(*) desc limit 1;<separator> select t1.language,  count(*) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code group by t1.language order by count(*) desc limit 5;<separator> select t1.code,  t3.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code order by count(*) desc limit 5;<separator> select count(*) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where language  =  "spanish" group by percentageget answer from (select sum(t3.count) from countrylanguage as t1 join country as t2 on t1.<separator> select count(*) from countrylanguage where percentage  >  0.5;<separator> select t1.code from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t2.countrycode order by count(*) desc limit 1;<separator> select t1.code from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where percentage  >  0.75;<separator> select count(*) from conductor;<separator> select count(*) from conductor;<separator> select name from conductor order by age;<separator> select name from conductor order by age;<separator> select name from conductor where nationality!= 'usa';<separator> select name from conductor where nationality!= 'usa';<separator> select distinct t1.record_company from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id group by t1.record_company order by year_of_founded;<separator> select distinct t1.record_company from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id order by year_of_founded desc;<separator> select avg(t1.attendence) from show as t1 join performance as t2 on t1.performance_id  =  t2.performance_id;<separator> select avg(t1.attendence) from show as t1 join performance as t2 on t1.performance_id  =  t2.performance_id;<separator> select max(t2.share),  min(t1.share) from performance as t1 join show as t2 on t1.performance_id  =  t2.performance_id where t1.type!= 'live final';<separator> select max(t2.share),  min(t1.share) from performance as t1 join show as t2 on t1.performance_id  =  t2.performance_id where t1.type!= 'live final';<separator> select count(distinct nationality) from conductor;<separator> select count(distinct nationality) from conductor;<separator> select name from conductor order by year_of_work desc;<separator> select name from conductor order by year_of_work desc;<separator> select t1.name from conductor as t1 join (select distinct name from conductor order by year_of_work desc limit 1) as t2 on t1.name  =  t2.name;<separator> select t1.name from conductor as t1 join (select distinct conductor_id,  max(year_of_work) from conductor group by conductor_id ) as t2 on t1.conductor_id  =  t2.conductor_id;<separator> select t1.name,  t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id;<separator> select t1.name,  t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id;<separator> select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name having count(*)  >  1;<separator> select t1.name from conductor as t1 join performance as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name having count(*)  >  1;<separator> select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name order by count(*) desc limit 1;<separator> select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name order by count(*) desc limit 1;<separator> select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id where year_of_work >  2008;<separator> select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id where t2.year_of_founded >  2008;<separator> select distinct t1.record_company,  count(*) from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id group by t1.record_company;<separator> select count(*),  t1.record_company from orchestra as t1 join recording_companies as t2 on t1.record_company  =  t2.recording_company group by t2.recording_company;<separator> select major_record_format from orchestra group by major_record_format order by count(*) desc;<separator> select major_record_format from orchestra group by major_record_format order by count(*) desc;<separator> select record_company from orchestra group by record_company order by count(*) desc limit 1;<separator> select record_company from orchestra group by record_company order by count(*) desc limit 1;<separator> select t1.orchestra from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id where not exists (select * from performance);<separator> select t1.orchestra from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id where t2.orchestra_id is null;<separator> select distinct t1.record_company from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id where year_of_founded <  2003 intersect select distinct t1.record_company from orchestra as t1 join performance as<separator> select distinct t1.record_company from orchestra as t1 join performance as t2 on t1.orchestra_id  =  t2.orchestra_id where year_of_founded <  2003 intersect select distinct t1.record_company from orchestra as t1 join performance as<separator> select count(*) from orchestra where major_record_format  =  'cd' union select count(*) from orchestra where major_record_format  =  'dvd';<separator> select count(*) from orchestra where major_record_format  =  'cd' intersect select count(*) from orchestra where major_record_format  =  'dvd';<separator> select year_of_founded from orchestra where major_record_format != "cd" group by year_of_founded having count(*)  >  1;<separator> select year_of_founded from orchestra where count(*)  >  1;<separator> select count(*) from highschooler;<separator> select count(*) from highschooler;<separator> select name,  grade from highschooler;<separator> select name,  grade from highschooler;<separator> select grade from highschooler;<separator> select grade from highschooler;<separator> select t1.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where name  =  "kyle";<separator> select grade from highschooler where name  =  "kyle";<separator> select name from highschooler where grade  =  10;<separator> select name from highschooler where grade  =  10;<separator> select t1.id from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where name  =  "kyle";<separator> select t1.id from student as t1 join highschooler as t2 on t1.id  =  t2.student_id where name  =  "kyle";<separator> select count(*) from highschooler where grade  =   "9" union all select count(*) from highschooler where grade  =   "10";<separator> select count(*) from highschooler where grade  =   "9" union all select count(*) from highschooler where grade  =   "10";<separator> select count(*),  grade from highschooler group by grade;<separator> select count(*),  grade from highschooler group by grade;<separator> select grade from highschooler group by grade order by count(*) desc limit 1;<separator> select max(grade) from highschooler;<separator> select grade from highschooler group by grade having count(*) >= 4;<separator> select grade from highschooler group by grade having count(*) >= 4;<separator> select t1.student_id,  count(*) from friend as t1 join highschooler as t2 on t1.student_id  =  t2.id group by t1.student_id;<separator> select count(*),  t1.student_id from friend as t1 join highschooler as t2 on t1.student_id  =  t2.id group by t2.id;<separator> select name,  count(*) from highschooler group by id;<separator> select name,  count(*) from highschooler group by name;<separator> select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id group by t1.name order by count(*) desc limit 1;<separator> select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id group by t1.name order by count(*) desc limit 1;<separator> select name from highschooler where count(*) >= 3;<separator> select name from highschooler where count(*) >= 3;<separator> select name from student as t1 join friend as t2 on t1.id  =  t2.student_id where t1.name  =  "kyle";<separator> select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id where t1.name  =  "kyle";<separator> select count(*) from friend where name  =  "kyle";<separator> select count(*) from friend where student_id  =  1;<separator> select student_id from highschooler where id not in (select t1.student_id from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id);<separator> select id from highschooler where student_id not in (select t1.student_id from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id);<separator> select name from highschooler where id not in (select student_id from friend);<separator> select name from highschooler where id not in (select student_id from friend);<separator> select id from highschooler where student_id in (select t1.student_id from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id) intersect select t3.student_id from like as t1 join highschooler as t2 on t<separator> select t1.id from student as t1 join like as t2 on t1.id  =  t2.student_id intersect select id from friend;<separator> select t1.name from student as t1 join highschooler as t2 on t1.id  =  t2.student_id where exists (select * from like as t3 join highschooler as t4 on t3.student_id  =  t4.id where t4.id!=<separator> select name from highschooler where id in (select t1.student_id from like as t2 join highschooler as t1 on t2.student_id  =  t1.id);<separator> select t1.student_id,  count(*) from likes as t1 join highschooler as t2 on t1.student_id  =  t2.id group by t1.student_id;<separator> select count(*) from likes;<separator> select name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name;<separator> select t1.name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by name;<separator> select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name order by count(*) desc limit 1;<separator> select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name order by count(*) desc limit 1;<separator> select name from highschooler where id in (select t1.student_id from like as t1 join highschooler as t2 on t1.student_id  =  t2.id group by t1.student_id having count(*)  >=  2);<separator> select name from highschooler where id in (select t1.student_id from like as t1 join highschooler as t2 on t1.student_id  =  t2.id group by t1.student_id having count(*)  >=  2);<separator> select name from highschooler where grade  >  5 intersect select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id group by t1.name having count(*)  >=  2;<separator> select name from highschooler where grade  >  5 intersect select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id group by t1.name having count(*)  >=  2;<separator> select count(*) from likes where liked_id  =  1;<separator> select count(*) from likes as t1 join highschooler as t2 on t1.student_id  =  t2.id where name  =  "kyle";<separator> select avg(t1.grade) from student as t1 join friend as t2 on t1.id  =  t2.student_id group by t1.id having count(*) >  0;<separator> select avg(t1.grade) from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id;<separator> select min(t1.grade) from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id where t2.friend_id is null;<separator> select min(t1.grade) from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id where t2.friend_id is null;<separator> select state from owners as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id;<separator> select state from owners as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id;<separator> select avg(t1.age) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id;<separator> select avg(t1.age) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id;<separator> select professional_id,  last_name,  home_phone from professionals where first_name!= "admin" intersect select t1.professional_id,  t3.last_name,  t4.home_phone from treats as t1 join professionals as t2 on t1.professional<separator> select professional_id,  last_name,  home_phone from professionals where street like '%indiana%' intersect select t1.professional_id,  last_name,  home_phone from professionals as t1 join treatments as t2 on t1.professional_id  =  t2<separator> select name from dogs where cost_of_treatment <= (select sum(cost_of_treatment) from treats as t2 join dogs as t1 on t1.dog_id  =  t2.dog_id group by t1.dog_id);<separator> select name from dogs where cost_of_treatment < 1000;<separator> select t1.first_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id except select distinct(t3.first_name) from professionals as t3;<separator> select distinct t1.first_name from owners as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id except select distinct t3.first_name from dogs as t4 join owners as t5 on t4.owner_id  =  t5<separator> select t1.professional_id,  t2.role_code,  t3.email_address from professionals as t1 join roles as t2 on t1.role_code  =  t2.role_code join emails as t3 on t1.email_address  =  t3<separator> select professional_id,  last_name from professionals where professional_id not in (select t1.professional_id from treats as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id);<separator> select t1.owner_id,  t2.first_name,  t2.last_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by count(*) desc limit 1;<separator> select t1.owner_id,  t2.first_name,  t2.last_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by count(*) desc limit 1;<separator> select t1.professional_id,  t2.role_code,  t3.first_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id join owners as t3 on t2.owner_id <separator> select professional_id,  role_code,  first_name from professionals group by professional_id having count(*)  >=  2;<separator> select t1.breed_name from breeds as t1 join dogs as t2 on t1.breed_code  =  t2.breed_code group by t1.breed_name order by count(*) desc limit 1;<separator> select t1.breed_name from breeds as t1 join dogs as t2 on t1.breed_code  =  t2.breed_code group by t1.breed_name order by count(*) desc limit 1;<separator> select t1.owner_id,  t2.last_name from owners as t1 join treats as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t2.cost_of_treatment) desc limit<separator> select t1.owner_id,  t2.last_name from owners as t1 join treats as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t2.cost_of_treatment) desc limit<separator> select t1.treatment_type_description from treatment_types as t1 join treats as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by cost_of_treatment order by sum(t2.cost_of_<separator> select t1.treatment_type_description from treatment_types as t1 join treats as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by t1.treatment_type_code order by sum(t2.cost<separator> select t1.owner_id,  t2.zip_code from owners as t1 join charges as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t2.charge_amount) desc limit 1;<separator> select t1.owner_id,  t2.zip_code from charges as t1 join owners as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t1.charge_amount) desc limit 1;<separator> select t1.professional_id,  t2.cell_number from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*)  >=  2;<separator> select professional_id,  max(cell_number) from professionals group by professional_id having count(*) >=2;<separator> select t1.first_name,  t2.last_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where cost_of_treatment < (select avg(cost_of_treatment) from<separator> select t1.first_name,  t1.last_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where cost_of_treatment < (select avg(cost_of_treatment) from<separator> select t1.date_of_treatment,  t2.first_name from treats as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id;<separator> select t1.date_of_treatment,  t2.first_name from treats as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id;<separator> select t1.cost_of_treatment,  t2.treatment_type_description from treats as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code;<separator> select sum(t1.cost_of_treatment),  t2.treatment_type_description from treats as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code;<separator> select t1.first_name,  t1.last_name,  t2.size_description from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;<separator> select t1.first_name,  t1.last_name,  t2.size_code from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;<separator> select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;<separator> select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;<separator> select t1.name,  date_of_treatment from dogs as t1 join treats as t2 on t1.dog_id  =  t2.dog_id where t1.breed_code in (select breed_code from breeds group by breed_code order by count<separator> select t1.name,  date_of_treatment from dogs as t1 join treats as t2 on t1.dog_id  =  t2.dog_id where t2.treatment_type_code  =  'rare' order by count(*) desc limit 1;<separator> select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id where state  =  "virginia";<separator> select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id where state  =  "virginia";<separator> select t1.date_arrived,  t2.date_departed from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id;<separator> select t1.date_arrived,  t2.date_departed from dogs as t1 join treats as t2 on t1.dog_id  =  t2.dog_id;<separator> select t2.last_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id order by date_of_birth limit 1;<separator> select t1.last_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id order by age asc limit 1;<separator> select t1.email_address from professionals as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where first_name like '%hawai%' intersect select email_address from professionals except select email_address from professionals where state like 'wi%';<separator> select t1.email_address from professionals as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where first_name like '%hawai%' intersect select email_address from professionals except select email_address from professionals where state like 'wi%';<separator> select t1.date_arrived,  t2.date_departed from dogs as t1 join treats as t2 on t1.dog_id  =  t2.dog_id;<separator> select t1.date_arrived,  t2.date_departed from dogs as t1 join treats as t2 on t1.dog_id  =  t2.dog_id;<separator> select count(*) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id group by t1.dog_id having count(*) >  0;<separator> select count(*) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id;<separator> select count(*) from professionals as t1 join treats as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having sum(t2.treatment_id)!= 0;<separator> select count(*) from professionals as t1 join treats as t2 on t1.professional_id  =  t2.professional_id group by professional_id having count(*) >  0;<separator> select t1.role,  t2.street,  t3.city,  t4.state from professionals as t1 join owners as t2 on t1.owner_id  =  t2.owner_id join cities as t3 on t2.city  =  t3.city<separator> select t1.role_code,  t2.street,  t3.city,  t4.state from professionals as t1 join owners as t2 on t1.owner_id  =  t2.owner_id join cities as t3 on t2.city  =  t3<separator> select t1.first_name,  t1.last_name,  t2.email_address from owners as t1 join professionals as t2 on t1.owner_id  =  t2.professional_id where t2.state like '% north';<separator> select t1.first_name,  t1.last_name,  t2.state from owners as t1 join professionals as t2 on t1.owner_id  =  t2.professional_id where t2.state like '% north';<separator> select count(*) from dogs where age  <  (select avg(age) from dogs);<separator> select count(*) from dogs where age  < (select avg(age) from dogs);<separator> select max(t1.cost_of_treatment) from treats as t1 join treatments as t2 on t1.treatment_id  =  t2.treatment_id;<separator> select max(t1.cost_of_treatment) from treats as t1 join treatments as t2 on t1.treatment_id  =  t2.treatment_id order by date_of_treatment desc limit 1;<separator> select count(*) from dogs where dog_id not in (select t1.dog_id from treats as t1 join dogs as t2 on t1.dog_id  =  t2.dog_id);<separator> select count(*) from dogs where dog_id not in (select t1.dog_id from treats as t1 join dogs as t2 on t1.dog_id  =  t2.dog_id);<separator> select count(*) from owners except select owner_id from dogs;<separator> select count(*) from owners except select owner_id from dogs;<separator> select count(*) from professionals as t1 join treats as t2 on t1.professional_id  =  t2.professional_id except select distinct professional_id from treats;<separator> select count(*) from professionals as t1 join treats as t2 on t1.professional_id  =  t2.professional_id where t2.dog_id is null;<separator> select t2.name,  t3.age,  t4.weight from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id join size_codes as t3 on t1.size_code  =  t3.size_code join<separator> select t2.name,  t3.age,  t4.weight from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t1.abandoned_yn!= "1" union all select t2.name,  t3<separator> select avg(t1.age) from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id;<separator> select avg(t1.age) from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id;<separator> select max(t1.age) from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id;<separator> select max(t1.age) from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id;<separator> select t1.charge_type,  sum(t2.charge_amount) from charges as t1 join charges as t2 on t1.charge_id  =  t2.charge_id group by t1.charge_type;<separator> select t1.charge_type,  sum(t2.charge_amount) from charges as t1 join charges as t2 on t1.charge_id  =  t2.charge_id group by t1.charge_type;<separator> select max(t1.cost_of_treatment) from treats as t1 join charges as t2 on t1.treatment_id  =  t2.charge_id group by t2.charge_type;<separator> select max(t1.charge_amount) from charges as t1 join dog_charges as t2 on t1.charge_id  =  t2.charge_id group by t1.charge_type;<separator> select t1.email_address,  t2.cell_number,  t3.home_phone from professionals as t1 join owners as t2 on t1.owner_id  =  t2.owner_id join professionals as t3 on t1.professional_id  = <separator> select t1.email_address,  t2.cell_number,  t3.home_phone from professionals as t1 join owners as t2 on t1.owner_id  =  t2.owner_id join professionals as t3 on t1.professional_id  = <separator> select distinct t1.breed_name,  t2.size_description from breeds as t1 join sizes as t2 on t1.breed_code  =  t2.size_code;<separator> select distinct t1.breed_name,  t2.size_description from breeds as t1 join sizes as t2 on t1.breed_code  =  t2.size_code;<separator> select t1.first_name,  t2.treatment_type_description from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id;<separator> select t1.first_name,  t2.treatment_type_description from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id;<separator> select count(*) from singer;<separator> select count(*) from singer;<separator> select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id order by t1.net_worth_millions;<separator> select name from singer order by net_worth_millions;<separator> select t1.birth_year,  t2.citizenship from singer as t1 join citizen as t2 on t1.citizen_id  =  t2.citizen_id;<separator> select t1.birth_year,  t2.citizenship from singer as t1 join citizen as t2 on t1.citizen_id  =  t2.citizen_id;<separator> select t1.name from singer as t1 join citizen as t2 on t1.citizenship  =  t2.country where country!= 'france';<separator> select name from singer where citizenship!= "france";<separator> select t2.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t1.birth_year in (1948,  1949);<separator> select name from singer where birth_year in (1948,  1949);<separator> select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id order by t1.net_worth_millions desc limit 1;<separator> select t1.name from singer as t1 join (select max(net_worth_millions),  name from singer group by name) as t2 on t1.name  =  t2.name;<separator> select distinct t1.citizenship,  count(*) from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.citizenship;<separator> select count(*),  t1.citizenship from singer as t1 group by t1.citizenship;<separator> select t1.citizenship from singer as t1 join (select distinct citizenship from singer) as t2 on t1.citizenship  =  t2.citizenship group by t2.citizenship order by count(*) desc limit 1;<separator> select t1.citizenship from singer as t1 group by t1.citizenship order by count(*) desc limit 1;<separator> select t1.citizenship,  max(t2.net_worth_millions) from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.citizenship;<separator> select max(net_worth_millions),  citizenship from singer group by citizenship;<separator> select title from song union select name from singer;<separator> select title,  name from song; unnest(distinct title) intersect distinct name;<separator> select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t2.sales  >  300000;<separator> select name from singer where sales  >  300000;<separator> select name from singer where count(*)  >  1;<separator> select name from singer where count(*)  >  1;<separator> select t1.name,  sum(t2.sales) from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.name;<separator> select t1.name,  sum(t2.sales) from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.name;<separator> select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t2.song_id is null;<separator> select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id except select name from singer;<separator> select t2.citizenship from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t1.birth_year <  1945 intersect select t2.citizenship from singer as t1 join song as t<separator> select t2.citizenship from singer as t1 join citizen as t2 on t1.citizenship  =  t2.citizen_id where t1.birth_year <  1945 intersect select t2.citizenship from singer as t1 join citizen<separator> select count(*) from other_available_features;<separator> select t1.feature_type_name from ref_feature_types as t1 join other_available_features as t2 on t1.feature_type_code  =  t2.feature_type_code where t2.feature_name  =  "air conditioning";<separator> select t1.property_type_description from properties as t1 join ref_property_types as t2 on t1.property_type_code  =  t2.property_type_code;<separator> select property_name from properties where (property_type_code) in ('house','apartment') group by property_type_code having count(*)  >  1;