[{"data":"Question: what is the biggest city in wyoming\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"},{"data":"Question: what wyoming city has the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"},{"data":"Question: what is the largest city in wyoming\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"},{"data":"Question: where is the most populated area of wyoming\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"},{"data":"Question: which city in wyoming has the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"},{"data":"Question: what cities in wyoming have the highest number of citizens\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"},{"data":"Question: what cities in wyoming have the highest populations\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"},{"data":"Question: what is the most populous city in wyoming\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"},{"data":"Question: what is the largest city in wyoming by population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"},{"data":"Question: what is the largest city of wyoming\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"},{"data":"Question: what is the city in wyoming with the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";"},{"data":"Question: which rivers run through the state with the largest city in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city ) );"},{"data":"Question: how big is new mexico\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT area FROM state WHERE state_name  =  \"new mexico\";"},{"data":"Question: what is the area of new mexico\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT area FROM state WHERE state_name  =  \"new mexico\";"},{"data":"Question: how large is new mexico\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT area FROM state WHERE state_name  =  \"new mexico\";"},{"data":"Question: what is the area of the new mexico state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT area FROM state WHERE state_name  =  \"new mexico\";"},{"data":"Question: what is the size of new mexico\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT area FROM state WHERE state_name  =  \"new mexico\";"},{"data":"Question: what is the area of new mexico in square kilometers\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT area FROM state WHERE state_name  =  \"new mexico\";"},{"data":"Question: how many people live in california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name  =  \"california\";"},{"data":"Question: how many people reside in california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name  =  \"california\";"},{"data":"Question: how many residents live in california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name  =  \"california\";"},{"data":"Question: how much population does california have\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name  =  \"california\";"},{"data":"Question: what are the population of california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name  =  \"california\";"},{"data":"Question: what is the population of california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name  =  \"california\";"},{"data":"Question: how many people are in the state of california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name  =  \"california\";"},{"data":"Question: what can you tell me about the population of california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name  =  \"california\";"},{"data":"Question: how many people are there in california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name  =  \"california\";"},{"data":"Question: how many citizens in california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name  =  \"california\";"},{"data":"Question: how many people stay in california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name  =  \"california\";"},{"data":"Question: how many citizens live in california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name  =  \"california\";"},{"data":"Question: what state has the smallest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );"},{"data":"Question: what is the least populous state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );"},{"data":"Question: what is the state with the lowest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );"},{"data":"Question: give me the cities in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE state_name  =  \"texas\";"},{"data":"Question: tell me what cities are in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE state_name  =  \"texas\";"},{"data":"Question: what cities are located in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE state_name  =  \"texas\";"},{"data":"Question: what are the cities in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE state_name  =  \"texas\";"},{"data":"Question: what cities in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE state_name  =  \"texas\";"},{"data":"Question: give me the cities which are in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE state_name  =  \"texas\";"},{"data":"Question: what is the area of the state with the capital albany\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT area FROM state WHERE capital  =  \"albany\";"},{"data":"Question: give me the lakes in california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lake_name FROM lake WHERE state_name  =  \"california\";"},{"data":"Question: name the major lakes in michigan\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lake_name FROM lake WHERE area  >  750 AND state_name  =  \"michigan\";"},{"data":"Question: what are the states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state;"},{"data":"Question: list the states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state;"},{"data":"Question: give me all the states of usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state;"},{"data":"Question: which states do ohio river flow through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: what states does the ohio river run through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: what states border the ohio river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: which states border the ohio river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: what states does the ohio run through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: where is the ohio river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: which states does the ohio river run through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: which states does the ohio run through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: which states does the ohio river pass through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: what are the states that the ohio run through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: which state has the ohio river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: what states have rivers named ohio\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: through which states does the ohio flow\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: what states are next to the ohio\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: through which states does the ohio run\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: what states does the ohio river go through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE river_name  =  \"ohio\";"},{"data":"Question: what state has the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"},{"data":"Question: what is the most populous state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"},{"data":"Question: what state is the largest in population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"},{"data":"Question: which state has the biggest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"},{"data":"Question: which state has the greatest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"},{"data":"Question: which state has the most population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"},{"data":"Question: what state has the most people\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"},{"data":"Question: which state has the most people\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"},{"data":"Question: what is the most populous state in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"},{"data":"Question: what state has the highest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"},{"data":"Question: what is the lowest elevation in pennsylvania\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lowest_elevation FROM highlow WHERE state_name  =  \"pennsylvania\";"},{"data":"Question: what is the highest point in each state whose lowest point is sea level\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point  ,  state_name FROM highlow WHERE lowest_elevation  =  0;"},{"data":"Question: what is the length of the longest river in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"},{"data":"Question: how long is the longest river in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"},{"data":"Question: what is the longest river flowing through texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";"},{"data":"Question: what is the largest river in texas state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";"},{"data":"Question: what is the longest river in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";"},{"data":"Question: what is the biggest river in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";"},{"data":"Question: what is the longest river that flows through texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";"},{"data":"Question: what are the biggest rivers in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";"},{"data":"Question: how many rivers are in idaho\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"},{"data":"Question: give me the number of rivers in idaho\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"},{"data":"Question: how many rivers does idaho have\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"},{"data":"Question: how many rivers are there in idaho\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"},{"data":"Question: how many rivers run through idaho\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"},{"data":"Question: how many rivers are found in idaho\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"},{"data":"Question: how many rivers in idaho\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";"},{"data":"Question: what states neighbor kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: which states border kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: what states border kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: give me the states that border kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: what state borders kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: what states are next to kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: what states surround kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: which state borders kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: what are the neighboring states for kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: which states adjoin kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: states bordering kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: which state border kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: what is the adjacent state of kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: name all the rivers in illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: rivers in illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: what are all the rivers in illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: what are the rivers in illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: what rivers are in illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: what rivers are there in illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: what rivers run through illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: what rivers flow through illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: what river flows through illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: what are the rivers in the state of illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: name the rivers in illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: what are the rivers of illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: which rivers are in illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: which rivers flow through illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: what is the river that cross over illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: what river runs through illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  \"illinois\";"},{"data":"Question: what state is springfield in\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: where is springfield\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: springfield is in what state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: what states have cities named springfield\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: which states have cities named springfield\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: which state is springfield in\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: what states have a city named springfield\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: what state has the city springfield\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: what states have towns named springfield\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: what state is springfield located in\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: in which state is springfield\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: which state is the city springfield located in\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: what states in the united states have a city of springfield\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: what is the population of the state with the largest area\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: what is the population of the largest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: how many people live in boulder\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  \"boulder\";"},{"data":"Question: what is the population of boulder\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  \"boulder\";"},{"data":"Question: how many people lived in boulder\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  \"boulder\";"},{"data":"Question: number of people in boulder\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  \"boulder\";"},{"data":"Question: what is the population of boulder city\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  \"boulder\";"},{"data":"Question: how big is the city of boulder\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  \"boulder\";"},{"data":"Question: population of boulder\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  \"boulder\";"},{"data":"Question: what is the population in boulder\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  \"boulder\";"},{"data":"Question: people in boulder\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  \"boulder\";"},{"data":"Question: how many people in boulder\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  \"boulder\";"},{"data":"Question: how many inhabitants does boulder have\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  \"boulder\";"},{"data":"Question: number of citizens in boulder\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  \"boulder\";"},{"data":"Question: how many citizens in boulder\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  \"boulder\";"},{"data":"Question: what is the smallest city in alaska\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name  =  \"alaska\" ) AND state_name  =  \"alaska\";"},{"data":"Question: which states lie on the largest river in the united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"},{"data":"Question: which states does the longest river run through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"},{"data":"Question: which state has the longest river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"},{"data":"Question: what are the states through which the longest river runs\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"},{"data":"Question: which states does the longest river cross\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"},{"data":"Question: what is the population density of the state with the smallest area\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT density FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"},{"data":"Question: what is the population density of the smallest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT density FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"},{"data":"Question: which states have points higher than the highest point in colorado\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  \"colorado\" );"},{"data":"Question: which states have points that are higher than the highest point in colorado\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  \"colorado\" );"},{"data":"Question: what states high point are higher than that of colorado\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  \"colorado\" );"},{"data":"Question: what is the highest elevation in delaware\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";"},{"data":"Question: how high is the highest point of delaware\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";"},{"data":"Question: how tall is the highest point in delaware\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";"},{"data":"Question: what is the highest point in delaware in meters\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";"},{"data":"Question: how high is the highest point in delaware\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";"},{"data":"Question: give me the longest river that passes through the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"},{"data":"Question: which is the longest river in usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"},{"data":"Question: what is the longest river in america\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"},{"data":"Question: name the longest river in us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"},{"data":"Question: what river is the longest one in the united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"},{"data":"Question: what is the longest river in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"},{"data":"Question: what is the longest river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"},{"data":"Question: what is the longest river in the united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"},{"data":"Question: what state has the city with the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"},{"data":"Question: what state has the largest city\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"},{"data":"Question: which state has the largest city\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"},{"data":"Question: what state has the city with the most population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"},{"data":"Question: what is the smallest city in the largest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"},{"data":"Question: what state is the biggest\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: what is the state with the largest area\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: what state has the largest area\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: what is the biggest state in continental us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: state the state with the largest area\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: what is the largest state in usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: what is the biggest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: what is the biggest state in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: give me the largest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: what is the largest state in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: what is the largest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: what are the highest points of states surrounding mississippi\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"mississippi\" );"},{"data":"Question: what are the high points of states surrounding mississippi\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"mississippi\" );"},{"data":"Question: what is the highest point in states bordering colorado\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"colorado\" ) ORDER BY highest_elevation DESC LIMIT 1;"},{"data":"Question: what is the highest point in the states bordering colorado\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"colorado\" ) ORDER BY highest_elevation DESC LIMIT 1;"},{"data":"Question: what is the state with the lowest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"},{"data":"Question: what state has the lowest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"},{"data":"Question: which state has the lowest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"},{"data":"Question: which state has the smallest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"},{"data":"Question: what state has the sparsest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"},{"data":"Question: which state has the sparsest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"},{"data":"Question: what state has the least population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"},{"data":"Question: which state has the least population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"},{"data":"Question: what state has the smallest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"},{"data":"Question: where is the highest point in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";"},{"data":"Question: what is the highest point in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";"},{"data":"Question: what is the high point of texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";"},{"data":"Question: what is the highest mountain in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";"},{"data":"Question: could you tell me what is the highest point in the state of texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";"},{"data":"Question: what states have no bordering state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );"},{"data":"Question: name the states which have no surrounding states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );"},{"data":"Question: which states border no other states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );"},{"data":"Question: what is the area of the state with the smallest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT area FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"},{"data":"Question: count the states which have elevations lower than what alabama has\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( state_name ) FROM highlow WHERE lowest_elevation  <  ( SELECT lowest_elevation FROM highlow WHERE state_name  =  \"alabama\" );"},{"data":"Question: how high is guadalupe peak\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_elevation FROM highlow WHERE highest_point  =  \"guadalupe peak\";"},{"data":"Question: how tall is guadalupe peak\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_elevation FROM highlow WHERE highest_point  =  \"guadalupe peak\";"},{"data":"Question: what is the maximum elevation of guadalupe peak\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_elevation FROM highlow WHERE highest_point  =  \"guadalupe peak\";"},{"data":"Question: how high is the highest point in america\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT MAX ( highest_elevation ) FROM highlow;"},{"data":"Question: what is the highest elevation in the united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT MAX ( highest_elevation ) FROM highlow;"},{"data":"Question: what is the elevation of the highest point in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT MAX ( highest_elevation ) FROM highlow;"},{"data":"Question: what is the height of the highest point in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT MAX ( highest_elevation ) FROM highlow;"},{"data":"Question: how long is the rio grande river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"},{"data":"Question: what is the length of the rio grande river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"},{"data":"Question: what length is the rio grande\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"},{"data":"Question: how long is the rio grande\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"},{"data":"Question: how long is the rio grande river in miles\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"},{"data":"Question: how long is rio grande\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";"},{"data":"Question: how long is the longest river in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";"},{"data":"Question: what is the length of the longest river that runs through texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";"},{"data":"Question: how many capitals does rhode island have\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( capital ) FROM state WHERE state_name  =  \"rhode island\";"},{"data":"Question: how many cities are there in the united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( city_name ) FROM city;"},{"data":"Question: how many cities does the usa have\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( city_name ) FROM city;"},{"data":"Question: how many cities are there in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( city_name ) FROM city;"},{"data":"Question: how many cities are there in usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( city_name ) FROM city;"},{"data":"Question: how many cities are there in us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( city_name ) FROM city;"},{"data":"Question: how many major cities are there\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( city_name ) FROM city WHERE population  >  150000;"},{"data":"Question: how many citizens does the biggest city have in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"},{"data":"Question: how many colorado rivers are there\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( river_name ) FROM river WHERE river_name  =  \"colorado\";"},{"data":"Question: how many rivers are called colorado\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( river_name ) FROM river WHERE river_name  =  \"colorado\";"},{"data":"Question: what is the population of seattle washington\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  \"seattle\" AND state_name  =  \"washington\";"},{"data":"Question: how many people live in seattle washington\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  \"seattle\" AND state_name  =  \"washington\";"},{"data":"Question: how many people live in the biggest city in alaska state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"alaska\" ) AND state_name  =  \"alaska\";"},{"data":"Question: how large is the largest city in alaska\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"alaska\" ) AND state_name  =  \"alaska\";"},{"data":"Question: how many people live in the capital of texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE state_name  =  \"texas\" );"},{"data":"Question: what is the size of the capital of texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE state_name  =  \"texas\" );"},{"data":"Question: how many people live in the united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT SUM ( population ) FROM state;"},{"data":"Question: what is the combined population of all 50 states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT SUM ( population ) FROM state;"},{"data":"Question: how many states are in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( state_name ) FROM state;"},{"data":"Question: how many states are there\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( state_name ) FROM state;"},{"data":"Question: how many states are there in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( state_name ) FROM state;"},{"data":"Question: how many states does usa have\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( state_name ) FROM state;"},{"data":"Question: how many states are in the united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( state_name ) FROM state;"},{"data":"Question: how many states are there in united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( state_name ) FROM state;"},{"data":"Question: how many states border kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: how many states does kentucky border\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: kentucky borders how many states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: number of states bordering kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: what is the number of neighboring states for kentucky\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";"},{"data":"Question: how many states border the state with the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( border ) FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"},{"data":"Question: how many states do not have rivers\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( DISTINCT state_name ) FROM state WHERE state_name NOT IN ( SELECT traverse FROM river );"},{"data":"Question: how many states have a higher point than the highest point of the state with the largest capital city in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( state_name ) FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  ( SELECT state_name FROM state WHERE capital  =  ( SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city ) ) ) );"},{"data":"Question: name the major rivers in illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";"},{"data":"Question: what are the major rivers in illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";"},{"data":"Question: what are major rivers in illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";"},{"data":"Question: what major rivers run through illinois\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";"},{"data":"Question: through which states does the longest river in texas run\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" );"},{"data":"Question: what are the capital city in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT capital FROM state WHERE state_name  =  \"texas\";"},{"data":"Question: what is the capital of texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT capital FROM state WHERE state_name  =  \"texas\";"},{"data":"Question: what is the capital of the texas state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT capital FROM state WHERE state_name  =  \"texas\";"},{"data":"Question: what is capital of texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT capital FROM state WHERE state_name  =  \"texas\";"},{"data":"Question: what is the capital of the state texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT capital FROM state WHERE state_name  =  \"texas\";"},{"data":"Question: can you tell me the capital of texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT capital FROM state WHERE state_name  =  \"texas\";"},{"data":"Question: what are the capitals of states that border texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";"},{"data":"Question: what are the capital cities of the states which border texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";"},{"data":"Question: what are the capitals of the states that border texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";"},{"data":"Question: which capitals are in the states that border texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";"},{"data":"Question: what are the cities in states through which the mississippi runs\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: what are the cities of the state with the highest point\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE state_name IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) );"},{"data":"Question: what are the highest points of all the states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow;"},{"data":"Question: what are the major cities in kansas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";"},{"data":"Question: what are the major cities in the state of kansas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";"},{"data":"Question: what major cities are located in kansas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";"},{"data":"Question: show major cities in kansas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";"},{"data":"Question: what are the names of the major cities in kansas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";"},{"data":"Question: what are the major cities of kansas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";"},{"data":"Question: what is the major cities in kansas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";"},{"data":"Question: what are the major cities in states through which the mississippi runs\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  >  750 AND river_name  =  \"mississippi\" );"},{"data":"Question: what are the major cities in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  >  150000;"},{"data":"Question: what are the major cities of the united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  >  150000;"},{"data":"Question: what are the major cities of the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  >  150000;"},{"data":"Question: what are the population densities of each us state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT density FROM state;"},{"data":"Question: what are the populations of states through which the mississippi river run\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: what are the populations of states through which the mississippi runs\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: what are the populations of the states through which the mississippi runs\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: what are the populations of states through which the mississippi river runs\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: what are the populations of the states through which the mississippi run\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: what are the populations of the states through which the mississippi river run\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: what are the populations of states through which the mississippi run\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: what are the populations of the states through which the mississippi river runs\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: what are the populations of states which border texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t2.population FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";"},{"data":"Question: what are the populations of the major cities of wisconsin\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE population  >  150000 AND state_name  =  \"wisconsin\";"},{"data":"Question: what are the populations of all the major cities in wisconsin\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE population  >  150000 AND state_name  =  \"wisconsin\";"},{"data":"Question: what is the population of the major cities in wisconsin\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE population  >  150000 AND state_name  =  \"wisconsin\";"},{"data":"Question: what city has the most people\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"},{"data":"Question: what city in the united states has the highest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"},{"data":"Question: what is the most populous city\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"},{"data":"Question: which us city has the highest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"},{"data":"Question: what is the biggest city in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"},{"data":"Question: whats the largest city\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"},{"data":"Question: what city has the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"},{"data":"Question: what is the biggest city in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"},{"data":"Question: what is the biggest city in usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"},{"data":"Question: what is the biggest capital city in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"},{"data":"Question: what is the largest capital city in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"},{"data":"Question: what is the largest state capital in population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"},{"data":"Question: what is the largest capital\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"},{"data":"Question: what is the most populated capital in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"},{"data":"Question: what capital is the largest in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"},{"data":"Question: what capital has the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"},{"data":"Question: what is largest capital\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"},{"data":"Question: what is the capital of states that have cities named durham\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t2.capital FROM state AS t2 JOIN city AS t1 ON t2.state_name  =  t1.state_name WHERE t1.city_name  =  \"durham\";"},{"data":"Question: what is the capital of the smallest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT capital FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"},{"data":"Question: what is the capital of the state with the largest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT DISTINCT capital FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"},{"data":"Question: what is the capital of the state with the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT capital FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"},{"data":"Question: what is the capital of the state with the most inhabitants\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT capital FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"},{"data":"Question: what is the capital of the state with the longest river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT capital FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );"},{"data":"Question: what is the combined area of all 50 states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT SUM ( area ) FROM state;"},{"data":"Question: what is the area of all the states combined\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT SUM ( area ) FROM state;"},{"data":"Question: how many square kilometers in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT SUM ( area ) FROM state;"},{"data":"Question: what is the total area of the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT SUM ( area ) FROM state;"},{"data":"Question: what is the density of the wyoming\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT density FROM state WHERE state_name  =  \"wyoming\";"},{"data":"Question: what is the population density of wyoming\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT density FROM state WHERE state_name  =  \"wyoming\";"},{"data":"Question: what is the density of wyoming\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT density FROM state WHERE state_name  =  \"wyoming\";"},{"data":"Question: what is the highest mountain in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"},{"data":"Question: what is the highest mountain in us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"},{"data":"Question: what is the tallest mountain in america\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"},{"data":"Question: what is the tallest mountain in the united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"},{"data":"Question: what is the highest point in the state with capital des moines\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"des moines\" );"},{"data":"Question: what is the highest point in the state with the capital des moines\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"des moines\" );"},{"data":"Question: what is the highest point in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: what is the highest point of the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: what is the highest point in the country\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: what is the highest point in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: what is the highest point in the united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: what is the highest point of the state with the smallest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state ) );"},{"data":"Question: what is the largest city in smallest state through which the mississippi runs\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) AND area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ) ) ORDER BY population DESC LIMIT 1;"},{"data":"Question: what is the largest city in the smallest state in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"},{"data":"Question: what is the biggest city in the smallest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"},{"data":"Question: what is the largest state bordering california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" );"},{"data":"Question: what is the largest state that borders california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" );"},{"data":"Question: what state that borders california is the largest\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" );"},{"data":"Question: what is the longest river in the largest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"},{"data":"Question: what is the longest river in the states that border tennessee\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" );"},{"data":"Question: what is the longest river that flows through a state that borders tennessee\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" );"},{"data":"Question: what is the longest river that runs through a state that borders tennessee\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" );"},{"data":"Question: what is the longest river in the state with the most major cities\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse  =  ( SELECT state_name FROM city WHERE population  >  150000 GROUP BY state_name ORDER BY COUNT ( city_name ) DESC LIMIT 1 ) ORDER BY LENGTH DESC LIMIT 1;"},{"data":"Question: what is the lowest point in iowa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"},{"data":"Question: what is the lowest point in iowa in meters\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"},{"data":"Question: what is the lowest point in the state of iowa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"},{"data":"Question: where is the lowest point in iowa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"},{"data":"Question: what is the lowest point of iowa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"},{"data":"Question: where is the lowest spot in iowa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";"},{"data":"Question: what is the lowest point in usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"},{"data":"Question: what is the lowest point in the united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"},{"data":"Question: where is the lowest point in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"},{"data":"Question: what is the lowest point of the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"},{"data":"Question: what is the lowest point of all states through which the mississippi river runs through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lowest_point FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ORDER BY lowest_elevation LIMIT 1;"},{"data":"Question: which is the lowest point of the states that the mississippi runs through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lowest_point FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ORDER BY lowest_elevation LIMIT 1;"},{"data":"Question: what is the most dense state in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"},{"data":"Question: which state has the highest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"},{"data":"Question: which state has the greatest density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"},{"data":"Question: what state has the highest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"},{"data":"Question: what state has the greatest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"},{"data":"Question: what state has the largest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"},{"data":"Question: what is the state with the largest density in usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"},{"data":"Question: what is the state with the largest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"},{"data":"Question: which state has the largest density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"},{"data":"Question: what is the most populous state through which the mississippi runs\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: what state which the mississippi runs through has the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: what is the population density of the largest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT density FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: what is the population of the largest city in the state with the largest area\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"},{"data":"Question: what is the population of the smallest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"},{"data":"Question: what is the population of the state with the highest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"},{"data":"Question: how many people live in the state with the largest population density\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"},{"data":"Question: what is the smallest city in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );"},{"data":"Question: what is the smallest city in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );"},{"data":"Question: what city has the least population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );"},{"data":"Question: what is the city with the smallest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );"},{"data":"Question: what is the smallest state bordering texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );"},{"data":"Question: what is the smallest state that borders texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );"},{"data":"Question: which state has the smallest area that borders texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );"},{"data":"Question: what is the smallest state that the mississippi river runs through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: what is the state with the smallest area\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"},{"data":"Question: which is the smallest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"},{"data":"Question: which state is the smallest\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"},{"data":"Question: what is the smallest state in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"},{"data":"Question: what is the smallest state by area\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"},{"data":"Question: what state has the smallest area\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"},{"data":"Question: what is the total length of all rivers in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT SUM ( LENGTH ) FROM river;"},{"data":"Question: what river flows through the most states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"},{"data":"Question: which river goes through the most states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"},{"data":"Question: which river runs through most states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"},{"data":"Question: which river traverses most states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"},{"data":"Question: what river traverses the most states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"},{"data":"Question: which river runs through the most states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"},{"data":"Question: what river runs through the most states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"},{"data":"Question: what rivers are in states that border alabama\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"alabama\" );"},{"data":"Question: which rivers run through states bordering alabama\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"alabama\" );"},{"data":"Question: what rivers flow through states that alabama borders\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"alabama\" );"},{"data":"Question: what state bordering oklahoma has the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"oklahoma\" ) ORDER BY population DESC LIMIT 1;"},{"data":"Question: which of the states bordering oklahoma has the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"oklahoma\" ) ORDER BY population DESC LIMIT 1;"},{"data":"Question: what state that borders oklahoma has the highest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"oklahoma\" ) ORDER BY population DESC LIMIT 1;"},{"data":"Question: what is the most populated state bordering oklahoma\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"oklahoma\" ) ORDER BY population DESC LIMIT 1;"},{"data":"Question: what state contains the highest point of those the colorado river traverses\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"colorado\" ) );"},{"data":"Question: what state has the largest capital\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"},{"data":"Question: which state 's capital city is the largest\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"},{"data":"Question: what state has the longest river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT DISTINCT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( DISTINCT LENGTH ) FROM river );"},{"data":"Question: what state has the smallest urban population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city GROUP BY state_name ORDER BY SUM ( population ) LIMIT 1;"},{"data":"Question: what states border states that border colorado\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"colorado\" );"},{"data":"Question: what states border states that the mississippi runs through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: which states border states through which the mississippi traverses\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: what states border states which the mississippi runs through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: what states border texas and have a major river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM border_info WHERE border  =  \"texas\" AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  >  750 );"},{"data":"Question: what states border the most populous state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"},{"data":"Question: what are the states that border the state with the greatest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"},{"data":"Question: what states border the state with the smallest area\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"},{"data":"Question: which states border the state with the smallest area\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"},{"data":"Question: what states contain at least one major rivers\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE LENGTH  >  750;"},{"data":"Question: where are mountains\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM mountain;"},{"data":"Question: where is the highest mountain of the united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"},{"data":"Question: which state has the highest peak in the country\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"},{"data":"Question: where is the smallest city\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );"},{"data":"Question: which is the density of the state that the largest river in the united states runs through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT density FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );"},{"data":"Question: which is the highest peak not in alaska\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain WHERE state_name != \"alaska\" );"},{"data":"Question: which rivers do not run through tennessee\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  \"tennessee\" );"},{"data":"Question: what rivers do not run through tennessee\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  \"tennessee\" );"},{"data":"Question: which rivers do not run through usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE country_name != \"usa\";"},{"data":"Question: which rivers run through states that border the state with the capital atlanta\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"atlanta\" ) );"},{"data":"Question: what rivers run through the states that border the state with the capital atlanta\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"atlanta\" ) );"},{"data":"Question: which state capital has the smallest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"},{"data":"Question: which state has the highest elevation\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: which state has the highest point\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: what state has the highest elevation\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: in which state does the highest point in usa exist\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: what state has highest elevation\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: what is the state with the highest elevation in the united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: what is the state that contains the highest point\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: what state contains the highest point in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: which state has the lowest elevation\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"},{"data":"Question: what is the name of the state with the lowest point\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"},{"data":"Question: what is the state with the lowest point\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"},{"data":"Question: which state has the lowest point that borders idaho\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"idaho\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"idaho\" );"},{"data":"Question: which state has the smallest average urban population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city GROUP BY state_name ORDER BY AVG ( population ) LIMIT 1;"},{"data":"Question: which state is mount whitney in\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";"},{"data":"Question: in what state is mount whitney\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";"},{"data":"Question: where is mount whitney\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";"},{"data":"Question: where is mount whitney located\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";"},{"data":"Question: which states have a river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river;"},{"data":"Question: what states have rivers running through them\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river;"},{"data":"Question: which states have a major city named austin\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE city_name  =  \"austin\" AND population  >  150000;"},{"data":"Question: what is the largest city in a state that borders california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" );"},{"data":"Question: what is the largest city in states that border california\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" );"},{"data":"Question: how many rivers do not traverse the state with the capital albany\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( river_name ) FROM river WHERE traverse NOT IN ( SELECT state_name FROM state WHERE capital  =  \"albany\" );"},{"data":"Question: what is the shortest river in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";"},{"data":"Question: what are the major cities in the smallest state in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"},{"data":"Question: what is the population of the capital of the largest state through which the mississippi runs\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MAX ( t1.area ) FROM state AS t1 JOIN river AS t2 ON t1.state_name  =  t2.traverse WHERE t2.river_name  =  \"mississippi\" ) );"},{"data":"Question: what is the shortest river in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"},{"data":"Question: what is the shortest river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"},{"data":"Question: what is the shortest river in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"},{"data":"Question: what is the shortest river in the united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"},{"data":"Question: which is the shortest river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"},{"data":"Question: what is the capital of the state that borders the state that borders texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT capital FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) );"},{"data":"Question: what is the smallest city of the smallest state in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"},{"data":"Question: what is the population of the largest state that borders texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );"},{"data":"Question: what state is salem the capital of\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE capital  =  \"salem\";"},{"data":"Question: what states capital is salem\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE capital  =  \"salem\";"},{"data":"Question: salem is the capital of which state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE capital  =  \"salem\";"},{"data":"Question: what state has the capital salem\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE capital  =  \"salem\";"},{"data":"Question: what rivers flow through the state with the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"},{"data":"Question: what is the largest state that borders the state with the highest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT state_name FROM border_info WHERE border IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) ) ) AND state_name IN ( SELECT state_name FROM border_info WHERE border IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) );"},{"data":"Question: how many rivers are there in us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( river_name ) FROM river;"},{"data":"Question: name the 50 capitals in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT DISTINCT capital FROM state;"},{"data":"Question: how many states have a city named springfield\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: how many states have a city called springfield\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: how many states have cities named springfield\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: how many states have cities or towns named springfield\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";"},{"data":"Question: what state borders the state with the smallest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state ) );"},{"data":"Question: what are the lakes in states bordering texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lake_name FROM lake WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );"},{"data":"Question: how many major cities are in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name  =  \"texas\";"},{"data":"Question: how many big cities are in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name  =  \"texas\";"},{"data":"Question: how many major cities are there in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name  =  \"texas\";"},{"data":"Question: how high are the highest points of all the states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT highest_elevation FROM highlow;"},{"data":"Question: how many states does the missouri run through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";"},{"data":"Question: how many states does the missouri river flow through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";"},{"data":"Question: how many states does the missouri river run through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";"},{"data":"Question: what is the longest river in the smallest state in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"},{"data":"Question: what is the average population per square km in pennsylvania\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population \/ area FROM state WHERE state_name  =  \"pennsylvania\";"},{"data":"Question: what states border states that border states that border florida\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"florida\" ) );"},{"data":"Question: how many states border at least one other state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( DISTINCT state_name ) FROM border_info;"},{"data":"Question: what is the height of the highest mountain in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT MAX ( DISTINCT highest_elevation ) FROM highlow WHERE state_name  =  \"texas\";"},{"data":"Question: how many states border colorado and border new mexico\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( border ) FROM border_info WHERE border IN ( SELECT border FROM border_info WHERE state_name  =  \"new mexico\" ) AND state_name  =  \"colorado\";"},{"data":"Question: how many major cities are in states bordering nebraska\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"nebraska\" );"},{"data":"Question: what is the total population of the states that border texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT SUM ( t2.population ) FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";"},{"data":"Question: what are the major lakes in united states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lake_name FROM lake WHERE area  >  750;"},{"data":"Question: show me all the major lakes in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lake_name FROM lake WHERE area  >  750;"},{"data":"Question: name all the lakes of us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lake_name FROM lake;"},{"data":"Question: how many major rivers cross ohio\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( river_name ) FROM river WHERE LENGTH  >  750 AND traverse  =  \"ohio\";"},{"data":"Question: what state has the shortest river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT DISTINCT traverse FROM river WHERE LENGTH  =  ( SELECT MIN ( DISTINCT LENGTH ) FROM river );"},{"data":"Question: how many states are next to major rivers\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH  >  750;"},{"data":"Question: what is the height of mount mckinley\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT mountain_altitude FROM mountain WHERE mountain_name  =  \"mckinley\";"},{"data":"Question: what states does the shortest river run through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"},{"data":"Question: what is the highest point in the state with the smallest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state ) );"},{"data":"Question: which rivers run through the state with the lowest elevation in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) );"},{"data":"Question: what rivers run through the state with the lowest point in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) );"},{"data":"Question: what mountains are in alaska\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT mountain_name FROM mountain WHERE state_name  =  \"alaska\";"},{"data":"Question: how many states have major rivers\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( traverse ) FROM river WHERE LENGTH  >  750;"},{"data":"Question: what is the smallest state through which the longest river runs\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) ) ) AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );"},{"data":"Question: what is the largest state traversed by the rio grande river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" );"},{"data":"Question: what is the largest of the state that the rio grande runs through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" );"},{"data":"Question: how many rivers run through the states bordering colorado\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( river_name ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"colorado\" );"},{"data":"Question: what state has no rivers\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE state_name NOT IN ( SELECT traverse FROM river );"},{"data":"Question: what is the capital of the largest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: what is the capital city of the largest state in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: how many cities are in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( city_name ) FROM city WHERE state_name  =  \"texas\";"},{"data":"Question: how many cities does texas have\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( city_name ) FROM city WHERE state_name  =  \"texas\";"},{"data":"Question: what is the area of the states\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT area FROM state;"},{"data":"Question: how many states in the us does the shortest river run through\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH  =  ( SELECT MIN ( DISTINCT LENGTH ) FROM river );"},{"data":"Question: what rivers flow through states that border the state with the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) );"},{"data":"Question: what are the major cities in the largest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"},{"data":"Question: what is the area of the smallest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT area FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"},{"data":"Question: which states border the longest river in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );"},{"data":"Question: what is the population density of the state with the smallest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT density FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );"},{"data":"Question: how many states border the mississippi river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( DISTINCT border ) FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );"},{"data":"Question: what states have a capital that is the highest point in the state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t1.state_name FROM state AS t1 JOIN highlow AS t2 ON t1.capital  =  t2.highest_point;"},{"data":"Question: what is the population of the capital of the smallest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"},{"data":"Question: what is the population of the capital of the largest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"},{"data":"Question: what is the lowest point of the state with the largest area\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t2.lowest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"},{"data":"Question: what states border states that border the state with the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t1.border FROM border_info AS t2 JOIN border_info AS t1 ON t2.border  =  t1.state_name WHERE t2.state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"},{"data":"Question: what is the size of the largest state in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT MAX ( area ) FROM state;"},{"data":"Question: what is the area of the largest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT MAX ( area ) FROM state;"},{"data":"Question: which capitals are not major cities\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t2.capital FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name WHERE t1.population  <=  150000;"},{"data":"Question: give me the cities in usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city;"},{"data":"Question: what is the highest point of the state with the largest area\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"},{"data":"Question: where is massachusetts\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT country_name FROM state WHERE state_name  =  \"massachusetts\";"},{"data":"Question: what state has the largest urban population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city GROUP BY state_name ORDER BY SUM ( population ) DESC LIMIT 1;"},{"data":"Question: what are the major rivers in the us\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river;"},{"data":"Question: how many cities named austin are there in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( city_name ) FROM city WHERE city_name  =  \"austin\";"},{"data":"Question: how many people live in the smallest state bordering wyoming\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT population FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"wyoming\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"wyoming\" );"},{"data":"Question: what is the length of the colorado river in texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT LENGTH FROM river WHERE river_name  =  \"colorado\" AND traverse  =  \"texas\";"},{"data":"Question: what is the population density in the state with capital austin\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT density FROM state WHERE capital  =  \"austin\";"},{"data":"Question: how long is the shortest river in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"},{"data":"Question: what is the elevation of death valley\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT lowest_elevation FROM highlow WHERE lowest_point  =  \"death valley\";"},{"data":"Question: what is the average population of the us by state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT AVG ( population ) FROM state;"},{"data":"Question: what rivers flow through the largest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"},{"data":"Question: what states border states that border states that border states that border texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t1.border FROM border_info AS t2 JOIN border_info AS t1 ON t2.border  =  t1.state_name JOIN border_info AS t3 ON t3.border  =  t2.state_name JOIN border_info AS t4 ON t4.border  =  t3.state_name WHERE t4.state_name  =  \"texas\";"},{"data":"Question: how many states border on the state whose capital is boston\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( border ) FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE capital  =  \"boston\" );"},{"data":"Question: what are the major cities in the states through which the major river in virginia runs\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE river_name IN ( SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"virginia\" ) );"},{"data":"Question: which states does not border texas\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM state WHERE state_name NOT IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );"},{"data":"Question: how many states border the largest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( border ) FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"},{"data":"Question: which state is the largest city in montana in\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"montana\" ) AND state_name  =  \"montana\";"},{"data":"Question: what is capital of the state with the lowest point\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) ;"},{"data":"Question: what is the biggest american city in a state with a river\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT DISTINCT t1.city_name FROM city AS t1 JOIN river AS t2 ON t2.traverse  =  t1.state_name WHERE t1.population  =  ( SELECT MAX ( t1.population ) FROM river AS t2 JOIN city AS t1 ON t2.traverse  =  t1.state_name );"},{"data":"Question: how many rivers are in the state with the largest population\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( t2.river_name ) FROM river AS t2 JOIN state AS t1 ON t1.state_name  =  t2.traverse WHERE t1.state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"},{"data":"Question: what is the largest state that borders the state with the lowest point in the usa\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t1.state_name FROM highlow AS t3 JOIN border_info AS t1 ON t3.state_name  =  t1.border JOIN state AS t2 ON t2.state_name  =  t1.border WHERE t3.lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) ORDER BY t2.area DESC LIMIT 1;"},{"data":"Question: what is the capital of the state with the highest point\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: what is the capital of the state with the highest elevation\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: what is the highest point in the smallest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t2.highest_point FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t1.area  =  ( SELECT MIN ( area ) FROM state );"},{"data":"Question: how many rivers are in the state with the highest point.\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT COUNT ( t1.river_name ) FROM highlow AS t2 JOIN river AS t1 ON t1.traverse  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"},{"data":"Question: how high is the highest point in the largest state\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t2.highest_elevation FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t1.area  =  ( SELECT MAX ( area ) FROM state );"},{"data":"Question: what is the longest river in the state with the highest point\nSchema: 'state' [ Primary Key: 'state_name' text, 'population' int, 'area' int, 'country_name' text, 'capital' text, 'density' int];\n'city' [ Primary Key: 'city_name' text, 'population' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'city' 'state_name'];\n'border_info' [ 'state_name' text, Primary Key: 'border' text, Foreign Key: 'state_name' text from 'border_info' 'state_name', Foreign Key: 'border' text from 'border_info' 'border'];\n'highlow' [ Primary Key: 'state_name' text, 'highest_elevation' text, 'lowest_point' text, 'highest_point' text, 'lowest_elevation' text, Foreign Key: 'state_name' text from 'highlow' 'state_name'];\n'lake' [ 'lake_name' text, 'area' int, 'country_name' text, 'state_name' text];\n'mountain' [ Primary Key: 'mountain_name' text, 'mountain_altitude' int, 'country_name' text, 'state_name' text, Foreign Key: 'state_name' text from 'mountain' 'state_name'];\n'river' [ Primary Key: 'river_name' text, 'length' int, 'country_name' text, 'traverse' text, Foreign Key: 'traverse' text from 'river' 'traverse'];\n\nAnswer: SELECT t1.river_name FROM highlow AS t2 JOIN river AS t1 ON t1.traverse  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) ORDER BY t1.length DESC LIMIT 1;"},{"data":"Question: papers that are coauthored by Peter Mertens and Dina Barbian\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: papers written by Peter Mertens and Dina Barbian\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: what are the papers that have Peter Mertens and Dina Barbian as co-authors\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: What papers have Peter Mertens and Dina Barbian written ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: what paper did Peter Mertens and Dina Barbian write together ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: Has Peter Mertens and Dina Barbian written a paper together ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: Papers by Peter Mertens and Dina Barbian\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: papers by authors Peter Mertens and Dina Barbian\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: What papers were written by authors Peter Mertens and Dina Barbian\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: papers by Peter Mertens and Dina Barbian\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: papers written by authors Peter Mertens and Dina Barbian\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: When did Peter Mertens and Dina Barbian collaborate ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: what are the collaborations of Peter Mertens and Dina Barbian ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: Have Peter Mertens and Dina Barbian written a paper together ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: Peter Mertens and Dina Barbian as co-authors\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: Does Peter Mertens ever collaborated with Dina Barbian ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: Which papers have Peter Mertens and Dina Barbian as co-authors ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: papers coauthored by Peter Mertens and Dina Barbian\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: What papers have been written by Peter Mertens and Dina Barbian ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: What papers have been written by both Peter Mertens and Dina Barbian ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: What papers have been written by Peter Mertens and Dina Barbian .\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";"},{"data":"Question: who has written the most syntactic parsing papers ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: who is the most published author in syntactic parsing ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: who has the most publications in syntactic parsing ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: who has written the most papers on syntactic parsing ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: List prominent scholars in syntactic parsing ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: who wrote the most papers on syntactic parsing ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: Who are the authors with the most published papers in syntactic parsing ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: top syntactic parsing author\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: top author in syntactic parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: who published the most in syntactic parsing ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: who published the most papers in syntactic parsing ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: How many citation noah a smith has ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"},{"data":"Question: noah a smith citation count\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"},{"data":"Question: how many citations does noah a smith have ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"},{"data":"Question: How many citations does noah a smith have ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"},{"data":"Question: number of citations of noah a smith\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"},{"data":"Question: How many citations does noah a smith have\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"},{"data":"Question: How many times was noah a smith cited ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"},{"data":"Question: How many citations does noah a smith has ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";"},{"data":"Question: chi papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"},{"data":"Question: papers at chi\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"},{"data":"Question: papers in chi\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"},{"data":"Question: chi\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"},{"data":"Question: Papers about chi\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"},{"data":"Question: Show me chi papers .\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"},{"data":"Question: what papers did chi publish ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"},{"data":"Question: list papers published in chi\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"},{"data":"Question: Papers on chi\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";"},{"data":"Question: Has mirella lapata written any papers in 2016 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t2.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"mirella lapata\" AND t3.year  =  2016 GROUP BY t2.authorid;"},{"data":"Question: What papers has sharon goldwater written ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: What papers has written by sharon goldwater ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: papers by sharon goldwater\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: what did sharon goldwater write ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: papers where sharon goldwater is an author\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: Papers authored by sharon goldwater\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: sharon goldwater papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: Papers by sharon goldwater\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: Papers written by sharon goldwater\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: which papers has sharon goldwater written ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: papers written by sharon goldwater\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: What has sharon goldwater published ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: Does sharon goldwater have any papers published ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: sharon goldwater 's papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: show me papers by sharon goldwater .\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: What papers are authored by sharon goldwater ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: papers by sharon goldwater ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";"},{"data":"Question: What was oren etzioni 's latest paper ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;"},{"data":"Question: Latest paper by oren etzioni\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;"},{"data":"Question: What is the latest paper by oren etzioni ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;"},{"data":"Question: What is oren etzioni 's latest paper ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;"},{"data":"Question: What are the latest papers by oren etzioni ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;"},{"data":"Question: most recent papers by oren etzioni\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;"},{"data":"Question: are there any monte carlo simulation papers since 2011 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"monte carlo simulation\" AND t3.year  >  2011;"},{"data":"Question: monte carlo simulation papers later than 2011\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"monte carlo simulation\" AND t3.year  >  2011;"},{"data":"Question: monte carlo simulation later than 2011\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"monte carlo simulation\" AND t3.year  >  2011;"},{"data":"Question: monte carlo simulation papers published after 2011\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"monte carlo simulation\" AND t3.year  >  2011;"},{"data":"Question: monte carlo simulation papers since 2011\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"monte carlo simulation\" AND t3.year  >  2011;"},{"data":"Question: does ras bodik publish a lot ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT COUNT ( t3.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"ras bodik\";"},{"data":"Question: How many papers did David M. Blei publish at AISTATS ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"},{"data":"Question: How many papers does David M. Blei have in AISTATS ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"},{"data":"Question: How many papers has David M. Blei published in AISTATS ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"},{"data":"Question: how many papers does David M. Blei have at AISTATS\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"},{"data":"Question: how many papers does David M. Blei have in AISTATS ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"},{"data":"Question: how many David M. Blei papers are in AISTATS ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"},{"data":"Question: How many papers David M. Blei has in AISTATS ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"},{"data":"Question: How many papers does David M. Blei have in AISTATS\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";"},{"data":"Question: List all academic papers on machine networks for one shot learning\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT paperid FROM paper WHERE title  =  \"machine networks for one shot learning\";"},{"data":"Question: machine networks for one shot learning\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT paperid FROM paper WHERE title  =  \"machine networks for one shot learning\";"},{"data":"Question: which EMNLP 2010 papers have the most citations ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;"},{"data":"Question: Which paper from EMNLP 2010 was cited most ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;"},{"data":"Question: most cited EMNLP 2010 papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;"},{"data":"Question: which EMNLP 2010 papers have been cited the most ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;"},{"data":"Question: What papers were published at CVPR in 2016 about Class consistent multi-modal fusion with binary features applied to RGB-D Object Dataset ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"RGB-D Object Dataset\" AND t3.title  =  \"Class consistent multi-modal fusion with binary features\" AND t3.year  =  2016 AND t4.venuename  =  \"CVPR\";"},{"data":"Question: What papers were published at CVPR '16 about Class consistent multi-modal fusion with binary features applied to RGB-D Object Dataset ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"RGB-D Object Dataset\" AND t3.title  =  \"Class consistent multi-modal fusion with binary features\" AND t3.year  =  2016 AND t4.venuename  =  \"CVPR\";"},{"data":"Question: How many papers are in deep learning ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\";"},{"data":"Question: How many papers are about deep learning ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\";"},{"data":"Question: how many papers about deep learning ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\";"},{"data":"Question: How many papers are related to deep learning ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\";"},{"data":"Question: How many papers has Christopher D. Manning written ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"},{"data":"Question: How many papers does Christopher D. Manning have ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"},{"data":"Question: How many papers has Christopher D. Manning ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"},{"data":"Question: How many papers has Christopher D. Manning published ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"},{"data":"Question: how many papers has Christopher D. Manning written ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"},{"data":"Question: Has Christopher D. Manning published any papers ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"},{"data":"Question: how many papers has Christopher D. Manning published ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"},{"data":"Question: how many papers does Christopher D. Manning have ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"},{"data":"Question: How many paper does Christopher D. Manning have ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"},{"data":"Question: How many publications does Christopher D. Manning have ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"},{"data":"Question: How many papers does Christopher D. Manning have\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"},{"data":"Question: number of papers written by Christopher D. Manning\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";"},{"data":"Question: what kind of papers does Luke Zettlemoyer publish\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"},{"data":"Question: Keyphrases used by Luke Zettlemoyer\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"},{"data":"Question: What keywords are in papers by Luke Zettlemoyer ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"},{"data":"Question: keywords used by Luke Zettlemoyer\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"},{"data":"Question: what keywords are used by Luke Zettlemoyer\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"},{"data":"Question: keyphrases used by Luke Zettlemoyer\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"},{"data":"Question: keyphrases by Luke Zettlemoyer\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"},{"data":"Question: give me the keywords used by Luke Zettlemoyer\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"},{"data":"Question: What topic does Luke Zettlemoyer write about ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"},{"data":"Question: what topics does Luke Zettlemoyer publish in\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"},{"data":"Question: keywords in the papers written by Luke Zettlemoyer\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"},{"data":"Question: keyphrases used by Luke Zettlemoyer .\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"},{"data":"Question: topics used by Luke Zettlemoyer\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";"},{"data":"Question: What conference does Daniella Coelho publish in ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";"},{"data":"Question: conferences that Daniella Coelho has published in\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";"},{"data":"Question: In which conferences does Daniella Coelho typically publish ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";"},{"data":"Question: in what conferences does Daniella Coelho publish ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";"},{"data":"Question: What conferences does Daniella Coelho publish in ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";"},{"data":"Question: At which conferences does Daniella Coelho publish ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";"},{"data":"Question: What conferences does Daniella Coelho submit to ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";"},{"data":"Question: How many papers are there ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT paperid ) FROM paper;"},{"data":"Question: How many papers by Ed Desmond contain the keyphrases Semantic Parsing ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"Ed Desmond\" AND t4.keyphrasename  =  \"Semantic Parsing\";"},{"data":"Question: How many papers does Ed Desmond have in Semantic Parsing area ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"Ed Desmond\" AND t4.keyphrasename  =  \"Semantic Parsing\";"},{"data":"Question: How many Semantic Parsing papers has Ed Desmond written ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"Ed Desmond\" AND t4.keyphrasename  =  \"Semantic Parsing\";"},{"data":"Question: How many paper has Ed Desmond written about Semantic Parsing ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"Ed Desmond\" AND t4.keyphrasename  =  \"Semantic Parsing\";"},{"data":"Question: What conferences did li dong submit to in 2016 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"li dong\" AND t3.year  =  2016;"},{"data":"Question: Where did li dong publish in 2016\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"li dong\" AND t3.year  =  2016;"},{"data":"Question: What conferences did li dong publish in in 2016 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"li dong\" AND t3.year  =  2016;"},{"data":"Question: Where did li dong publish in 2016 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"li dong\" AND t3.year  =  2016;"},{"data":"Question: acl papers in 2012 on Parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"},{"data":"Question: What papers were published in acl in 2012 about Parsing ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"},{"data":"Question: papers on Parsing appeared at acl last year\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"},{"data":"Question: Parsing papers from acl 2012\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"},{"data":"Question: papers about Parsing in acl 2012\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"},{"data":"Question: acl papers in 2012 in Parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"},{"data":"Question: acl papers in 2012 about Parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"},{"data":"Question: What papers were published at acl in 2012 were about Parsing ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"},{"data":"Question: papers on Parsing appeared at acl in 2012\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"},{"data":"Question: how many Parsing papers did acl 2012 have ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"},{"data":"Question: who published Parsing papers at acl 2012\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"},{"data":"Question: which papers in acl 2012 had Parsing in them ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"},{"data":"Question: what were some Parsing based papers in acl 2012 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"},{"data":"Question: List the popular publications on dependent types\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"dependent types\";"},{"data":"Question: Which paper should I read about dependent types ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"dependent types\";"},{"data":"Question: top dependent types papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"dependent types\";"},{"data":"Question: List papers that has a keyword Question Answering\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: Question Answering research papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: papers on Question Answering\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: papers related to Question Answering\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: papers about Question Answering\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: Papers about Question Answering\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: papers published in the area of Question Answering\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: Question Answering experiments\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: Show me the papers on Question Answering\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: papers that used Question Answering\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: papers that mention Question Answering\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: Question Answering papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: Show me Question Answering papers .\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: Question Answering publications\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: Fetch me some papers on Question Answering\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: papers on Question Answering experiments\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: What papers talk about Question Answering ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: What is the paper about Question Answering ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: Which papers are about about Question Answering ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: list papers that used Question Answering\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: papers for Question Answering\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: List papers that has keyword Question Answering\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: papers with Question Answering in keyphrases\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";"},{"data":"Question: keyphrases used by Luke S Zettlemoyer for each year\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.keyphraseid  ,  t3.year FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Luke S Zettlemoyer\" ORDER BY t3.year  ,  t2.keyphraseid;"},{"data":"Question: recent research interests of sanjeev arora\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"sanjeev arora\" ORDER BY t3.year DESC;"},{"data":"Question: recent papers by sanjeev arora\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"sanjeev arora\" ORDER BY t3.year DESC;"},{"data":"Question: recent papers written by sanjeev arora\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"sanjeev arora\" ORDER BY t3.year DESC;"},{"data":"Question: list papers published by balakrishnan prabhakaran\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"balakrishnan prabhakaran\";"},{"data":"Question: citation count of zachary tatlock 's papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"zachary tatlock\";"},{"data":"Question: subhasis chaudhuri\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"subhasis chaudhuri\";"},{"data":"Question: list papers by subhasis chaudhuri\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"subhasis chaudhuri\";"},{"data":"Question: List of papers by subhasis chaudhuri\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"subhasis chaudhuri\";"},{"data":"Question: conference papers of subhasis chaudhuri\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"subhasis chaudhuri\";"},{"data":"Question: how many parsing papers in ACL 2014\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"parsing\" AND t3.year  =  2014 AND t4.venuename  =  \"ACL\";"},{"data":"Question: how many parsing papers appeared in the proceeeding of ACL 2014 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"parsing\" AND t3.year  =  2014 AND t4.venuename  =  \"ACL\";"},{"data":"Question: how many parsing papers were published at ACL 2014 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"parsing\" AND t3.year  =  2014 AND t4.venuename  =  \"ACL\";"},{"data":"Question: brian curless convolution paper\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";"},{"data":"Question: convolution by brian curless\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";"},{"data":"Question: papers by brian curless about convolution\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";"},{"data":"Question: brian curless 's paper about convolution\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";"},{"data":"Question: What are the papers of brian curless in convolution ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";"},{"data":"Question: papers brian curless wrote about convolution\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";"},{"data":"Question: brian curless 's papers on convolution\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";"},{"data":"Question: What is the paper about convolution from brian curless ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";"},{"data":"Question: papers by brian curless in convolution topic\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";"},{"data":"Question: I want the papers on keyphrase0 by brian curless\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";"},{"data":"Question: convolution papers by brian curless\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";"},{"data":"Question: What papers has brian curless written on convolution ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";"},{"data":"Question: What papers has brian curless written about convolution ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";"},{"data":"Question: convolution paper by brian curless\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";"},{"data":"Question: Does brian curless do convolution ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";"},{"data":"Question: What papers has Liwen Xiong written in 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: papers by Liwen Xiong in 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: What did Liwen Xiong published in 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: Papers written by Liwen Xiong in 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: What are the papers of Liwen Xiong in 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: papers by Liwen Xiong from 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: Papers published in 2015 by Liwen Xiong\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: what has Liwen Xiong done in the past year\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: What papers did Liwen Xiong publish last year ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: papers published in 2015 by Liwen Xiong\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: Liwen Xiong 's papers in 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: Liwen Xiong 's papers in 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: Liwen Xiong publication 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: Papers authored by Liwen Xiong in 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: Papers from Liwen Xiong in 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: what papers are published by Liwen Xiong in 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;"},{"data":"Question: What TAIL paper published in NIPS ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";"},{"data":"Question: List the papers on TAIL that were published in NIPS\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";"},{"data":"Question: what are the papers in NIPS about TAIL ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";"},{"data":"Question: Papers about TAIL in NIPS\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";"},{"data":"Question: papers at NIPS related to TAIL\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";"},{"data":"Question: papers about TAIL published at NIPS\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";"},{"data":"Question: TAIL papers in NIPS\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";"},{"data":"Question: papers on TAIL NIPS\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";"},{"data":"Question: TAIL papers used in NIPS\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";"},{"data":"Question: How many co-authors has Mark Steedman had ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t1.authorid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname != \"Mark Steedman\" AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Mark Steedman\" );"},{"data":"Question: keyphrases used by Christof Dallermassl in 2000\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;"},{"data":"Question: Keyphrases used by Christof Dallermassl in 2000\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;"},{"data":"Question: keyphrases Christof Dallermassl used in papers written last year\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;"},{"data":"Question: What are keyphrases by Christof Dallermassl in 2000 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;"},{"data":"Question: what author is most cited ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorname  ,  COUNT ( t3.citingpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citedpaperid GROUP BY t1.authorname ORDER BY COUNT ( t3.citingpaperid ) DESC;"},{"data":"Question: journal articles by mohammad rastegari\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"mohammad rastegari\" AND t3.journalid  >=  0;"},{"data":"Question: Journal Papers by mohammad rastegari\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"mohammad rastegari\" AND t3.journalid  >=  0;"},{"data":"Question: best paper in TACL 2014 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid )  ,  t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2014 AND t2.venuename  =  \"TACL\" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC;"},{"data":"Question: What was the best paper at TACL 2014 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid )  ,  t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2014 AND t2.venuename  =  \"TACL\" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC;"},{"data":"Question: who published at acl 2016 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"},{"data":"Question: acl 2016 authors\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"},{"data":"Question: authors of acl 2016 papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"},{"data":"Question: List of authors acl 2016\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"},{"data":"Question: author published acl 2016\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"},{"data":"Question: who had papers at acl 2016 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"},{"data":"Question: List of authors in acl 2016\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"},{"data":"Question: How many papers were written on Multiuser Receiver in the Decision Feedback this year ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Multiuser Receiver in the Decision Feedback\" AND t3.year  =  2016 GROUP BY t3.paperid HAVING COUNT ( DISTINCT t1.keyphrasename )  >  1;"},{"data":"Question: How many papers run experiments on ImageNet ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";"},{"data":"Question: How many papers used ImageNet dataset ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";"},{"data":"Question: How many papers written on ImageNet ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";"},{"data":"Question: how many papers are based on ImageNet\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";"},{"data":"Question: how many papers use ImageNet ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";"},{"data":"Question: How many papers did Mirella Lapata cite ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"Mirella Lapata\";"},{"data":"Question: how many papers does Mirella Lapata cite\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"Mirella Lapata\";"},{"data":"Question: how many papers has Mirella Lapata cited ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"Mirella Lapata\";"},{"data":"Question: When does Michael Stonebraker publish the first VLDB paper ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.year FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t4.venuename  =  \"VLDB\" ORDER BY t3.year;"},{"data":"Question: semantic parsing dataset\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";"},{"data":"Question: data sets for semantic parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";"},{"data":"Question: list datasets for semantic parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";"},{"data":"Question: datasets for semantic parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";"},{"data":"Question: Datasets with semantic parsing information\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";"},{"data":"Question: datasets used by semantic parsing papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";"},{"data":"Question: datasets in semantic parsing papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";"},{"data":"Question: semantic parsing datasets\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";"},{"data":"Question: datasets in papers about semantic parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";"},{"data":"Question: datasets used for semantic parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";"},{"data":"Question: large-scale datasets used in semantic parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";"},{"data":"Question: datasets with semantic parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";"},{"data":"Question: datasets used for evaluating semantic parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";"},{"data":"Question: where does Peter Mertens publish ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Peter Mertens\";"},{"data":"Question: in what venues does Peter Mertens publish ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Peter Mertens\";"},{"data":"Question: Where does Peter Mertens publish ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Peter Mertens\";"},{"data":"Question: how many papers appeared at nature communications last year\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";"},{"data":"Question: How many papers were at nature communications 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";"},{"data":"Question: how many papers accepted in nature communications 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";"},{"data":"Question: How many papers were published in nature communications in 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";"},{"data":"Question: How many papers on nature communications in 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";"},{"data":"Question: how many papers in nature communications 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";"},{"data":"Question: How many papers were accepted at nature communications 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";"},{"data":"Question: How many papers are presented in nature communications 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";"},{"data":"Question: How many papers published in nature communications in 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";"},{"data":"Question: how many papers published in nature communications 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";"},{"data":"Question: How many papers were published in nature communications 2015 conference ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";"},{"data":"Question: How many papers was published in nature communications in 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";"},{"data":"Question: what was the first deep learning paper ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid  ,  t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t5.keyphrasename  =  \"deep learning\" ORDER BY t4.year ASC;"},{"data":"Question: what year was the first deep learning paper published ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid  ,  t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t5.keyphrasename  =  \"deep learning\" ORDER BY t4.year ASC;"},{"data":"Question: datasets mentioned at ACL\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.datasetid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"ACL\";"},{"data":"Question: what datasets do papers at ACL use most ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.datasetid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"ACL\";"},{"data":"Question: the papers on semantic parsing by li dong at acl in 2016\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN paper AS t2 ON t2.paperid  =  t5.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"li dong\" AND t3.keyphrasename  =  \"semantic parsing\" AND t2.year  =  2016 AND t6.venuename  =  \"acl\";"},{"data":"Question: How many papers were written on convolutional neural networks in the past year ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;"},{"data":"Question: How many papers were published on convolutional neural networks in 2016 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;"},{"data":"Question: How many papers were written on convolutional neural networks in 2016 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;"},{"data":"Question: How many papers were written on the convolutional neural networks this year ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;"},{"data":"Question: how many papers on convolutional neural networks have been published in the past year ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;"},{"data":"Question: What papers were written on question answering this year ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"question answering\" AND t3.year  =  2016;"},{"data":"Question: which year had the most NIPS papers ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;"},{"data":"Question: what year had the most NIPS papers ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;"},{"data":"Question: what year had the most number of NIPS papers ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;"},{"data":"Question: when were most NIPS papers published ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;"},{"data":"Question: who writes papers with Noah A Smith ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"},{"data":"Question: Who is a coauthor with Noah A Smith ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"},{"data":"Question: Who are Noah A Smith 's co-authors\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"},{"data":"Question: Who has coauthored with Noah A Smith ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"},{"data":"Question: co-authors of Noah A Smith\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"},{"data":"Question: author who wrote papers with Noah A Smith\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"},{"data":"Question: authors who collaborated with Noah A Smith\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"},{"data":"Question: who does Noah A Smith author with ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"},{"data":"Question: Who are Noah A Smith 's coauthors\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"},{"data":"Question: who are all the co-authors of Noah A Smith ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"},{"data":"Question: who does Noah A Smith work with ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"},{"data":"Question: who does Noah A Smith collaborate with ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"},{"data":"Question: Who are Noah A Smith 's coauthors ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"},{"data":"Question: coauthors of Noah A Smith\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";"},{"data":"Question: what datasets did jitendra malik use ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";"},{"data":"Question: what datasets are used in papers by jitendra malik\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";"},{"data":"Question: what datasets did jitendra malik use in his papers ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";"},{"data":"Question: what datasets were used by jitendra malik ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";"},{"data":"Question: datasets used in papers written by jitendra malik ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";"},{"data":"Question: Datasets by jitendra malik\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";"},{"data":"Question: What datasets have jitendra malik used\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";"},{"data":"Question: recent deep learning papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;"},{"data":"Question: new deep learning papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;"},{"data":"Question: What are the latest publications on deep learning ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;"},{"data":"Question: Most recent deep learning conference ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;"},{"data":"Question: Show me some recent papers on deep learning ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;"},{"data":"Question: What are some recent papers written in deep learning ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;"},{"data":"Question: What is the most recent paper of deep learning ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;"},{"data":"Question: What are recent papers on deep learning ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;"},{"data":"Question: Current research on deep learning\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;"},{"data":"Question: latest deep learning papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;"},{"data":"Question: newest deep learning papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;"},{"data":"Question: What years did Pedro Domingos publish papers in ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Pedro Domingos\" GROUP BY t3.year;"},{"data":"Question: In what years did Pedro Domingos publish a paper ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Pedro Domingos\" GROUP BY t3.year;"},{"data":"Question: jamie callan 's publications by year\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" ORDER BY t3.year;"},{"data":"Question: How many papers does jamie callan publish each year ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" GROUP BY t3.year;"},{"data":"Question: number of papers by year from jamie callan\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" GROUP BY t3.year;"},{"data":"Question: how many papers jamie callan published each year ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" GROUP BY t3.year;"},{"data":"Question: who does oren etzioni cite\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"oren etzioni\";"},{"data":"Question: what papers does oren etzioni cite\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"oren etzioni\";"},{"data":"Question: papers citing Daniel Jurafsky\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";"},{"data":"Question: What papers cite Daniel Jurafsky ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";"},{"data":"Question: Which papers cite Daniel Jurafsky ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";"},{"data":"Question: citations for Daniel Jurafsky\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";"},{"data":"Question: journal papers for instance segmentation\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"instance segmentation\" AND t3.journalid  >=  0;"},{"data":"Question: who has the most papers in semantic parsing after 2005 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"semantic parsing\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: who has written the most papers on semantic parsing since 2005 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"semantic parsing\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: who published the most in semantic parsing after 2005 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"semantic parsing\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: How many citations does Dan Makumbi 's Genetic Identity paper have ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t3 ON t2.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN cite AS t5 ON t4.paperid  =  t5.citedpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Dan Makumbi\" AND t3.keyphrasename  =  \"Genetic Identity\";"},{"data":"Question: character recognition papers earlier than 2010\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;"},{"data":"Question: papers before 2010 about character recognition\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;"},{"data":"Question: character recognition papers from before 2010\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;"},{"data":"Question: papers about character recognition from before 2010\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;"},{"data":"Question: character recognition papers before 2010\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;"},{"data":"Question: what topics does oren etzioni write about most ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t2.keyphraseid )  ,  t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"oren etzioni\" GROUP BY t2.keyphraseid ORDER BY COUNT ( t2.keyphraseid ) DESC;"},{"data":"Question: How many papers related to deep learning cited the dataset ImageNet ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid ) FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN paperkeyphrase AS t1 ON t4.paperid  =  t1.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t2.datasetname  =  \"ImageNet\" AND t5.keyphrasename  =  \"deep learning\";"},{"data":"Question: most cited papers on parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: parsing top papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: List top papers for parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: parsing papers that have the most citations\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: What is the paper about parsing of the most citation ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: Paper on parsing with most citations\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: parsing papers with most citations\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: most cited parsing papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: what are the parsing papers that have the most citations ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: highly cited parsing papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: most cited papers for parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: Most cited papers on parsing\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: What paper did Michael Armstrong wrote in the 90s ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.year  ,  t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"Michael Armstrong\" AND t3.year LIKE \"199\";"},{"data":"Question: What is the most cited paper by ohad shamir ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: What is the highest cited paper by ohad shamir ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: What is the most cited paper of ohad shamir ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: What is ohad shamir 's highest cited paper ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: What paper by ohad shamir has the most citation ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: what is the most cited paper of ohad shamir ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: what is ohad shamir 's most cited paper ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"},{"data":"Question: How many papers did michael i. jordan publish in 2016 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"michael i. jordan\" AND t3.year  =  2016;"},{"data":"Question: How many papers does michael i. jordan have in 2016 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"michael i. jordan\" AND t3.year  =  2016;"},{"data":"Question: How many papers did michael i. jordan publish in 2016\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"michael i. jordan\" AND t3.year  =  2016;"},{"data":"Question: count of ACL papers by author\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;"},{"data":"Question: how many ACL papers by author\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;"},{"data":"Question: number of ACL papers by author\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;"},{"data":"Question: who wrote the most papers for CVPR 2007\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"},{"data":"Question: who published papers in CVPR 2007\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"},{"data":"Question: who wrote the most CVPR papers in 2007\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"},{"data":"Question: most published author at CVPR 2007\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"},{"data":"Question: who published the most papers in CVPR 2007\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"},{"data":"Question: Who published the most papers in 2007 at CVPR ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"},{"data":"Question: How many papers in ACL 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"ACL\";"},{"data":"Question: number of papers published in ACL 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"ACL\";"},{"data":"Question: papers from 2014\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT paperid FROM paper WHERE YEAR  =  2014;"},{"data":"Question: 2014 papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT paperid FROM paper WHERE YEAR  =  2014;"},{"data":"Question: What papers does Richard Ladner have in chi ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"},{"data":"Question: what paper has Richard Ladner published in chi journal ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"},{"data":"Question: what paper has Richard Ladner published in chi ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"},{"data":"Question: papers by Richard Ladner published at chi\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"},{"data":"Question: Does Richard Ladner publish in chi ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"},{"data":"Question: What has Richard Ladner published at chi ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"},{"data":"Question: What papers has Richard Ladner written at chi ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"},{"data":"Question: Which paper did Richard Ladner present at chi ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";"},{"data":"Question: What is the paper with the most citation about Artificial Intelligence ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"Artificial Intelligence\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC;"},{"data":"Question: Fetch me the most cited publications for Artificial Intelligence\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"Artificial Intelligence\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC;"},{"data":"Question: topics at ACL 2014\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2014 AND t4.venuename  =  \"ACL\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"},{"data":"Question: most common topics at NIPS 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"},{"data":"Question: most popular topics at NIPS 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"},{"data":"Question: hot topics at NIPS 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"},{"data":"Question: popular topics at NIPS 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"},{"data":"Question: which topics were most popular at NIPS 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"},{"data":"Question: topics popular at NIPS 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"},{"data":"Question: How many papers related to deep reinforcement learning in nips ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"deep reinforcement learning\" AND t4.venuename  =  \"nips\";"},{"data":"Question: Papers on WebKB\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"},{"data":"Question: which papers used WebKB ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"},{"data":"Question: papers about WebKB\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"},{"data":"Question: List the papers that used WebKB dataset\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"},{"data":"Question: papers using WebKB\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"},{"data":"Question: papers that use WebKB\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"},{"data":"Question: WebKB papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"},{"data":"Question: papers that used WebKB\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"},{"data":"Question: Papers that use the WebKB dataset\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"},{"data":"Question: conferences in 2013\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT venueid FROM paper WHERE YEAR  =  2013;"},{"data":"Question: how is the most cited author in CVPR ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid JOIN cite AS t4 ON t1.paperid  =  t4.citedpaperid WHERE t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;"},{"data":"Question: who is the most cited author at CVPR ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid JOIN cite AS t4 ON t1.paperid  =  t4.citedpaperid WHERE t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;"},{"data":"Question: what are some syntactic parsing papers that chris dyer did not write ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris dyer\" AND t5.keyphrasename  =  \"syntactic parsing\";"},{"data":"Question: are there any syntactic parsing papers not written by chris dyer ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris dyer\" AND t5.keyphrasename  =  \"syntactic parsing\";"},{"data":"Question: what are syntactic parsing papers not written by chris dyer\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris dyer\" AND t5.keyphrasename  =  \"syntactic parsing\";"},{"data":"Question: syntactic parsing papers not written by chris dyer\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris dyer\" AND t5.keyphrasename  =  \"syntactic parsing\";"},{"data":"Question: papers published in the last year\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT paperid FROM paper WHERE YEAR  =  ( SELECT MAX ( YEAR ) FROM paper );"},{"data":"Question: When was benjamin mako hill 's first publication ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"benjamin mako hill\" GROUP BY t3.year ORDER BY t3.year;"},{"data":"Question: When was benjamin mako hill 's first paper written ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"benjamin mako hill\" GROUP BY t3.year ORDER BY t3.year;"},{"data":"Question: When did ameet soni publish ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"ameet soni\" GROUP BY t3.year ORDER BY t3.year;"},{"data":"Question: Who cites Daniel A Reed the most\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  \"Daniel A Reed\" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;"},{"data":"Question: Who cites Daniel A Reed most ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  \"Daniel A Reed\" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;"},{"data":"Question: how many papers are in sigir ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";"},{"data":"Question: how many papers does sigir have ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";"},{"data":"Question: how many papers are published in sigir ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";"},{"data":"Question: number of papers in sigir conference\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";"},{"data":"Question: what papers have fewer than 5 citations by ACL papers ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;"},{"data":"Question: ACL papers with less than 5 citations\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;"},{"data":"Question: what ACL papers have less than 5 citations ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;"},{"data":"Question: what papers have fewer than 5 citations by ACL papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;"},{"data":"Question: What are the 5 most recent papers of Mirella Lapata ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Mirella Lapata\" ORDER BY t3.year DESC LIMIT 5;"},{"data":"Question: What were the papers published at pldi 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: Papers from pldi 2015 conference\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: papers published at pldi 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: What are the papers from pldi 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: Papers from pldi 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: Which papers were accepted in pldi 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: What papers were published during the conference pldi 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: papers in pldi 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: List of papers in pldi 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: pldi papers in 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: what papers are published in pldi 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: papers from pldi 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: pldi papers 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: pldi 2015 conference\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: pldi best paper award 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: pldi 2015 list of papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"},{"data":"Question: List today 's journals\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;"},{"data":"Question: List the journals published in March , 2011\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;"},{"data":"Question: ACL papers in 2016 with neural attention in the title\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.title LIKE \"neural attention\" AND t1.year  =  2016 AND t2.venuename  =  \"ACL\";"},{"data":"Question: Who writes a lot of papers in Machine Learning ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename  =  \"Machine Learning\" GROUP BY t1.authorname ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;"},{"data":"Question: Who wrote sensor fusion ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";"},{"data":"Question: Authors of papers on sensor fusion\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";"},{"data":"Question: people working on sensor fusion\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";"},{"data":"Question: Who publishes in sensor fusion ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";"},{"data":"Question: who publishes papers about sensor fusion\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";"},{"data":"Question: how many papers by dan klein are cited by michael i. jordan\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN cite AS t5 ON t3.paperid  =  t5.citedpaperid JOIN writes AS t4 ON t4.paperid  =  t5.citingpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"michael i. jordan\" AND t1.authorname  =  \"dan klein\";"},{"data":"Question: how many of dan klein 's papers cite michael i. jordan\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN cite AS t5 ON t3.paperid  =  t5.citedpaperid JOIN writes AS t4 ON t4.paperid  =  t5.citingpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"michael i. jordan\" AND t1.authorname  =  \"dan klein\";"},{"data":"Question: who else was on the paper with Ameet Soni and Ras Bodik ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t5.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Ameet Soni\" AND t1.authorname  =  \"Ras Bodik\";"},{"data":"Question: 2014 papers using ImageNet\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014;"},{"data":"Question: What journals are Takashi Matsumoto 's articles published in ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Takashi Matsumoto\" GROUP BY t3.journalid;"},{"data":"Question: What journals has Takashi Matsumoto published in ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Takashi Matsumoto\" GROUP BY t3.journalid;"},{"data":"Question: In what scholarly journals does Takashi Matsumoto publish ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Takashi Matsumoto\" GROUP BY t3.journalid;"},{"data":"Question: What authors wrote papers about Bacterial Wilt in 2016 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid JOIN author AS t5 ON t3.authorid  =  t5.authorid WHERE t2.keyphrasename  =  \"Bacterial Wilt\" AND t4.year  =  2016;"},{"data":"Question: Who wrote on the topic of Bacterial Wilt in 2016 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid JOIN author AS t5 ON t3.authorid  =  t5.authorid WHERE t2.keyphrasename  =  \"Bacterial Wilt\" AND t4.year  =  2016;"},{"data":"Question: When did Luke S Zettlemoyer publish ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Luke S Zettlemoyer\" ORDER BY t3.year;"},{"data":"Question: question answering 2016 papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"question answering\" AND t3.year  =  2016;"},{"data":"Question: What papers were written on question answering in 2016 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"question answering\" AND t3.year  =  2016;"},{"data":"Question: what keyphrases get most citations ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.citingpaperid )  ,  t1.keyphrasename FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t3 ON t2.paperid  =  t3.citedpaperid GROUP BY t1.keyphrasename ORDER BY COUNT ( t3.citingpaperid ) DESC;"},{"data":"Question: Find journals about Temporal Data .\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Temporal Data\" GROUP BY t3.journalid;"},{"data":"Question: List the journals related to Temporal Data\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Temporal Data\" GROUP BY t3.journalid;"},{"data":"Question: which ACL 2014 papers about Parsing used Jeopardy! Questions ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";"},{"data":"Question: Parsing papers using Jeopardy! Questions published at ACL 2014\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";"},{"data":"Question: Parsing papers from ACL 2014 using Jeopardy! Questions\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";"},{"data":"Question: Parsing papers from ACL 2014 that used Jeopardy! Questions\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";"},{"data":"Question: papers about Parsing that used Jeopardy! Questions and were published at ACL 2014\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";"},{"data":"Question: in what journals does linda shapiro publish ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"linda shapiro\";"},{"data":"Question: Which journals did linda shapiro submit papers to ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"linda shapiro\";"},{"data":"Question: NIPS authors\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";"},{"data":"Question: who are the authors at NIPS ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";"},{"data":"Question: who authored papers at NIPS ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";"},{"data":"Question: who publishes in NIPS ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";"},{"data":"Question: who has papers at NIPS ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";"},{"data":"Question: which venue publishes the most papers about deep learning\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t4.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t4.venueid ORDER BY COUNT ( t3.paperid ) DESC;"},{"data":"Question: How many publications were added to the Cell journal this year ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid  =  t1.paperid WHERE t2.journalname  =  \"Cell\" AND t3.year  =  2015;"},{"data":"Question: How many articles were published in the Cell journal in 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid  =  t1.paperid WHERE t2.journalname  =  \"Cell\" AND t3.year  =  2015;"},{"data":"Question: What are all the publication titles by Donald E Knuth ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Donald E Knuth\";"},{"data":"Question: papers published in eccv 2016 by ali farhadi\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ali farhadi\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";"},{"data":"Question: Does ali farhadi have a paper in eccv in 2016 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ali farhadi\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";"},{"data":"Question: papers of ali farhadi in eccv 2016\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ali farhadi\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";"},{"data":"Question: What are some papers dealing with Semantic Data in YAGO ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paperkeyphrase AS t2 ON t2.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid WHERE t1.datasetname  =  \"YAGO\" AND t4.keyphrasename  =  \"Semantic Data\";"},{"data":"Question: Who has published more papers in chi ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;"},{"data":"Question: Who has written the most papers at chi ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;"},{"data":"Question: how is the most prolific author in chi ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;"},{"data":"Question: who published the most at chi\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;"},{"data":"Question: In what year did Ye Cao publish the most papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"Ye Cao\" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;"},{"data":"Question: What year did Ye Cao publish the most papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"Ye Cao\" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;"},{"data":"Question: conferences that mention ImageNet\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"ImageNet\";"},{"data":"Question: first deep learning paper\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t3.year ORDER BY t3.year ASC;"},{"data":"Question: What was the first paper on deep learning written ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t3.year ORDER BY t3.year ASC;"},{"data":"Question: When was deep learning proposed ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t3.year ORDER BY t3.year ASC;"},{"data":"Question: when was the first deep learning paper published ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t3.year ORDER BY t3.year ASC;"},{"data":"Question: what papers were published in Academic radiology in 1995 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM paper AS t2 JOIN journal AS t1 ON t2.journalid  =  t1.journalid WHERE t1.journalname  =  \"Academic radiology\" AND t2.year  =  1995;"},{"data":"Question: what papers do parsing papers typically cite ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid WHERE t1.keyphrasename  =  \"parsing\";"},{"data":"Question: papers typically cited by parsing papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid WHERE t1.keyphrasename  =  \"parsing\";"},{"data":"Question: venue for Trophic Cascade\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\";"},{"data":"Question: conferences for Trophic Cascade\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\";"},{"data":"Question: what conferences are related to Trophic Cascade\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\";"},{"data":"Question: What was the conference name that approved Trophic Cascade ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\";"},{"data":"Question: How many papers were written on question answering in 2011 through 2016 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"question answering\" AND t3.year  >=  2011;"},{"data":"Question: What are the best NLP conferences ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"NLP\" GROUP BY t3.venueid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;"},{"data":"Question: ACL papers by author\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\";"},{"data":"Question: papers with more than 10 citations\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >  10;"},{"data":"Question: Which authors published papers in 2015 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2015;"},{"data":"Question: who wrote papers in 2015\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2015;"},{"data":"Question: what keyphrase does Brian DeRenzi write about that gets most citations ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphrasename  ,  SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Brian DeRenzi\" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC;"},{"data":"Question: main topics of work by Brian DeRenzi\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphrasename  ,  SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Brian DeRenzi\" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC;"},{"data":"Question: authors with at least 5 papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid GROUP BY t1.authorid HAVING COUNT ( t2.paperid )  >=  5;"},{"data":"Question: papers that were not published in the last year\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT paperid FROM paper WHERE YEAR != 2015;"},{"data":"Question: When was Michael Stonebraker GIS Database published ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t5.keyphrasename  =  \"GIS Database\";"},{"data":"Question: When did Michael Stonebraker publish his GIS Database paper ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t5.keyphrasename  =  \"GIS Database\";"},{"data":"Question: When does Michael Stonebraker publish the GIS Database paper ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t5.keyphrasename  =  \"GIS Database\";"},{"data":"Question: In 2010 what journal published an article about Trophic Cascade ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\" AND t3.year  =  2010 GROUP BY t3.journalid;"},{"data":"Question: What is the most popular paper this year in CVPR ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2016 AND t2.venuename  =  \"CVPR\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC;"},{"data":"Question: How many citations does luke zettlemoyer have per year\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.citedpaperid )  ,  t3.year FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"luke zettlemoyer\" GROUP BY t3.year;"},{"data":"Question: authors working on ImageNet\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t2 ON t2.paperid  =  t4.paperid WHERE t1.datasetname  =  \"ImageNet\" GROUP BY t2.paperid;"},{"data":"Question: What articles have been published since 2006 about the effects of juicing for cancer patients ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT paperid  ,  title FROM paper WHERE title LIKE \"the effects of juicing for cancer patients\" AND YEAR  >  2006;"},{"data":"Question: Eric C. Kerrigan 's Liquid Automatica paper\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname  =  \"Eric C. Kerrigan\" AND t3.keyphrasename  =  \"Liquid\" AND t6.venuename  =  \"Automatica\";"},{"data":"Question: Where did sergey levine publish his last paper ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.venueid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"sergey levine\" GROUP BY t3.venueid  ,  t3.year ORDER BY t3.year DESC;"},{"data":"Question: keyphrases used by dan klein in his emnlp papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid JOIN writes AS t5 ON t5.paperid  =  t3.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid WHERE t1.authorname  =  \"dan klein\" AND t4.venuename  =  \"emnlp\";"},{"data":"Question: Who are the prominent researchers in Neutralizing Antibody in 2012 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"Neutralizing Antibody\" AND t4.year  =  2012 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: the papers at eccv in 2014 using ImageNet dataset\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";"},{"data":"Question: which papers in eccv 2014 use ImageNet ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";"},{"data":"Question: eccv 2014 papers using ImageNet\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";"},{"data":"Question: Euclidean Distance papers citing NIPS papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t5.citingpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t5 ON t2.paperid  =  t5.citingpaperid JOIN paper AS t3 ON t3.paperid  =  t5.citedpaperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Euclidean Distance\" AND t4.venuename  =  \"NIPS\";"},{"data":"Question: top authors working on ImageNet ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t2.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t1.datasetname  =  \"ImageNet\" GROUP BY t3.paperid ORDER BY COUNT ( t4.paperid ) DESC;"},{"data":"Question: how many ACL 2012 papers have more than 7 citations ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT ( t1.paperid )  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2012 AND t2.venuename  =  \"ACL\" GROUP BY t1.paperid HAVING COUNT ( t3.citingpaperid )  >  7;"},{"data":"Question: What was the topic of best paper in 2012 EMNLP-CoNLL ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.keyphraseid  ,  t2.paperid FROM paper AS t2 JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN paperkeyphrase AS t1 ON t2.paperid  =  t1.paperid JOIN venue AS t3 ON t3.venueid  =  t2.venueid WHERE t2.year  =  2012 AND t3.venuename  =  \"EMNLP-CoNLL\" GROUP BY t2.paperid  ,  t1.keyphraseid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;"},{"data":"Question: How many papers has Noah Smith co-authored since 2009 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname != \"Noah Smith\" AND t3.year  >  2009 AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname LIKE \"Noah Smith\" );"},{"data":"Question: Number of ACL papers with more than 2 citations\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  >  2;"},{"data":"Question: What is the name of Eric C. Kerrigan 's Liquid Automatica paper ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.title FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname LIKE \"Eric C. Kerrigan\" AND t3.keyphrasename  =  \"Liquid\" AND t6.venuename  =  \"Automatica\";"},{"data":"Question: How many papers used ImageNet datasets in cvpr ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t4.venuename  =  \"cvpr\";"},{"data":"Question: What venues are for Neuroscience ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT venueid FROM venue WHERE venuename  =  \"Neuroscience\";"},{"data":"Question: When was the last time Mary Crainie published a paper ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT MAX ( t3.year ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Mary Crainie\";"},{"data":"Question: I want the co-authors of papers on Machine Translation Output with Philipp Koehn\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.authorid FROM paperkeyphrase AS t6 JOIN keyphrase AS t3 ON t6.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t6.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid JOIN author AS t2 ON t4.authorid  =  t2.authorid WHERE t2.authorname  =  \"Philipp Koehn\" AND t3.keyphrasename  =  \"Machine Translation Output\";"},{"data":"Question: How many papers does Samuel Madden publish outside of PVLDB area ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Samuel Madden\" AND t4.venuename != \"PVLDB\";"},{"data":"Question: which journal did Donald E Knuth publish his last paper ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.journalid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Donald E Knuth\" GROUP BY t3.journalid  ,  t3.year ORDER BY t3.year DESC;"},{"data":"Question: What is the venue of Fracture of acrylic bone cement ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT venueid FROM paper WHERE title  =  \"Fracture of acrylic bone cement\";"},{"data":"Question: How many authors published at sigcse in 2010 ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t2.paperid ) FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2010 AND t3.venuename  =  \"sigcse\";"},{"data":"Question: What is the year of publication of \" A Switching Architecture For ISDN \" ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT title  ,  YEAR FROM paper WHERE title  =  \"A Switching Architecture For ISDN\";"},{"data":"Question: what keywords are used by papers at uist\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"uist\";"},{"data":"Question: Give me the papers written by Su-In Lee before 2012 .\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Su-In Lee\" AND t3.year  <  2012;"},{"data":"Question: papers in semantic parsing for each year\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"semantic parsing\" GROUP BY t3.year ORDER BY t3.year DESC;"},{"data":"Question: papers with at least 5 citations\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >=  5;"},{"data":"Question: papers cited by at least 5 papers\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >=  5;"},{"data":"Question: What is the most cited paper at sigcomm ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigcomm\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC;"},{"data":"Question: What is the name of Ranjit Jhala 's Liquid Haskell paper ?\nSchema: 'venue' [ Primary Key: 'venueId' int, 'venueName' text];\n'author' [ Primary Key: 'authorId' int, 'authorName' text];\n'dataset' [ Primary Key: 'datasetId' int, 'datasetName' text];\n'journal' [ Primary Key: 'journalId' int, 'journalName' text];\n'keyphrase' [ Primary Key: 'keyphraseId' int, 'keyphraseName' text];\n'paper' [ Primary Key: 'paperId' int, 'title' text, 'venueId' int, 'year' int, 'numCiting' int, 'numCitedBy' int, 'journalId' int, Foreign Key: 'venueId' int from 'paper' 'venueId', Foreign Key: 'journalId' int from 'paper' 'journalId'];\n'cite' [ Primary Key: 'citingPaperId' int, 'citedPaperId' int, Foreign Key: 'citingPaperId' int from 'cite' 'citingPaperId', Foreign Key: 'citedPaperId' int from 'cite' 'citedPaperId'];\n'paperDataset' [ 'paperId' int, Primary Key: 'datasetId' int];\n'paperKeyphrase' [ 'paperId' int, Primary Key: 'keyphraseId' int, Foreign Key: 'paperId' int from 'paperKeyphrase' 'paperId', Foreign Key: 'keyphraseId' int from 'paperKeyphrase' 'keyphraseId'];\n'writes' [ Primary Key: 'paperId' int, 'authorId' int, Foreign Key: 'paperId' int from 'writes' 'paperId', Foreign Key: 'authorId' int from 'writes' 'authorId'];\n\nAnswer: SELECT DISTINCT t3.title FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN paper AS t3 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname LIKE \"Ranjit Jhala\" AND t5.keyphrasename  =  \"Liquid Haskell\";"},{"data":"Question: List all the businesses with more than 4.5 stars\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT name FROM business WHERE rating  >  4.5;"},{"data":"Question: List all businesses with rating 3.5\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT name FROM business WHERE rating  =  3.5;"},{"data":"Question: List all user ids with name Michelle\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT user_id FROM USER WHERE name  =  \"Michelle\";"},{"data":"Question: Find all states in which there is a Whataburger\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT state FROM business WHERE name  =  \"Whataburger\";"},{"data":"Question: Find all cities in which there is a restaurant called \" MGM Grand Buffet \"\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"MGM Grand Buffet\" AND t2.category_name  =  \"category_category_name0\";"},{"data":"Question: Find the cities of businesses rated below 1.5\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT city FROM business WHERE rating  <  1.5;"},{"data":"Question: Find all cities which has a \" Taj Mahal \" .\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT city FROM business WHERE name  =  \"Taj Mahal\";"},{"data":"Question: List all the reviews which rated a business less than 1\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT text FROM review WHERE rating  <  1;"},{"data":"Question: List all the restaurant rated more than 3.5\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  >  3.5 AND t2.category_name  =  \"restaurant\";"},{"data":"Question: find all cities which has a \" Taj Mahal \" restaurant\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Taj Mahal\" AND t2.category_name  =  \"restaurant\";"},{"data":"Question: list all the reviews by Niloofar\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Niloofar\";"},{"data":"Question: list all the businesses which have a review by Niloofar\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t3.name  =  \"Niloofar\";"},{"data":"Question: list all the businesses which Niloofar rated 5\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t2.rating  =  5 AND t3.name  =  \"Niloofar\";"},{"data":"Question: List all the reviews by Michelle for Italian restaurant\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t4.text FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN review AS t4 ON t4.business_id  =  t1.business_id JOIN USER AS t5 ON t5.user_id  =  t4.user_id WHERE t2.category_name  =  \"Italian\" AND t3.category_name  =  \"category_category_name1\" AND t5.name  =  \"Michelle\";"},{"data":"Question: find the number of reviews written for \" Cafe Zinho \" restaurant in Texas\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t3.text ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";"},{"data":"Question: List all 5 star Italian restaurant\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.rating  =  5 AND t2.category_name  =  \"Italian\" AND t3.category_name  =  \"restaurant\";"},{"data":"Question: List all the neighbourhoods with Italian restaurant in Madison\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN category AS t4 ON t4.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t3.category_name  =  \"Italian\" AND t4.category_name  =  \"restaurant\";"},{"data":"Question: List all the neighbourhoods with Italian restaurant rated less than 2.5 in Madison\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN category AS t4 ON t4.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t2.rating  <  2.5 AND t3.category_name  =  \"Italian\" AND t4.category_name  =  \"restaurant\";"},{"data":"Question: find all the restaurant in Pennsylvania\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Pennsylvania\" AND t2.category_name  =  \"restaurant\";"},{"data":"Question: List all businesses that are restaurant in Pennsylvania .\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Pennsylvania\" AND t2.category_name  =  \"restaurant\";"},{"data":"Question: Find all the reviews for all Pet Groomers with more than 100 reviews\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t3.text FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id WHERE t1.review_count  >  100 AND t2.category_name  =  \"Pet Groomers\";"},{"data":"Question: What are all the breweries in \" Los Angeles \" ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"breweries\";"},{"data":"Question: Find all breweries in Los Angeles\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"breweries\";"},{"data":"Question: Find all breweries in \" Los Angeles \"\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"breweries\";"},{"data":"Question: Find all users who reviewed restaurant \" Mesa Grill \"\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  \"Mesa Grill\" AND t2.category_name  =  \"restaurant\";"},{"data":"Question: List the addresses of all Walmart in \" Los Angeles \"\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT full_address FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Walmart\";"},{"data":"Question: Find all restaurant reviewed by Patrick in \" Dallas \"\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"restaurant\" AND t4.name  =  \"Patrick\";"},{"data":"Question: Which restaurant in Dallas were reviewed by user Patrick ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"restaurant\" AND t4.name  =  \"Patrick\";"},{"data":"Question: Find all Bars reviewed by Patrick\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"Bars\" AND t4.name  =  \"Patrick\";"},{"data":"Question: Find all Bars reviewed by Patrick with at least 3 stars\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.rating  >=  3 AND t2.category_name  =  \"Bars\" AND t4.name  =  \"Patrick\";"},{"data":"Question: Find all users who have written tips for \" Barrio Cafe \" in 2015\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Barrio Cafe\" AND t2.year  =  2015;"},{"data":"Question: Find all businesses in Texas with a rating below 2\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT name FROM business WHERE rating  <  2 AND state  =  \"Texas\";"},{"data":"Question: Find all restaurant Seafood in Los Angeles\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Seafood\" AND t3.category_name  =  \"restaurant\";"},{"data":"Question: List all the Seafood restaurant in \" Los Angeles \"\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Seafood\" AND t3.category_name  =  \"restaurant\";"},{"data":"Question: Find all restaurant that serve Seafood in \" Los Angeles \"\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Seafood\" AND t3.category_name  =  \"restaurant\";"},{"data":"Question: Find all reviews by Patrick with a rating above 4\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.rating  >  4 AND t2.name  =  \"Patrick\";"},{"data":"Question: Find all Apple Store in \" Los Angeles \"\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT business_id FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Apple Store\";"},{"data":"Question: Find all Dallas restaurant with a rating above 4.5\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  4.5 AND t2.category_name  =  \"restaurant\";"},{"data":"Question: What neighbourhood is restaurant \" Flat Top Grill \" in ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.name  =  \"Flat Top Grill\" AND t3.category_name  =  \"category_category_name0\";"},{"data":"Question: Find all tips about \" Vintner Grill \" that received more than 9 likes\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Vintner Grill\" AND t2.likes  >  9;"},{"data":"Question: Find all reviews about \" Kabob Palace \" in year 2014\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Kabob Palace\" AND t2.year  =  2014;"},{"data":"Question: Find all users who have written tips about businesses in Dallas\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"Dallas\";"},{"data":"Question: Find all cities in Texas in which there is a restaurant called \" MGM Grand Buffet \"\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"MGM Grand Buffet\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";"},{"data":"Question: Find the users who have given tips on Pet Groomers\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN tip AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"Pet Groomers\";"},{"data":"Question: Find all tips for \" Cafe Zinho \" in Texas .\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Texas\";"},{"data":"Question: List all users who reviewed businesses that are restaurant .\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"restaurant\";"},{"data":"Question: List all tips for \" Cafe Zinho \" in Pennsylvania in 2010 .\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Pennsylvania\" AND t2.year  =  2010;"},{"data":"Question: List all users who reviewed businesses that are restaurant in 2010 .\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"restaurant\" AND t3.year  =  2010;"},{"data":"Question: Find all the tips from a user who has written a review in 2012\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t2.text FROM USER AS t3 JOIN review AS t1 ON t3.user_id  =  t1.user_id JOIN tip AS t2 ON t3.user_id  =  t2.user_id WHERE t1.year  =  2012;"},{"data":"Question: Find all reviews for businesses rated 2.5\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  =  2.5;"},{"data":"Question: find the number of escape games in Madison\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";"},{"data":"Question: What is the number of escape games in Madison\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";"},{"data":"Question: How many escape games exist in Madison\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";"},{"data":"Question: What is the number of escape games in \" Madison \" ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";"},{"data":"Question: How many escape games are there in Madison ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";"},{"data":"Question: find the number of restaurant rated more than 3.5\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  >  3.5 AND t2.category_name  =  \"restaurant\";"},{"data":"Question: find the total checkins in Moroccan restaurant in \" Los Angeles \"\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"restaurant\" AND t3.category_name  =  \"Moroccan\";"},{"data":"Question: find the total checkins in Moroccan restaurant in \" Los Angeles \" on Friday\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\" AND t4.day  =  \"Friday\";"},{"data":"Question: find the total checkins in Moroccan restaurant in \" Los Angeles \" per day\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t4.day  ,  SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\" GROUP BY t4.day;"},{"data":"Question: find the total checkins in Italian Delis in each state on Sunday\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.state  ,  SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t2.category_name  =  \"Italian\" AND t3.category_name  =  \"Delis\" AND t4.day  =  \"Sunday\" GROUP BY t1.state;"},{"data":"Question: How many reviews has Niloofar written in 2015\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2015 AND t2.name  =  \"Niloofar\";"},{"data":"Question: what is the average rating given in Michelle reviews\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT AVG ( t1.rating ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Michelle\";"},{"data":"Question: What is the number of checkins for \" Cafe Zinho \" on Friday\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t2.count FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t2.day  =  \"Friday\";"},{"data":"Question: how many users reviewed \" Sushi Too \" in Pittsburgh\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"Pittsburgh\" AND t1.name  =  \"Sushi Too\";"},{"data":"Question: What is the number of restaurant in Pittsburgh rated 4.5\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Pittsburgh\" AND t1.rating  =  4.5 AND t2.category_name  =  \"restaurant\";"},{"data":"Question: How many tips have been written in 2015\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT text ) FROM tip WHERE YEAR  =  2015;"},{"data":"Question: What is the total likes on tips from Niloofar\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT SUM ( t1.likes ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Niloofar\";"},{"data":"Question: What is the total likes on tips about \" Cafe Zinho \"\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\";"},{"data":"Question: What is the total likes on tips from Niloofar about \" Cafe Zinho \"\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Cafe Zinho\" AND t3.name  =  \"Niloofar\";"},{"data":"Question: How many tips has Michelle written in 2010\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2010 AND t2.name  =  \"Michelle\";"},{"data":"Question: Return me the number of tips that are written by Michelle in 2010 .\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2010 AND t2.name  =  \"Michelle\";"},{"data":"Question: How many tips has Michelle written in April\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  \"April\" AND t2.name  =  \"Michelle\";"},{"data":"Question: what is the number of restaurant in Texas\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";"},{"data":"Question: How many Bars in \" Dallas \" have a rating above 3.5 ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Bars\";"},{"data":"Question: How many Bars in Dallas have a rating above 3.5 ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Bars\";"},{"data":"Question: How many people reviewed the restaurant \" Texas de Brazil \" in Dallas Texas ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t1.name  =  \"Texas de Brazil\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";"},{"data":"Question: How many people reviewed \" Bistro Di Napoli \" in 2015 ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Bistro Di Napoli\" AND t2.year  =  2015;"},{"data":"Question: How many restaurant are there in the Hazelwood district of Dallas ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM category AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t3.category_name  =  \"restaurant\" AND t2.neighbourhood_name  =  \"Hazelwood\";"},{"data":"Question: How many Starbucks are there in Dallas Texas ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"Dallas\" AND name  =  \"Starbucks\" AND state  =  \"Texas\";"},{"data":"Question: How many reviews does \" Acacia Cafe \" have ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT review_count FROM business WHERE name  =  \"Acacia Cafe\";"},{"data":"Question: Find the average number of checkins in restaurant \" Barrio Cafe \" per day\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT AVG ( t3.count )  ,  t3.day FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN checkin AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  \"Barrio Cafe\" AND t2.category_name  =  \"restaurant\" GROUP BY t3.day;"},{"data":"Question: How many businesses are there in the \" Stone Meadows \" neighbourhood in Madison ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM neighbourhood AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.neighbourhood_name  =  \"Stone Meadows\";"},{"data":"Question: How many reviews has Adrienne written ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Adrienne\";"},{"data":"Question: How many reviews has Michelle written in March 2014 ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  \"March\" AND t1.year  =  2014 AND t2.name  =  \"Michelle\";"},{"data":"Question: How many businesses has Michelle reviewed in 2010 ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t2.year  =  2010 AND t3.name  =  \"Michelle\";"},{"data":"Question: How many businesses in \" San Diego \" has Christine reviewed in 2010 ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"San Diego\" AND t2.year  =  2010 AND t3.name  =  \"Christine\";"},{"data":"Question: How many Target are there in \" Los Angeles \" ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Target\";"},{"data":"Question: How many users have reviewed Irish Pub in Dallas ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"Irish Pub\";"},{"data":"Question: What is the average rating of reviews written in year 2014 ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT AVG ( rating ) FROM review WHERE YEAR  =  2014;"},{"data":"Question: How many people reviewed restaurant \" Vintner Grill \" in 2010 ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  \"Vintner Grill\" AND t2.category_name  =  \"category_category_name0\" AND t3.year  =  2010;"},{"data":"Question: Find the number of reviews on businesses located in \" South Summerlin \" neighbourhood\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t3.text ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id JOIN review AS t3 ON t3.business_id  =  t2.business_id WHERE t1.neighbourhood_name  =  \"South Summerlin\";"},{"data":"Question: Find the number of users called Michelle\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT name ) FROM USER WHERE name  =  \"Michelle\";"},{"data":"Question: Return me the number of businesses that are restaurant .\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.category_name  =  \"restaurant\";"},{"data":"Question: Return me the number of cities that has \" Panda Express \" .\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT city ) FROM business WHERE name  =  \"Panda Express\";"},{"data":"Question: Return me the number of tips that are written by Michelle .\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Michelle\";"},{"data":"Question: Find the total checkins in \" Brighton Heights \" neighbourhood\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT SUM ( t3.count ) FROM checkin AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t2.neighbourhood_name  =  \"Brighton Heights\";"},{"data":"Question: Find the total number of reviews written in March\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT text ) FROM review WHERE MONTH  =  \"March\";"},{"data":"Question: Find the number of tips written in each month\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT text )  ,  MONTH FROM tip GROUP BY MONTH;"},{"data":"Question: How many neighbourhoods have a business with rating 5 in Madison ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.neighbourhood_name ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t2.rating  =  5;"},{"data":"Question: Give me all the Moroccan restaurant in Texas\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.state  =  \"Texas\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\";"},{"data":"Question: which business has the most number of checkins\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY SUM ( t2.count ) DESC LIMIT 1;"},{"data":"Question: which neighbourhood has the most number of businesses in Madison\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.neighbourhood_name FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" GROUP BY t1.neighbourhood_name ORDER BY COUNT ( DISTINCT t2.name ) DESC LIMIT 1;"},{"data":"Question: Find all Mexican restaurant in Dallas with at least 3.5 stars\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Mexican\" AND t3.category_name  =  \"restaurant\";"},{"data":"Question: Find all Mexican restaurant in Dallas with a rating above 3.5\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Mexican\" AND t3.category_name  =  \"restaurant\";"},{"data":"Question: Find all restaurant with Valet Service in Dallas Texas\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"Valet Service\" AND t3.category_name  =  \"restaurant\";"},{"data":"Question: Find all Italian restaurant in the Meadowood neighbourhood of Madison\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN category AS t4 ON t4.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t3.category_name  =  \"Italian\" AND t4.category_name  =  \"restaurant\" AND t2.neighbourhood_name  =  \"Meadowood\";"},{"data":"Question: Find all Bars in \" Los Angeles \" with at least 30 reviews and average rating above 3 stars\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t1.rating  >  3 AND t1.review_count  >  30 AND t2.category_name  =  \"Bars\";"},{"data":"Question: How many Egyptian restaurant are there in Edinburgh ?\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Edinburgh\" AND t2.category_name  =  \"restaurant\" AND t3.category_name  =  \"Egyptian\";"},{"data":"Question: Find users whose average review rating is below 3\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t2.name FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id GROUP BY t2.name HAVING AVG ( t1.rating )  <  3;"},{"data":"Question: Find the business with the most number of reviews in April\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.month  =  \"April\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.text ) DESC LIMIT 1;"},{"data":"Question: Find the business which has the most number of categories\nSchema: 'business' [ Primary Key: 'bid' int, 'business_id' text, 'name' text, 'full_address' text, 'city' text, 'latitude' text, 'longitude' text, 'review_count' int, 'is_open' int, 'rating' int, 'state' text];\n'category' [ Primary Key: 'id' int, 'business_id' text, 'category_name' text, Foreign Key: 'business_id' text from 'category' 'business_id'];\n'user' [ Primary Key: 'uid' int, 'user_id' text, 'name' text];\n'checkin' [ Primary Key: 'cid' int, 'business_id' text, 'count' int, 'day' text, Foreign Key: 'business_id' text from 'checkin' 'business_id'];\n'neighbourhood' [ Primary Key: 'id' int, 'business_id' text, 'neighbourhood_name' text, Foreign Key: 'business_id' text from 'neighbourhood' 'business_id'];\n'review' [ Primary Key: 'rid' int, 'business_id' text, 'user_id' text, 'rating' int, 'text' text, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'review' 'business_id', Foreign Key: 'user_id' text from 'review' 'user_id'];\n'tip' [ Primary Key: 'tip_id' int, 'business_id' text, 'text' text, 'user_id' text, 'likes' int, 'year' int, 'month' text, Foreign Key: 'business_id' text from 'tip' 'business_id', Foreign Key: 'user_id' text from 'tip' 'user_id'];\n\nAnswer: SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.category_name ) DESC LIMIT 1;"},{"data":"Question: return me the homepage of PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT homepage FROM journal WHERE name  =  \"PVLDB\";"},{"data":"Question: return me the homepage of \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT homepage FROM author WHERE name  =  \"H. V. Jagadish\";"},{"data":"Question: return me the abstract of \" Making database systems usable \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT abstract FROM publication WHERE title  =  \"Making database systems usable\";"},{"data":"Question: return me the year of \" Making database systems usable \"\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT YEAR FROM publication WHERE title  =  \"Making database systems usable\";"},{"data":"Question: return me the year of \" Making database systems usable \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT YEAR FROM publication WHERE title  =  \"Making database systems usable\";"},{"data":"Question: return me the papers after 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT title FROM publication WHERE YEAR  >  2000;"},{"data":"Question: return me the homepage of the VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT homepage FROM conference WHERE name  =  \"VLDB\";"},{"data":"Question: return me all the keywords .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT keyword FROM keyword;"},{"data":"Question: return me all the organizations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT name FROM organization;"},{"data":"Question: return me all the organizations in \" North America \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT name FROM organization WHERE continent  =  \"North America\";"},{"data":"Question: return me the homepage of \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT homepage FROM organization WHERE name  =  \"University of Michigan\";"},{"data":"Question: return me the number of references of \" Making database systems usable \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT reference_num FROM publication WHERE title  =  \"Making database systems usable\";"},{"data":"Question: return me the references of \" Making database systems usable \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT reference_num FROM publication WHERE title  =  \"Making database systems usable\";"},{"data":"Question: return me the number of citations of \" Making database systems usable \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT citation_num FROM publication WHERE title  =  \"Making database systems usable\";"},{"data":"Question: return me the citations of \" Making database systems usable \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT citation_num FROM publication WHERE title  =  \"Making database systems usable\";"},{"data":"Question: return me the paper with more than 200 citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT title FROM publication WHERE citation_num  >  200;"},{"data":"Question: return me the authors who have papers in PVLDB 2010 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" AND t4.year  =  2010;"},{"data":"Question: return me the authors who have papers in PVLDB after 2010 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" AND t4.year  >  2010;"},{"data":"Question: return me the authors who have papers in VLDB conference in 2002 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  =  2002;"},{"data":"Question: return me the authors who have papers in VLDB conference before 2002 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  <  2002;"},{"data":"Question: return me the authors who have papers in VLDB conference before 2002 after 1995 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  <  2002 AND t4.year  >  1995;"},{"data":"Question: return me the area of PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t3.name FROM DOMAIN AS t3 JOIN domain_journal AS t1 ON t3.did  =  t1.did JOIN journal AS t2 ON t2.jid  =  t1.jid WHERE t2.name  =  \"PVLDB\";"},{"data":"Question: return me the authors who have papers in PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\";"},{"data":"Question: return me the organization \" H. V. Jagadish \" is in .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t1.name  =  \"H. V. Jagadish\";"},{"data":"Question: return me the conferences, which have papers by \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"},{"data":"Question: return me the journals, which have papers by \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"},{"data":"Question: return me the domain where \" H. V. Jagadish \" is focused .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM domain_author AS t3 JOIN author AS t1 ON t3.aid  =  t1.aid JOIN DOMAIN AS t2 ON t2.did  =  t3.did WHERE t1.name  =  \"H. V. Jagadish\";"},{"data":"Question: return me the authors of \" Making database systems usable \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t3.title  =  \"Making database systems usable\";"},{"data":"Question: return me the conference, which published \" Making database systems usable \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t2.title  =  \"Making database systems usable\";"},{"data":"Question: return me the papers by \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\";"},{"data":"Question: return me the papers on VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";"},{"data":"Question: return me the papers on PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";"},{"data":"Question: return me the papers on PVLDB after 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000;"},{"data":"Question: return me the papers on VLDB conference after 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000;"},{"data":"Question: return me the papers by \" H. V. Jagadish \" on PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\";"},{"data":"Question: return me the papers by \" H. V. Jagadish \" on VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\";"},{"data":"Question: return me the papers by \" H. V. Jagadish \" after 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.year  >  2000;"},{"data":"Question: return me the papers by \" H. V. Jagadish \" on PVLDB after 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\" AND t4.year  >  2000;"},{"data":"Question: return me the papers by \" H. V. Jagadish \" on VLDB conference after 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\" AND t4.year  >  2000;"},{"data":"Question: return me the area of the VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM domain_conference AS t3 JOIN conference AS t1 ON t3.cid  =  t1.cid JOIN DOMAIN AS t2 ON t2.did  =  t3.did WHERE t1.name  =  \"VLDB\";"},{"data":"Question: return me the authors who have papers in the VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\";"},{"data":"Question: return me all the keywords in Databases area .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.keyword FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did  =  t2.did JOIN keyword AS t1 ON t1.kid  =  t2.kid WHERE t3.name  =  \"Databases\";"},{"data":"Question: return me all the papers, which contain the keyword \" Natural Language \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t3.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"Natural Language\";"},{"data":"Question: return me the keywords of \" Making database systems usable \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.keyword FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t3.pid WHERE t2.title  =  \"Making database systems usable\";"},{"data":"Question: return me the keywords related to \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\";"},{"data":"Question: return me the keywords in VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\";"},{"data":"Question: return me the keywords in PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\";"},{"data":"Question: return me the keywords in the papers of \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.keyword FROM organization AS t6 JOIN author AS t2 ON t6.oid  =  t2.oid JOIN writes AS t4 ON t4.aid  =  t2.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN publication_keyword AS t3 ON t5.pid  =  t3.pid JOIN keyword AS t1 ON t3.kid  =  t1.kid WHERE t6.name  =  \"University of Michigan\";"},{"data":"Question: return me the papers of \" H. V. Jagadish \" containing keyword \" User Study \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t5.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t5 ON t5.pid  =  t3.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.keyword  =  \"User Study\";"},{"data":"Question: return me the papers in PVLDB containing keyword \" Keyword search \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t4.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t2.pid JOIN journal AS t3 ON t4.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t1.keyword  =  \"Keyword search\";"},{"data":"Question: return me the papers in VLDB conference containing keyword \" Information Retrieval \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t4.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t3.pid JOIN conference AS t2 ON t4.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t1.keyword  =  \"Information Retrieval\";"},{"data":"Question: return me the authors who have papers containing keyword \" Relational Database \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\";"},{"data":"Question: return me all the organizations in Databases area .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\";"},{"data":"Question: return me all the organizations in Databases area located in \" North America \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.continent  =  \"North America\";"},{"data":"Question: return me all the researchers in \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t2.name  =  \"University of Michigan\";"},{"data":"Question: return me all the researchers in Databases area in \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.name  =  \"University of Michigan\";"},{"data":"Question: return me all the papers in \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\";"},{"data":"Question: return me all the papers after 2000 in \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" AND t4.year  >  2000;"},{"data":"Question: return me all the papers in VLDB conference in \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t5.title FROM organization AS t3 JOIN author AS t1 ON t3.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN conference AS t2 ON t5.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t3.name  =  \"University of Michigan\";"},{"data":"Question: return me all the papers in PVLDB in \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\";"},{"data":"Question: return me all the papers in PVLDB after 2000 in \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\" AND t5.year  >  2000;"},{"data":"Question: return me the paper in Databases area with more than 200 citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" AND t3.citation_num  >  200;"},{"data":"Question: return me the paper in PVLDB with more than 200 citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.citation_num  >  200;"},{"data":"Question: return me the paper in VLDB conference with more than 200 citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.citation_num  >  200;"},{"data":"Question: return me the paper by \" H. V. Jagadish \" with more than 200 citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.citation_num  >  200;"},{"data":"Question: return me the papers by \" H. V. Jagadish \" on PVLDB with more than 200 citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\" AND t4.citation_num  >  200;"},{"data":"Question: return me the papers by \" H. V. Jagadish \" on VLDB conference with more than 200 citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\" AND t4.citation_num  >  200;"},{"data":"Question: return me the paper after 2000 with more than 200 citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT title FROM publication WHERE citation_num  >  200 AND YEAR  >  2000;"},{"data":"Question: return me the paper after 2000 in Databases area with more than 200 citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" AND t3.citation_num  >  200 AND t3.year  >  2000;"},{"data":"Question: return me the paper after 2000 in PVLDB with more than 200 citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.citation_num  >  200 AND t2.year  >  2000;"},{"data":"Question: return me the paper after 2000 in VLDB conference with more than 200 citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.citation_num  >  200 AND t2.year  >  2000;"},{"data":"Question: return me the number of conferences which have papers by \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"},{"data":"Question: return me the number of journals which have papers by \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"},{"data":"Question: return me the number of papers written by \" H. V. Jagadish \" in each year .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t3.title )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t3.year;"},{"data":"Question: return me the number of authors of \" Making database systems usable \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t3.title  =  \"Making database systems usable\";"},{"data":"Question: return me the number of citations of \" Making database systems usable \" in each year .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT YEAR  ,  SUM ( citation_num ) FROM publication WHERE title  =  \"Making database systems usable\" GROUP BY YEAR;"},{"data":"Question: return me the number of citations of \" Making database systems usable \" before 2010 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t3 JOIN cite AS t1 ON t3.pid  =  t1.cited JOIN publication AS t2 ON t2.pid  =  t1.citing WHERE t3.title  =  \"Making database systems usable\" AND t2.year  <  2010;"},{"data":"Question: return me the number of papers by \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\";"},{"data":"Question: return me the number of papers on VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";"},{"data":"Question: return me the number of papers on PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";"},{"data":"Question: return me the number of papers after 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT title ) FROM publication WHERE YEAR  >  2000;"},{"data":"Question: return me the number of papers on PVLDB after 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000;"},{"data":"Question: return me the number of papers on VLDB conference after 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000;"},{"data":"Question: return me the number of papers by \" H. V. Jagadish \" on PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\";"},{"data":"Question: return me the number of papers by \" H. V. Jagadish \" on VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\";"},{"data":"Question: return me the number of papers by \" H. V. Jagadish \" after 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.year  >  2000;"},{"data":"Question: return me the number of papers by \" H. V. Jagadish \" on PVLDB after 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\" AND t4.year  >  2000;"},{"data":"Question: return me the number of papers by \" H. V. Jagadish \" on VLDB conference after 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\" AND t4.year  >  2000;"},{"data":"Question: return me the number of keywords .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT keyword ) FROM keyword;"},{"data":"Question: return me the number of keywords in Databases area .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.keyword ) FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did  =  t2.did JOIN keyword AS t1 ON t1.kid  =  t2.kid WHERE t3.name  =  \"Databases\";"},{"data":"Question: return me the number of papers which contain the keyword \" Natural Language \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t3.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"Natural Language\";"},{"data":"Question: return me the number of the keywords of \" Making database systems usable \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t3.pid WHERE t2.title  =  \"Making database systems usable\";"},{"data":"Question: return me the number of the keywords related to \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\";"},{"data":"Question: return me the number of keywords in VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\";"},{"data":"Question: return me the number of keywords in PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\";"},{"data":"Question: return me the number of keywords in the papers of \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.keyword ) FROM organization AS t6 JOIN author AS t2 ON t6.oid  =  t2.oid JOIN writes AS t4 ON t4.aid  =  t2.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN publication_keyword AS t3 ON t5.pid  =  t3.pid JOIN keyword AS t1 ON t3.kid  =  t1.kid WHERE t6.name  =  \"University of Michigan\";"},{"data":"Question: return me the number of the papers of \" H. V. Jagadish \" containing keyword \" User Study \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t5.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t5 ON t5.pid  =  t3.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.keyword  =  \"User Study\";"},{"data":"Question: return me the number of papers in PVLDB containing keyword \" Keyword search \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t2.pid JOIN journal AS t3 ON t4.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t1.keyword  =  \"Keyword search\";"},{"data":"Question: return me the number of papers in VLDB conference containing keyword \" Information Retrieval \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t3.pid JOIN conference AS t2 ON t4.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t1.keyword  =  \"Information Retrieval\";"},{"data":"Question: return me the number of authors who have papers containing keyword \" Relational Database \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.name ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\";"},{"data":"Question: return me the total citations of the papers containing keyword \" Natural Language \"\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT SUM ( t3.citation_num ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"Natural Language\";"},{"data":"Question: return me the number of the organizations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT name ) FROM organization;"},{"data":"Question: return me the number of the organizations in \" North America \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT name ) FROM organization WHERE continent  =  \"North America\";"},{"data":"Question: return me the number of organizations in Databases area .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\";"},{"data":"Question: return me the number of organizations in Databases area located in \" North America \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.continent  =  \"North America\";"},{"data":"Question: return me the number of papers in \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\";"},{"data":"Question: return me the number of papers in \" University of Michigan \" in Databases area .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t4.title ) FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN domain_publication AS t2 ON t3.did  =  t2.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN publication AS t4 ON t4.pid  =  t2.pid WHERE t3.name  =  \"Databases\" AND t5.name  =  \"University of Michigan\";"},{"data":"Question: return me the number of papers after 2000 in \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" AND t4.year  >  2000;"},{"data":"Question: return me the number of papers in VLDB conference in \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t3 JOIN author AS t1 ON t3.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN conference AS t2 ON t5.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t3.name  =  \"University of Michigan\";"},{"data":"Question: return me the number of papers in PVLDB in \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\";"},{"data":"Question: return me the number of papers in PVLDB after 2000 in \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\" AND t5.year  >  2000;"},{"data":"Question: return me the total citations of the papers in \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT SUM ( t4.citation_num ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\";"},{"data":"Question: return me the number of researchers in \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t2.name  =  \"University of Michigan\";"},{"data":"Question: return me the number of researchers in Databases area in \" University of Michigan \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.name  =  \"University of Michigan\";"},{"data":"Question: return me the number of authors who have papers in PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\";"},{"data":"Question: return me the number of authors who have papers in the VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\";"},{"data":"Question: return me the number of papers published on PVLDB before 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  <  2000;"},{"data":"Question: return me the number of papers published in the VLDB conference before 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  <  2000;"},{"data":"Question: return me the total citations of all the papers in PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";"},{"data":"Question: return me the citations of each paper in PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.citation_num FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";"},{"data":"Question: return me the total citations of papers in PVLDB in 2005 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  =  2005;"},{"data":"Question: return me the total citations of papers in PVLDB before 2005 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  <  2005;"},{"data":"Question: return me the total citations of papers in PVLDB in each year .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.year  ,  SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" GROUP BY t2.year;"},{"data":"Question: return me the number of papers published in PVLDB in each year .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title )  ,  t2.year FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" GROUP BY t2.year;"},{"data":"Question: return me the total citations of all the papers in the VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";"},{"data":"Question: return me the citations of each paper in the VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.citation_num FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";"},{"data":"Question: return me the total citations of papers in the VLDB conference in 2005 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  =  2005;"},{"data":"Question: return me the total citations of papers in the VLDB conference before 2005 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  <  2005;"},{"data":"Question: return me the total citations of papers in the VLDB conference in each year .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.year  ,  SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" GROUP BY t2.year;"},{"data":"Question: return me the number of papers published in the VLDB conference in each year .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title )  ,  t2.year FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" GROUP BY t2.year;"},{"data":"Question: return me the authors who have cooperated both with \" H. V. Jagadish \" and \" Divesh Srivastava \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.name  =  \"Divesh Srivastava\";"},{"data":"Question: return me the authors who have cooperated with \" H. V. Jagadish \" after 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t5.year  >  2000;"},{"data":"Question: return me the papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\";"},{"data":"Question: return me the papers written by \" H. V. Jagadish \" and \" Yunyao Li \" after 2005 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Yunyao Li\" AND t5.year  >  2005;"},{"data":"Question: return me the papers written by \" H. V. Jagadish \" and \" Yunyao Li \" on PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid  =  t4.jid JOIN writes AS t3 ON t3.pid  =  t6.pid JOIN writes AS t5 ON t5.pid  =  t6.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Yunyao Li\" AND t4.name  =  \"PVLDB\";"},{"data":"Question: return me the papers written by \" H. V. Jagadish \" and \" Yunyao Li \" on PVLDB after 2005 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid  =  t4.jid JOIN writes AS t3 ON t3.pid  =  t6.pid JOIN writes AS t5 ON t5.pid  =  t6.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Yunyao Li\" AND t4.name  =  \"PVLDB\" AND t6.year  >  2005;"},{"data":"Question: return me the authors who have cooperated with \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"},{"data":"Question: return me the papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" before 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\" AND t5.year  <  2000;"},{"data":"Question: return me the authors who have cited the papers by \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"},{"data":"Question: return me the number of papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\";"},{"data":"Question: return me the number of papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" before 2000 .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\" AND t5.year  <  2000;"},{"data":"Question: return me the number of papers written by \" H. V. Jagadish \" , \" Yunyao Li \" , and \" Cong Yu \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t7.title ) FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t2.name  =  \"Cong Yu\" AND t1.name  =  \"H. V. Jagadish\" AND t3.name  =  \"Yunyao Li\";"},{"data":"Question: return me the number of authors who have cooperated with \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.name ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"},{"data":"Question: return me the number of authors who have cited the papers by \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";"},{"data":"Question: return me the papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" with more than 200 citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\" AND t5.citation_num  >  200;"},{"data":"Question: return me the author who has the most number of papers containing keyword \" Relational Database \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;"},{"data":"Question: return me the conference that has the most number of papers containing keyword \" Relational Database \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;"},{"data":"Question: return me the conference, which has the most number of papers containing keyword \" Relational Database \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;"},{"data":"Question: return me the journal that has the most number of papers containing keyword \" Relational Database \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;"},{"data":"Question: return me the journal, which has the most number of papers containing keyword \" Relational Database \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;"},{"data":"Question: return me the keyword, which have been contained by the most number of papers in VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;"},{"data":"Question: return me the keyword, which have been contained by the most number of papers in PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;"},{"data":"Question: return me the keyword, which have been contained by the most number of papers by \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;"},{"data":"Question: return me the author in the \" University of Michigan \" whose papers have the most total citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" GROUP BY t1.name ORDER BY SUM ( t4.citation_num ) DESC LIMIT 1;"},{"data":"Question: return me the author in the \" University of Michigan \" whose papers in Databases area have the most total citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM DOMAIN AS t4 JOIN domain_publication AS t2 ON t4.did  =  t2.did JOIN publication AS t5 ON t5.pid  =  t2.pid JOIN writes AS t3 ON t3.pid  =  t5.pid JOIN author AS t1 ON t3.aid  =  t1.aid JOIN organization AS t6 ON t6.oid  =  t1.oid WHERE t4.name  =  \"Databases\" AND t6.name  =  \"University of Michigan\" GROUP BY t1.name ORDER BY SUM ( t5.citation_num ) DESC LIMIT 1;"},{"data":"Question: return me the papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" with the most number of citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"Divesh Srivastava\" AND t1.name  =  \"H. V. Jagadish\" ORDER BY t5.citation_num DESC LIMIT 1;"},{"data":"Question: return me the conferences, which have more than 10 papers by \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title )  >  10;"},{"data":"Question: return me the conference, which have the most number of papers by \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;"},{"data":"Question: return me the journals, which have more than 10 papers by \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title )  >  10;"},{"data":"Question: return me the journal, which have the most number of papers by \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;"},{"data":"Question: return me the paper with the most citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT title FROM publication ORDER BY citation_num DESC LIMIT 1;"},{"data":"Question: return me the paper in Databases area with the most citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" ORDER BY t3.citation_num DESC LIMIT 1;"},{"data":"Question: return me the paper in PVLDB with the most citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" ORDER BY t2.citation_num DESC LIMIT 1;"},{"data":"Question: return me the paper in VLDB conference with the most citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" ORDER BY t2.citation_num DESC LIMIT 1;"},{"data":"Question: return me the paper by \" H. V. Jagadish \" with the most citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" ORDER BY t3.citation_num DESC LIMIT 1;"},{"data":"Question: return me the paper after 2000 with the most citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT title FROM publication WHERE YEAR  >  2000 ORDER BY citation_num DESC LIMIT 1;"},{"data":"Question: return me the paper after 2000 in Databases area with the most citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" AND t3.year  >  2000 ORDER BY t3.citation_num DESC LIMIT 1;"},{"data":"Question: return me the paper after 2000 in PVLDB with the most citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000 ORDER BY t2.citation_num DESC LIMIT 1;"},{"data":"Question: return me the paper after 2000 in VLDB conference with the most citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000 ORDER BY t2.citation_num DESC LIMIT 1;"},{"data":"Question: return me the authors who have more than 10 papers in PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title )  >  10;"},{"data":"Question: return me the authors who have the most number of papers in PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;"},{"data":"Question: return me the authors who have more than 10 papers containing keyword \" Relational Database \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title )  >  10;"},{"data":"Question: return me the conferences, which have more than 60 papers containing keyword \" Relational Database \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title )  >  60;"},{"data":"Question: return me the journals, which have more than 60 papers containing keyword \" Relational Database \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t3.name HAVING COUNT ( DISTINCT t2.title )  >  60;"},{"data":"Question: return me the keywords, which have been contained by more than 100 papers in VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title )  >  100;"},{"data":"Question: return me the keywords, which have been contained by more than 100 papers in PVLDB .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t2.title )  >  100;"},{"data":"Question: return me the keywords, which have been contained by more than 10 papers of \" H. V. Jagadish \" .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title )  >  10;"},{"data":"Question: return me the authors who have more than 10 papers in the VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title )  >  10;"},{"data":"Question: return me the author who has the most number of papers in the VLDB conference .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;"},{"data":"Question: return me the author in the \" University of Michigan \" whose papers have more than 5000 total citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000;"},{"data":"Question: return me the author in the \" University of Michigan \" in Databases area whose papers have more than 5000 total citations .\nSchema: 'author' [ Primary Key: 'aid' int, 'homepage' text, 'name' text, 'oid' int];\n'conference' [ Primary Key: 'cid' int, 'homepage' text, 'name' text];\n'domain' [ Primary Key: 'did' int, 'name' text];\n'domain_author' [ 'aid' int, Primary Key: 'did' int, Foreign Key: 'aid' int from 'domain_author' 'aid', Foreign Key: 'did' int from 'domain_author' 'did'];\n'domain_conference' [ 'cid' int, Primary Key: 'did' int, Foreign Key: 'cid' int from 'domain_conference' 'cid', Foreign Key: 'did' int from 'domain_conference' 'did'];\n'journal' [ 'homepage' text, Primary Key: 'jid' int, 'name' text];\n'domain_journal' [ Primary Key: 'did' int, 'jid' int, Foreign Key: 'did' int from 'domain_journal' 'did', Foreign Key: 'jid' int from 'domain_journal' 'jid'];\n'keyword' [ 'keyword' text, Primary Key: 'kid' int];\n'domain_keyword' [ Primary Key: 'did' int, 'kid' int, Foreign Key: 'did' int from 'domain_keyword' 'did', Foreign Key: 'kid' int from 'domain_keyword' 'kid'];\n'publication' [ 'abstract' text, 'cid' text, 'citation_num' int, 'jid' int, Primary Key: 'pid' int, 'reference_num' int, 'title' text, 'year' int, Foreign Key: 'cid' text from 'publication' 'cid', Foreign Key: 'jid' int from 'publication' 'jid'];\n'domain_publication' [ Primary Key: 'did' int, 'pid' int, Foreign Key: 'did' int from 'domain_publication' 'did', Foreign Key: 'pid' int from 'domain_publication' 'pid'];\n'organization' [ 'continent' text, 'homepage' text, 'name' text, Primary Key: 'oid' int];\n'publication_keyword' [ 'pid' int, Primary Key: 'kid' int, Foreign Key: 'pid' int from 'publication_keyword' 'pid', Foreign Key: 'kid' int from 'publication_keyword' 'kid'];\n'writes' [ Primary Key: 'aid' int, 'pid' int, Foreign Key: 'aid' int from 'writes' 'aid', Foreign Key: 'pid' int from 'writes' 'pid'];\n'cite' [ 'cited' int, 'citing' int, Foreign Key: 'cited' int from 'cite' 'cited', Foreign Key: 'citing' int from 'cite' 'citing'];\n\nAnswer: SELECT t1.name FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN writes AS t2 ON t2.aid  =  t1.aid JOIN publication AS t4 ON t2.pid  =  t4.pid WHERE t3.name  =  \"Databases\" AND t5.name  =  \"University of Michigan\" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000;"},{"data":"Question: What year is the movie \" The Imitation Game \" from ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT release_year FROM movie WHERE title  =  \"The Imitation Game\";"},{"data":"Question: What year was the movie \" The Imitation Game \" produced\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT release_year FROM movie WHERE title  =  \"The Imitation Game\";"},{"data":"Question: What year was \" Benedict Cumberbatch \" born ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT birth_year FROM actor WHERE name  =  \"Benedict Cumberbatch\";"},{"data":"Question: In what year was \" Benedict Cumberbatch \" born\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT birth_year FROM actor WHERE name  =  \"Benedict Cumberbatch\";"},{"data":"Question: What is the nationality of the actress \" Christoph Waltz \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT nationality FROM actor WHERE name  =  \"Christoph Waltz\";"},{"data":"Question: What is the nationality of the actor \" Christoph Waltz \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT nationality FROM actor WHERE name  =  \"Christoph Waltz\";"},{"data":"Question: Find all movies produced in 2015\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT title FROM movie WHERE release_year  =  2015;"},{"data":"Question: Find all actors born in \" Tehran \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT name FROM actor WHERE birth_city  =  \"Tehran\";"},{"data":"Question: Find all actors born in Tehran\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT name FROM actor WHERE birth_city  =  \"Tehran\";"},{"data":"Question: Which actors were born in Tehran\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT name FROM actor WHERE birth_city  =  \"Tehran\";"},{"data":"Question: Find all actors who are from Afghanistan\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT name FROM actor WHERE nationality  =  \"Afghanistan\";"},{"data":"Question: Find all actors from Afghanistan\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT name FROM actor WHERE nationality  =  \"Afghanistan\";"},{"data":"Question: Give me the name of all the actors from Afghanistan\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT name FROM actor WHERE nationality  =  \"Afghanistan\";"},{"data":"Question: Find all actors who were born in 1984\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT name FROM actor WHERE birth_year  =  1984;"},{"data":"Question: When was \" Kevin Spacey \" born ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT birth_year FROM actor WHERE name  =  \"actor_name0\";"},{"data":"Question: In what year was \" Kevin Spacey \" born ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT birth_year FROM actor WHERE name  =  \"actor_name0\";"},{"data":"Question: Where is the birth place of \" Kevin Spacey \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT birth_city FROM director WHERE name  =  \"director_name0\";"},{"data":"Question: In what city was \" Kevin Spacey \" born ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT birth_city FROM director WHERE name  =  \"director_name0\";"},{"data":"Question: What is the nationality of \" Kevin Spacey \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT nationality FROM director WHERE name  =  \"director_name0\";"},{"data":"Question: How much was the budget of \" Finding Nemo \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT budget FROM movie WHERE title  =  \"Finding Nemo\";"},{"data":"Question: Find all movies directed by \" Steven Spielberg \" after 2006\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Steven Spielberg\" AND t3.release_year  >  2006;"},{"data":"Question: Who is the director of the movie \" James Bond \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"James Bond\";"},{"data":"Question: Who directed the movie \" James Bond \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"James Bond\";"},{"data":"Question: List \" James Bond \" directors\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"James Bond\";"},{"data":"Question: Find the actor who played \" Alan Turing \" in the movie \" The Imitation Game \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";"},{"data":"Question: Who acted \" Alan Turing \" in the movie \" The Imitation Game \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";"},{"data":"Question: Who was the actor that played \" Alan Turing \" in the movie \" The Imitation Game \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";"},{"data":"Question: Who acts as \" Alan Turing \" in the movie \" The Imitation Game \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";"},{"data":"Question: Who is the actor playing \" Alan Turing \" in \" The Imitation Game \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";"},{"data":"Question: What is the genre of the movie \" Jurassic Park \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.genre FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"Jurassic Park\";"},{"data":"Question: Who was the director of the movie Joy from 2015 ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.release_year  =  2015 AND t3.title  =  \"Joy\";"},{"data":"Question: Find all movies written by \" Matt Damon \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.title FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t2.name  =  \"Matt Damon\";"},{"data":"Question: Find all movies written and produced by \" Woody Allen \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.title FROM movie AS t2 JOIN made_by AS t3 ON t2.mid  =  t3.msid JOIN producer AS t1 ON t1.pid  =  t3.pid JOIN written_by AS t5 ON t5.msid  =  t2.mid JOIN writer AS t4 ON t5.wid  =  t4.wid WHERE t1.name  =  \"Woody Allen\" AND t4.name  =  \"Woody Allen\";"},{"data":"Question: Find all movies featuring \" Robin Wright \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Robin Wright\";"},{"data":"Question: What are all the movies featuring \" Robin Wright \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Robin Wright\";"},{"data":"Question: Find all movies in which \" Robin Wright \" appears\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Robin Wright\";"},{"data":"Question: What was the budget of the movie Juno from 2007 ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT budget FROM movie WHERE release_year  =  2007 AND title  =  \"Juno\";"},{"data":"Question: Find all Sci-Fi produced in year 2010\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.genre  =  \"Sci-Fi\" AND t3.release_year  =  2010;"},{"data":"Question: List all the Sci-Fi movies which released in 2010\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.genre  =  \"Sci-Fi\" AND t3.release_year  =  2010;"},{"data":"Question: Find all actors born in \" Austin \" after 1980\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND birth_year  >  1980;"},{"data":"Question: Who are the actors born in \" Austin \" after 1980 ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND birth_year  >  1980;"},{"data":"Question: Find all actors from Austin born after 1980\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND birth_year  >  1980;"},{"data":"Question: Find all movies by directors born in \" Los Angeles \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.birth_city  =  \"Los Angeles\";"},{"data":"Question: Find all actors who were born in \" New York City \" in 1984\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT name FROM actor WHERE birth_city  =  \"New York City\" AND birth_year  =  1984;"},{"data":"Question: Find all movies about nuclear weapons\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t3.title FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"nuclear weapons\";"},{"data":"Question: What are the movies related to nuclear weapons\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t3.title FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"nuclear weapons\";"},{"data":"Question: Which movies did \" Alfred Hitchcock \" direct ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Alfred Hitchcock\";"},{"data":"Question: Find all movies directed by \" Asghar Farhadi \" and featuring \" Taraneh Alidoosti \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";"},{"data":"Question: What are all the movies directed by \" Asghar Farhadi \" featuring \" Taraneh Alidoosti \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";"},{"data":"Question: How many movies are there that are directed by \" Asghar Farhadi \" and featuring \" Taraneh Alidoosti \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";"},{"data":"Question: List all the movies directed by \" Asghar Farhadi \" in which \" Taraneh Alidoosti \" played\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";"},{"data":"Question: What are all the tv series created by \" Shonda Rhimes \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.title FROM producer AS t1 JOIN made_by AS t3 ON t1.pid  =  t3.pid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"Shonda Rhimes\";"},{"data":"Question: Who acts \" Olivia Pope \" in the series Scandal ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.name FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t3.role  =  \"Olivia Pope\" AND t2.title  =  \"Scandal\";"},{"data":"Question: Who is the writer of the movie \" The Truman Show \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.name FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t1.title  =  \"The Truman Show\";"},{"data":"Question: Who is the writer of \" The Truman Show \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.name FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t1.title  =  \"The Truman Show\";"},{"data":"Question: What are the series featuring \" Scott Foley \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"Scott Foley\";"},{"data":"Question: What are the series in which \" Scott Foley \" is an actor ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"Scott Foley\";"},{"data":"Question: Find the directors of all movies featuring \" Kate Winslet \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t3.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Kate Winslet\";"},{"data":"Question: Find the producers of all movies in which \" Kate Winslet \" is an actor\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.name FROM CAST AS t3 JOIN actor AS t2 ON t3.aid  =  t2.aid JOIN movie AS t5 ON t5.mid  =  t3.msid JOIN made_by AS t4 ON t5.mid  =  t4.msid JOIN producer AS t1 ON t1.pid  =  t4.pid WHERE t2.name  =  \"Kate Winslet\";"},{"data":"Question: Who is the director of the tv series \" House of Cards \" from 2013 ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN tv_series AS t3 ON t3.sid  =  t1.msid WHERE t3.release_year  =  2013 AND t3.title  =  \"House of Cards\";"},{"data":"Question: Find all the female actors from Austin\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND gender  =  \"female\";"},{"data":"Question: Find all actors from Italy born after 1980\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT name FROM actor WHERE birth_year  >  1980 AND nationality  =  \"Italy\";"},{"data":"Question: Find all the female actors born in \" New York City \" after 1980\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT name FROM actor WHERE birth_city  =  \"New York City\" AND birth_year  >  1980 AND gender  =  \"female\";"},{"data":"Question: Find all the female actors in the movie \" Saving Private Ryan \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.gender  =  \"female\" AND t3.title  =  \"Saving Private Ryan\";"},{"data":"Question: Find all the directors who are from Afghanistan\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT name FROM director WHERE nationality  =  \"Afghanistan\";"},{"data":"Question: Find the actors who played in the movie \" Camp X-Ray \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Camp X-Ray\";"},{"data":"Question: Find all actors from Canada who acted in \" James Bond \" movies\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.nationality  =  \"Canada\" AND t3.title  =  \"James Bond\";"},{"data":"Question: find all films in which \" Rowan Atkinson \" acted as \" Mr. Bean \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Rowan Atkinson\" AND t3.role  =  \"Mr. Bean\";"},{"data":"Question: where is the director of \" The Past \" from\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.birth_city FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"The Past\";"},{"data":"Question: who acted the role of \" Mr. Bean \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid WHERE t2.role  =  \"Mr. Bean\";"},{"data":"Question: what are the genres of movies directed by \" Asghar Farhadi \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t3.genre FROM director AS t5 JOIN directed_by AS t2 ON t5.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN classification AS t1 ON t4.mid  =  t1.msid JOIN genre AS t3 ON t3.gid  =  t1.gid WHERE t5.name  =  \"Asghar Farhadi\";"},{"data":"Question: Which movie had the character \" Daffy Duck \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.title FROM movie AS t1 JOIN CAST AS t2 ON t1.mid  =  t2.msid WHERE t2.role  =  \"Daffy Duck\";"},{"data":"Question: What are the major roles in the movie \" Daddy Long Legs \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.role FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Daddy Long Legs\";"},{"data":"Question: List all the directors of movies about nuclear weapons\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t3.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN tags AS t5 ON t5.msid  =  t4.mid JOIN keyword AS t1 ON t5.kid  =  t1.id WHERE t1.keyword  =  \"nuclear weapons\";"},{"data":"Question: What is the number of movies in which \" Jennifer Aniston \" acted after 2010 ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Jennifer Aniston\" AND t2.release_year  >  2010;"},{"data":"Question: What is the number of actors in the movie \" Saving Private Ryan \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Saving Private Ryan\";"},{"data":"Question: How many actors are in the movie \" Saving Private Ryan \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Saving Private Ryan\";"},{"data":"Question: How many movies did \" Steven Spielberg \" direct ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Steven Spielberg\";"},{"data":"Question: How many movies were produced in the year 2013 ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;"},{"data":"Question: What is the number of movies produced in 2013 ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;"},{"data":"Question: What is the number of movies directed by \" Woody Allen \" per year ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t3.title  )  ,  t3.release_year FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Woody Allen\" GROUP BY t3.release_year;"},{"data":"Question: How many movies did \" Shahab Hosseini \" act in ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";"},{"data":"Question: What is the number of movies in which \" Shahab Hosseini \" acted ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";"},{"data":"Question: What is the number of movies featuring \" Shahab Hosseini \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";"},{"data":"Question: How many movies did \" Shahab Hosseini \" act in\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";"},{"data":"Question: How many actors were born in \" Los Angeles \" after 2000 ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT name  ) FROM actor WHERE birth_city  =  \"Los Angeles\" AND birth_year  >  2000;"},{"data":"Question: How many movies did \" Humphrey Bogart \" act in before 1942 ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Humphrey Bogart\" AND t2.release_year  <  1942;"},{"data":"Question: What is the number of movies that \" Brad Pitt \" acts in per year ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t2.title  )  ,  t2.release_year FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Brad Pitt\" GROUP BY t2.release_year;"},{"data":"Question: How many movies about Iraq war were produced in 2015 ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t3.title  ) FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"Iraq war\" AND t3.release_year  =  2015;"},{"data":"Question: How many movies about Persians were released after 1990 ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t3.title  ) FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"Persians\" AND t3.release_year  >  1990;"},{"data":"Question: How many movies did \" Quentin Tarantino \" direct after 2010 ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Quentin Tarantino\" AND t3.release_year  >  2010;"},{"data":"Question: How many movies did \" Quentin Tarantino \" direct before 2010 ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Quentin Tarantino\" AND t3.release_year  <  2010;"},{"data":"Question: How many movies did \" Quentin Tarantino \" direct before 2002 and after 2010 ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t4.title  ) FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN made_by AS t5 ON t4.mid  =  t5.msid JOIN producer AS t1 ON t1.pid  =  t5.pid WHERE t3.name  =  \"Quentin Tarantino\" AND t4.release_year  <  2010 AND t4.release_year  >  2002;"},{"data":"Question: How many female actors were born in \" New York City \" after 1980 ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT name  ) FROM actor WHERE birth_city  =  \"New York City\" AND birth_year  >  1980 AND gender  =  \"female\";"},{"data":"Question: find the number of actors from Iran who played in \" Jim Jarmusch \" movies\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.nationality  =  \"Iran\" AND t3.name  =  \"Jim Jarmusch\";"},{"data":"Question: How many actors from China have acted in \" Rush Hour 3 \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.nationality  =  \"China\" AND t3.title  =  \"Rush Hour 3\";"},{"data":"Question: Find all movies that star both \" Woody Strode \" and \" Jason Robards \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";"},{"data":"Question: Find all movies featuring \" Woody Strode \" and \" Jason Robards \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";"},{"data":"Question: Find all movies featuring both \" Woody Strode \" and \" Jason Robards \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";"},{"data":"Question: Find all movies featuring \" Jason Robards \" and \" Woody Strode \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";"},{"data":"Question: Find all actors who acted in the same movie as \" Tom Hanks \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN CAST AS t3 ON t5.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"Tom Hanks\";"},{"data":"Question: What movies have the same director as the movie \" Revolutionary Road \" ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t3.title FROM director AS t5 JOIN directed_by AS t2 ON t5.did  =  t2.did JOIN directed_by AS t1 ON t5.did  =  t1.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t4.title  =  \"Revolutionary Road\";"},{"data":"Question: Find the movie which is classified in the most number of genres\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid GROUP BY t3.title ORDER BY COUNT ( DISTINCT t2.genre  ) DESC LIMIT 1;"},{"data":"Question: which movie has the most number of actors from China ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.nationality  =  \"China\" GROUP BY t2.title ORDER BY COUNT ( DISTINCT t1.name  ) DESC LIMIT 1;"},{"data":"Question: Find the actors who played in the latest movie by \" Quentin Tarantino \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t3.name  =  \"Quentin Tarantino\" ORDER BY t5.release_year DESC LIMIT 1;"},{"data":"Question: Find the name and budget of the latest movie by \" Quentin Tarantino \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t3.budget  ,  t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Quentin Tarantino\" ORDER BY t3.release_year DESC LIMIT 1;"},{"data":"Question: What is the latest movie by \" Jim Jarmusch \"\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Jim Jarmusch\" ORDER BY t3.release_year DESC LIMIT 1;"},{"data":"Question: Which producer has worked with the most number of directors ?\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN made_by AS t5 ON t4.mid  =  t5.msid JOIN producer AS t1 ON t1.pid  =  t5.pid GROUP BY t1.name ORDER BY COUNT ( DISTINCT t3.name  ) DESC LIMIT 1;"},{"data":"Question: Find the latest movie which \" Gabriele Ferzetti \" acted in\nSchema: 'actor' [ Primary Key: 'aid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'copyright' [ Primary Key: 'id' int, 'msid' int, 'cid' int];\n'cast' [ Primary Key: 'id' int, 'msid' int, 'aid' int, 'role' int, Foreign Key: 'msid' int from 'cast' 'msid', Foreign Key: 'aid' int from 'cast' 'aid'];\n'genre' [ Primary Key: 'gid' int, 'genre' text];\n'classification' [ Primary Key: 'id' int, 'msid' int, 'gid' int, Foreign Key: 'msid' int from 'classification' 'msid', Foreign Key: 'gid' int from 'classification' 'gid'];\n'company' [ Primary Key: 'id' int, 'name' text, 'country_code' text];\n'director' [ Primary Key: 'did' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'producer' [ Primary Key: 'pid' int, 'gender' text, 'name' text, 'nationality' text, 'birth_city' text, 'birth_year' int];\n'directed_by' [ Primary Key: 'id' int, 'msid' int, 'did' int, Foreign Key: 'msid' int from 'directed_by' 'msid', Foreign Key: 'did' int from 'directed_by' 'did'];\n'keyword' [ Primary Key: 'id' int, 'keyword' text];\n'made_by' [ Primary Key: 'id' int, 'msid' int, 'pid' int, Foreign Key: 'msid' int from 'made_by' 'msid', Foreign Key: 'pid' int from 'made_by' 'pid'];\n'movie' [ Primary Key: 'mid' int, 'title' text, 'release_year' int, 'title_aka' text, 'budget' text];\n'tags' [ Primary Key: 'id' int, 'msid' int, 'kid' int, Foreign Key: 'msid' int from 'tags' 'msid'];\n'tv_series' [ Primary Key: 'sid' int, 'title' text, 'release_year' int, 'num_of_seasons' int, 'num_of_episodes' int, 'title_aka' text, 'budget' text];\n'writer' [ Primary Key: 'wid' int, 'gender' text, 'name' int, 'nationality' int, 'num_of_episodes' int, 'birth_city' text, 'birth_year' int];\n'written_by' [ 'id' int, 'msid' int, 'wid' int, Foreign Key: 'msid' int from 'written_by' 'msid', Foreign Key: 'wid' int from 'written_by' 'wid'];\n\nAnswer: SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.name  =  \"Gabriele Ferzetti\" ORDER BY t3.release_year DESC LIMIT 1;"},{"data":"Question: how many buttercup kitchen are there in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"buttercup kitchen\";"},{"data":"Question: how many chinese restaurants are there in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";"},{"data":"Question: how many places for chinese food are there in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";"},{"data":"Question: how many chinese places are there in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";"},{"data":"Question: how many places for chinese are there in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";"},{"data":"Question: how many jamerican cuisine are there in santa cruz county ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  \"santa cruz county\" AND t1.name  =  \"jamerican cuisine\";"},{"data":"Question: where is jamerican cuisine ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.name  =  \"jamerican cuisine\";"},{"data":"Question: what is the best french restaurant in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );"},{"data":"Question: What is the best french in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );"},{"data":"Question: What is the best place in san francisco for french food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );"},{"data":"Question: Give me the best place in san francisco for french food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );"},{"data":"Question: Where is the best french in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );"},{"data":"Question: Give me the best french in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );"},{"data":"Question: Where is the best french restaurant in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );"},{"data":"Question: Give me the best restaurant in san francisco for french food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );"},{"data":"Question: Give me the best french restaurant in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );"},{"data":"Question: What is the best restaurant in san francisco for french food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );"},{"data":"Question: Where is the best restaurant in san francisco for french food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );"},{"data":"Question: where is denny in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.name  =  \"denny\";"},{"data":"Question: what are some good restaurants on bethel island rd in bethel island ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;"},{"data":"Question: give me some good restaurants on bethel island rd in bethel island ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;"},{"data":"Question: give me a good restaurant on bethel island rd in bethel island ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;"},{"data":"Question: what is a good restaurant on bethel island rd in bethel island ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;"},{"data":"Question: where can we find a restaurant in alameda ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";"},{"data":"Question: give me a restaurant in alameda ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";"},{"data":"Question: where can we find some restaurants in alameda ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";"},{"data":"Question: where is a restaurant in alameda ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";"},{"data":"Question: give me some restaurants in alameda ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";"},{"data":"Question: give me some restaurants good for french food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.food_type  =  \"french\" AND t1.rating  >  2.5;"},{"data":"Question: where are some restaurants good for french food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.food_type  =  \"french\" AND t1.rating  >  2.5;"},{"data":"Question: how many places for french food are there in palo alto ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";"},{"data":"Question: how many french restaurants are there in palo alto ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";"},{"data":"Question: how many french restaurant are there in palo alto ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";"},{"data":"Question: how many places for french are there in palo alto ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";"},{"data":"Question: how many italian restaurants are in the yolo county ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  \"yolo county\" AND t1.food_type  =  \"italian\";"},{"data":"Question: where can i eat french food in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"french\";"},{"data":"Question: how many denny are there in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.name  =  \"denny\";"},{"data":"Question: give me a good restaurant in alameda ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;"},{"data":"Question: what are some good restaurants in alameda ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;"},{"data":"Question: what is a good restaurant in alameda ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;"},{"data":"Question: give me some good restaurants in alameda ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;"},{"data":"Question: where is a good restaurant on buchanan in san francisco for arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where are some good arabics on buchanan in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where is a good arabic restaurant on buchanan in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: what are some good places for arabic on buchanan in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me a good arabic on buchanan in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me some restaurants good for arabic food on buchanan in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me a good place on buchanan in san francisco for arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where is a good place on buchanan in san francisco for arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where can i eat arabic food on buchanan in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me some good places on buchanan in san francisco for arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where is a arabic restaurant on buchanan in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me a restaurant on buchanan in san francisco that serves good arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me a good restaurant on buchanan in san francisco for arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where is a restaurant on buchanan in san francisco that serves good arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me some good restaurants on buchanan in san francisco for arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me some good places for arabic on buchanan in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where can i eat some good arabic food on buchanan in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where is a good arabic on buchanan in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where are some restaurants good for arabic food on buchanan in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where are some good places for arabic on buchanan in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me a good arabic restaurant on buchanan in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me some good arabics on buchanan in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where can i eat french food in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"french\";"},{"data":"Question: give me some restaurants on bethel island rd in bethel island ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";"},{"data":"Question: give me a restaurant on bethel island rd in bethel island ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";"},{"data":"Question: where can we find a restaurant on bethel island rd in bethel island ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";"},{"data":"Question: where can we find some restaurants on bethel island rd in bethel island ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";"},{"data":"Question: where is the best restaurant in the bay area for american food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );"},{"data":"Question: where is the best restaurant in bay area for american food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );"},{"data":"Question: what is the best restaurant in bay area for american food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );"},{"data":"Question: what is the best american restaurant in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );"},{"data":"Question: where is the best american restaurant in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );"},{"data":"Question: what is the best american in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );"},{"data":"Question: give me the best restaurant in the bay area for american food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );"},{"data":"Question: give me the best restaurant in bay area for american food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );"},{"data":"Question: what is the best restaurant in the bay area for american food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );"},{"data":"Question: where is the best american in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );"},{"data":"Question: give me the best american in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );"},{"data":"Question: give me the best american restaurant in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );"},{"data":"Question: give me some restaurants good for french food in the yosemite and mono lake area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;"},{"data":"Question: what are some good places in the yosemite and mono lake area for french food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;"},{"data":"Question: give me a good restaurant in the yosemite and mono lake area for french food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;"},{"data":"Question: give me a good french restaurant in the yosemite and mono lake area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;"},{"data":"Question: where is a good place in the yosemite and mono lake area for french food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;"},{"data":"Question: where are some restaurants good for french food in the yosemite and mono lake area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;"},{"data":"Question: give me a good place in the yosemite and mono lake area for french food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;"},{"data":"Question: where is a good restaurant in the yosemite and mono lake area for french food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;"},{"data":"Question: what are some good restaurants in the yosemite and mono lake area for french food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;"},{"data":"Question: where is a good french restaurant in the yosemite and mono lake area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;"},{"data":"Question: where can i eat some good french food in the yosemite and mono lake area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;"},{"data":"Question: where are some restaurants good for arabic food in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: what are some good places in mountain view for arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where are some good arabic restaurants in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: show me a good arabic restaurant in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me a good arabic in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me a good arabic restaurant in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me a good place in mountain view for arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where are some good arabics in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where is a restaurant in mountain view that serves good arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: what are some good restaurants in mountain view for arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me some restaurants good for arabic food in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where can i eat some good arabic food in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me some good places for arabic in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where is a good arabic in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me a restaurant in mountain view that serves good arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me some good arabic restaurants in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where are some good places for arabic in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me some good arabics in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: give me a good restaurant in mountain view for arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where is a good arabic restaurant in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: what are some good places for arabic in mountain view ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where is a good restaurant in mountain view for arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where is a good place in mountain view for arabic food ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;"},{"data":"Question: where can i find a jamerican cuisine in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"jamerican cuisine\";"},{"data":"Question: where is jamerican cuisine in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"jamerican cuisine\";"},{"data":"Question: where is a jamerican cuisine in san francisco ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"jamerican cuisine\";"},{"data":"Question: where can we find some restaurants in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );"},{"data":"Question: give me some restaurants in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );"},{"data":"Question: give me a restaurant in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );"},{"data":"Question: where can i find a restaurant in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );"},{"data":"Question: give me a good restaurant in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;"},{"data":"Question: what are some good restaurants in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;"},{"data":"Question: give me some good restaurants in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;"},{"data":"Question: what is a good restaurant in the bay area ?\nSchema: 'GEOGRAPHIC' [ Primary Key: 'CITY_NAME' text, 'COUNTY' text, 'REGION' text];\n'RESTAURANT' [ Primary Key: 'ID' int, 'NAME' text, 'FOOD_TYPE' text, 'CITY_NAME' text, 'RATING' int, Foreign Key: 'CITY_NAME' text from 'RESTAURANT' 'CITY_NAME'];\n'LOCATION' [ Primary Key: 'RESTAURANT_ID' int, 'HOUSE_NUMBER' int, 'STREET_NAME' text, 'CITY_NAME' text, Foreign Key: 'CITY_NAME' text from 'LOCATION' 'CITY_NAME'];\n\nAnswer: SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;"}]