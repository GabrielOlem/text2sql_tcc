select count(*) from singer;
select count(*) from singer;
select t2.name,  t2.country,  t2.age from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id order by t1.age asc;
select name,  country,  age from singer;
select avg(age),  min(age),  max(age) from singer where country  =  'france';
select avg(age),  min(age),  max(age) from singer where country  =  'france';
select t2.name,  t2.release_year from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t1.age  =  (select min(age) from singer);
select t2.name,  t2.release_year from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t1.age  =   0;
select country from singer where age  >  20;
select country from singer where age  >  20;
select country,  count(*) from singer group by country;
select country,  count(*) from singer group by country;
select song_name from singer where age  >  (select avg(age) from singer);
select song_name from singer where age  >  (select avg(age) from singer);
select t2.location,  t2.name from stadium as t1 join stadium_in_concert as t2 on t1.stadium_id  =  t2.stadium_id where t1.capacity  >=  5000 and t1.capacity  <=  10000;
select location,  name from stadium where capacity  >=  5000 and capacity  <=  10000;
select max(highest),  avg(lowest) from stadium;
select avg(capacity),  max(capacity) from stadium;
select name,  avg(capacity) from stadium order by avg(attendance);
select name,  avg(capacity) from stadium order by avg(attendance) desc limit 1;
select count(*) from concert where year  =  2014 or year  =  2015;
select count(*) from concert where year  =  2014 or year  =  2015;
select t2.name,  count(*) from stadium as t1 join singer_in_concert as t2 on t1.stadium_id  =  t2.stadium_id group by t1.stadium_id;
select count(*) from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id;
select t2.name,  t2.capacity from stadium as t1 join singer_in_concert as t2 on t1.stadium_id  =  t2.stadium_id join concert as t3 on t1.concert_id  =  t3.concert_id where t3
select t2.name,  t2.capacity from stadium as t1 join singer_in_concert as t2 on t1.stadium_id  =  t2.stadium_id order by t1.year desc limit 1;
select year from concert group by year order by count(*) desc limit 1;
select year from concert order by count(*) desc limit 1;
select name from stadium where capacity  >  0;
select name from stadium where capacity  =  0;
select country from singer where age  >  40 intersect select country from singer where age  <  30;
select name from stadium where highest !=  2014;
select name from stadium where capacity !=  highest  except select name from stadium where capacity  =  highest;
select t1.concert_name,  t2.theme from concert as t1 join singer as t2 on t1.concert_id  =  t2.concert_id;
select t1.concert_name,  t2.theme,  count(*) from concert as t1 join singer as t2 on t1.concert_id  =  t2.concert_id group by t1.concert_id;
select t1.name,  count(*) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by t1.name;
select t1.name,  count(*) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by t1.name;
select t2.name from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id where t1.year  =  2014;
select name from singer where year  =  2014;
select t2.name,  t1.country from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t1.name like '%hey%';
select t2.name,  t1.country from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t1.name like "%hey%";
select t2.name,  t1.location from stadium as t1 join singer_in_concert as t2 on t1.stadium_id  =  t2.concert_id where t1.year  >=  2014 intersect select t2.name,  t1.location from
select name,  location from stadium where year  =  2014 intersect select stadium_id,  location from stadium where year  =  2015;
select count(*) from stadium where highest  =  (select max(capacity) from stadium);
select count(*) from stadium where highest  =  max(capacity);
select count(*) from pets where weight  >  10;
select count(*) from pets where weight  >  10;
select t1.weight from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where t2.pettype  =  "dog" order by t2.petid asc limit 1;
select weight from pets where pet_age  =  (select min(pet_age) from pets);
select max(weight),  pet_type from pets group by pet_type;
select max(weight),  pet_type from pets group by pet_type;
select count(*) from student as t1 join pets as t2 on t1.stuid  =  t2.petid where t1.age  >  20;
select count(*) from student as t1 join pets as t2 on t1.stuid  =  t2.stuid where t1.age  >  20;
select count(*) from pets as t1 join student as t2 on t1.petid  =  t2.petid where t2.sex  =  'f';
select count(*) from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where t1.sex  =  'female' and t2.pettype  =  'dog';
select count(distinct pet_type) from pets;
select count(distinct pet_type) from pets;
select fname from student where pettype  =  'cat' or pettype  =  'dog';
select t1.fname from student as t1 join pets as t2 on t1.stuid  =  t2.petid where t2.pettype  =  "cat" intersect select t1.fname from student as t1 join pets as t2 on t1.stuid  = 
select fname from student where pettype  =  'cat' intersect select fname from student where pettype  =  'dog';
select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid in ( select petid from pets where pettype  =  "cat" intersect select petid from pets where pettype  =  "
select t1.major,  t1.age from student as t1 join pets as t2 on t1.stuid  =  t2.stuid where t2.petid !=  100;
select t1.major,  t1.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid !=  100;
select stuid from student except select t1.stuid from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where t2.pettype  =  'cat';
select stuid from student except select t1.stuid from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where pettype  =  'cat';
select fname,  age from student where pettype  =  'dog' and pet_age !=  4;
select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  4 except select t1.fname from student as t1 join has_pet as t2 on t1.stuid
select pet_type,  pet_weight from pets order by pet_age desc limit 1;
select pettype,  weight from pets where pet_age  =  0 order by pettype asc limit 1;
select petid,  weight from pets where age  >  1;
select t2.petid,  t2.weight from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid where t1.stuid  >  1;
select avg(pet_age),  max(pet_age) from pets group by pet_age;
select pet_age,  avg(pet_age),  max(pet_age) from pets group by pet_age;
select avg(weight),  pettype from pets group by pettype;
select avg(weight),  pet_type from pets group by pet_type;
select fname,  age from student where pet_id in (select petid from pets);
select distinct t1.fname,  t1.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  pets.petid;
select petid from pets where stuid  =  "smith";
select pet_id from pets where lname  =  "smith";
select count(*) from pets as t1 join student as t2 on t1.petid  =  t2.petid where t2.stuid in (select stuid from has_pet);
select count(*),  stuid from pets group by stuid;
select fname,  lname from student group by fname having count(*)  >  1;
select t1.fname,  t1.lname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid having count(*)  >  1;
select lname from student where pet_age  =  3 and pettype  =  'cat';
select lname from student where pet_age  =  3 and pettype  =  "cat";
select avg(t2.age) from student as t1 join pets as t2 on t1.stuid  =  t2.petid where t1.sex != 'm' and t1.major !=  'a';
select avg(t2.age) from student as t1 join pets as t2 on t1.stuid  =  t2.petid where t1.sex != 'm' and t1.stuid !=  'pets.stuid';
select count(*) from continents;
select count(*) from continents;
select t2.continent,  t1.continentname,  count(*) from continents as t1 join model_list as t2 on t1.continent  =  t2.continentid group by t1.continentname;
select t2.continent,  t1.countryname,  count(*) from continents as t1 join model_list as t2 on t1.continent  =  t2.continent group by t1.continent;
select count(*) from countries;
select count(*) from countries;
select t1.maker,  count(*) from model_list as t1 join car_makers as t2 on t1.maker  =  t2.maker group by t1.maker;
select t1.fullname,  count(*) from car_makers as t1 join model_list as t2 on t1.maker  =  t2.maker group by t1.maker;
select t1.model from car_names as t1 join model_list as t2 on t1.model  =  t2.model where t2.horsepower  =  min(t1.horsepower);
select t1.model from car_names as t1 join cars_data as t2 on t1.make  =  t2.make where t2.horsepower  < (select max(t3.horsepower) from car_names as t3 join cars_data as t4 on t3.
select t1.model from car_names as t1 join weights as t2 on t1.weight  =  t2.weight group by t1.model order by avg(t2.weight) desc limit 1;
select model from cars_data where weight  <  (select avg(weight) from cars_data);
select t2.maker from car_makers as t1 join cars_data as t2 on t1.make  =  t2.make intersect select t1.maker from car_makers as t1 join car_names as t2 on t1.make  =  t2.maker where t1.year
select t2.maker from car_makers as t1 join car_names as t2 on t1.make  =  t2.makeid where t1.year  =  1970;
select t1.maker,  t2.year from car_names as t1 join model_list as t2 on t1.maker  =  t2.maker where t2.continent  =  "EARTH" and t2.year  =  (select min(year) from model
select t1.maker,  t1.year from car_names as t1 join model_list as t2 on t1.model  =  t2.model where t2.year  =  (select min(year) from model_list);
select distinct model from car_names where year  >  1980;
select distinct model from car_names where year  >  1980;
select continent,  count(*) from continents group by continent;
select t1.continent,  count(*) from continents as t1 join model_list as t2 on t1.continent  =  t2.continent group by t1.continent;
select t2.country from countries as t1 join model_list as t2 on t1.continent  =  t2.continent group by t1.continent order by count(*) desc limit 1;
select t2.country from countries as t1 join model_list as t2 on t1.country  =  t2.continent order by count(*) desc limit 1;
select count(*),  make,  fullname from car_names group by make;
select count(*),  t1.maker,  t2.fullname from car_makers as t1 join model_list as t2 on t1.maker  =  t2.maker where t1.country  =  'usa' group by t1.maker;
select accelerate from car_names where make  =  "amc hornet sportabout";
select t1.accelerate from car_names as t1 join model_list as t2 on t1.model  =  t2.model where t2.maker  =  "amc hornet sportabout";
select count(*) from car_makers where fullname  =  "france";
select count(*) from car_makers where country  =  'france';
select count(*) from model_list where country  =  "usa";
select count(*) from model_list where country  =  'united states';
select avg(mpg) from cars where cylinders  =  4;
select avg(mpg) from cars_data where cylinders  =   4;
select t1.weight from car_names as t1 join cars_data as t2 on t1.make  =  t2.make where t2.year  =  1974 group by t1.make order by min(t2.weight) desc limit 1;
select min(t1.horsepower) from cars_data as t1 join model_list as t2 on t1.model  =  t2.model where t2.maker  =  "Dodge" and t1.year  =  1974;
select maker,  model from car_makers;
select maker,  model from car_makers;
select countryname,  count(*) from model_list group by countryname having count(*)  >=  1;
select t1.countryname,  t1.country from countries as t1 join model_list as t2 on t1.continent  =  t2.continent where t2.maker  >  0;
select count(*) from cars where horsepower  >  150;
select count(*) from cars where horsepower  >  150;
select avg(t1.weight) from (select t2.year,  t1.weight from cars_data as t1 join model_list as t2 on t1.model  =  t2.model where t2.continent  =  "world" and t2.year  =
select avg(weight),  year from cars_data group by year;
select country from car_makers where continent  =  'Europe' group by country having count(*)  >=  3;
select t2.country from countries as t1 join model_list as t2 on t1.continent  =  t2.continent where t1.continent  =  'Europe' and count(*)  >=  3;
select max(horsepower),  maker from car_names where cylinders  =  3;
select max(t1.horsepower) from car_names as t1 join model_list as t2 on t1.model  =  t2.model where t2.cylinders  =  3;
select t1.model from car_names as t1 join cars_data as t2 on t1.make  =  t2.make where t2.edispl  =  t2.mpg;
select t1.model from car_names as t1 join model_list as t2 on t1.model  =  t2.model where t2.mpg  =  max(t2.mpg);
select avg(horsepower) from cars where year  <  1980;
select avg(horsepower) from cars_data where year  <  1980;
select avg(edispl) from car_names where model  =  "volvo";
select avg(edispl) from cars_data where make  =  "volvo";
select max(accelerate) from (select t1.accelerate from cars_data as t1 join model_list as t2 on t1.model  =  t2.model where t2.number  =  4 group by t1.accelerate order by t1.acceler
select max(accelerate) from cars_data where cylinders !=  'v6';
select t1.model from car_names as t1 join model_list as t2 on t1.model  =  t2.model where t2.maker  =  (select max(t3.maker) from model_list as t3 join cars_data as t4 on t3.model  
select model from model_list group by model order by count(*) desc limit 1;
select count(*) from cars where cylinders  >  4;
select count(*) from cars where cylinders  >  4;
select count(*) from car_names where year  =  1980;
select count(*) from car_names where year  =  1980;
select count(*) from model_list as t1 join car_makers as t2 on t1.maker  =  t2.maker where t2.country  =  "american motor company";
select count(*) from model_list as t1 join car_makers as t2 on t1.maker  =  t2.maker where t2.country  =  'american motor company';
select t1.fullname,  t1.id from car_makers as t1 join model_list as t2 on t1.maker  =  t2.maker where t2.model count(*)  >  3;
select t1.maker,  t1.id from car_makers as t1 join model_list as t2 on t1.maker  =  t2.maker where count(*)  >  3;
select distinct model from car_names where maker  =  "general motors" intersect select distinct model from car_names where maker  =  "weight greater than 3500";
select distinct model from car_names where maker  =  "general motors" intersect select distinct model from car_names where weight  >  3500;
select t1.year from car_names as t1 join cars_data as t2 on t1.make  =  t2.make where t2.weight between 3000 and 4000;
select distinct year from car_names where weight  <  4000 intersect select distinct year from car_names where weight  >  3000;
select t1.horsepower from cars_data as t1 join model_list as t2 on t1.model  =  t2.model where t2.accelerate  =  max(t2.accelerate);
select t1.horsepower from cars_data as t1 join model_list as t2 on t1.model  =  t2.model where t2.accelerate  =  max(t1.accelerate);
select t1.cylinder from car_names as t1 join model_list as t2 on t1.model  =  t2.model where t2.maker  =  'volvo' order by t1.cylinder limit 1;
select t1.cylinders from car_names as t1 join model_list as t2 on t1.model  =  t2.model where t2.maker  =  "volvo" group by t1.cylinders order by count(*) desc limit 1;
select count(*) from cars_data where accelerate  > (select max(accelerate) from cars_data);
select count(*) from cars_data where accelerate  >  max(horsepower);
select count(*) from countries group by continent having count(distinct maker)  >  2;
select count(*) from countries where continent  =  "multiple";
select count(*) from cars where cylinders  >  6;
select count(*) from cars_data where cylinders  >  6;
select t1.horsepower from car_names as t1 join models as t2 on t1.model  =  t2.model where t1.cylinders  =  4;
select t1.model from car_names as t1 join cars_data as t2 on t1.make  =  t2.make where t2.edispl  >  150;
select t1.make,  t1.makeid from car_names as t1 join cars_data as t2 on t1.make  =  t2.make where t2.edispl  >  3;
select t1.make,  t1.make,  t2.make from cars as t1 join model_list as t2 on t1.make  =  t2.maker where t1.hp  <  4;
select max(mpg) from cars_data where cylinders  =  8 and year  <  1980;
select max(mpg) from cars where cylinders  =   8 or year  <  1980;
select model from model_list where model  <  3500 except select t1.model from model_list as t1 join cars_data as t2 on t1.make  =  t2.make intersect select model from model_list as t3 join cars_data as t4 on t3.make
select distinct model from car_names except select t1.model from car_names as t1 join model_list as t2 on t1.model  =  t2.model where t2.maker  =  "ford" except select t3.model from car_names as t3 join model_list as
select country from countries where count(*) !=  1;
select country from countries where continent  = ''.not exists(select t1.country from countries as t1 join model_list as t2 on t1.continent  =  t2.continent where t2.maker  = ''.not exists(select t3.maker from model_
select t1.maker,  t1.fullname from car_makers as t1 join model_list as t2 on t1.maker  =  t2.maker where t2.model  >  3 group by t1.maker having count(*)  >=  2;
select t1.id,  t1.maker from car_makers as t1 join model_list as t2 on t1.maker  =  t2.maker where t1.makeid  >  3 group by t1.maker;
select t1.country,  t2.countryname from countries as t1 join model_list as t2 on t1.continent  =  t2.continent group by t1.country where count(*)  >  3 intersect select t1.country,  t2.countryname from
select t1.continent,  t2.country from continents as t1 join model_list as t2 on t1.continent  =  t2.continent group by t1.continent having count(*)  >  3 intersect select t1.continent,  t2.country
select t2.country from airlines as t1 join airports as t2 on t1.country  =  t2.country where t1.airline  =  "jetblue airways";
select t2.country from airlines as t1 join airlines as t2 on t1.airline  =  t2.airline where t1.country  =  'jetblue airways';
select t2.abbreviation from airlines as t1 join airlines as t2 on t1.airline  =  t2.airline where t1.country  =  'us';
select t2.abbreviation from airlines as t1 join airlines as t2 on t1.airline  =  t2.airline where t1.country  =  'us' intersect select t3.abbreviation from airlines as t3 join airports as t4 on t3.airportcode  
select distinct t1.airline,  t2.abbreviation from airlines as t1 join airports as t2 on t1.airportcode  =  t2.airportcode;
select t1.airline,  t1.abbreviation from airlines as t1 join airports as t2 on t1.airportcode  =  t2.airportcode where t2.country  =  'usa';
select t2.airportcode,  t2.airportname from airports as t1 join cities as t2 on t1.city  =  t2.city where t1.country  =  'usa' and t2.city  =  'anthony';
select t2.airportcode,  t2.airportname from airports as t1 join cities as t2 on t1.city  =  t2.city where t1.city  =  'anthony';
select count(*) from airlines;
select count(*) from airlines;
select count(*) from airports;
select count(*) from airports;
select count(*) from flights;
select count(*) from flights;
select t1.abbreviation from airlines as t1 join airports as t2 on t1.airline  =  t2.airportcode where t2.country  =  'usa';
select t1.abbreviation from airlines as t1 join airports as t2 on t1.airline  =  t2.airportcode where t2.country  =  'usa';
select count(*) from airlines where country  =  'usa';
select count(*) from airlines where country  =  'usa';
select t1.city,  t2.country from airports as t1 join airlines as t2 on t1.airportcode  =  t2.airportcode where t1.city  =  'alton' and t2.country  =  'usa';
select city,  country from airports where airportname  =  'alton';
select t2.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.airportcode where t1.city  =  'ako';
select t2.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport;
select t2.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.airportcode where t1.city  =  'aberdeen';
select airportname from airports where city  =  'aberdeen';
select count(*) from flights where destairport  =  'apg';
select count(*) from flights where destairport  =  'apg';
select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode;
select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode;
select count(*) from flights where sourceairport  =  'aberdeen';
select count(*) from flights where sourceairport  =  'aberdeen';
select count(*) from flights where destairport  =  "aberdeen";
select count(*) from flights where destairport  =  'aberdeen';
select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  'aberdeen' and t1.destination  =  'ashley';
select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t1.destairport  =  'ashley';
select count(*) from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t1.airline  =  'jetblue airways';
select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.country  =  'us' and t1.sourceairport  =  'jfk';
select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.country  =  'united' and t1.sourceairport  =  'asy';
select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.country  =  'united' and t1.sourceairport  =  'asy';
select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.country  =  'united' and t1.sourceairport  =  'ahd';
select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.country  =  'ahd' and t1.sourceairport  =  'ahd';
select count(*) from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t2.destairport  =  'aberdeen';
select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.country  =  'united' and t1.sourceairport  =  'aberdeen';
select city from airports group by city order by count(*) desc limit 1;
select city from airports group by city order by count(*) desc limit 1;
select city from airports group by city order by count(*) desc limit 1;
select city from airports group by city order by count(*) desc limit 1;
select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode  =  t2.airportcode group by t1.airportcode order by count(*) desc limit 1;
select t2.airportcode from airports as t1 join flights as t2 on t1.airportcode  =  t2.airportcode group by t1.airportcode order by count(*) desc limit 1;
select t1.airportcode from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport group by t1.airportcode order by count(*) desc limit 1;
select airportcode from airports order by count(*) desc limit 1;
select t1.airline from airlines as t1 join flights as t2 on t1.airline  =  t2.airline group by t1.airline order by count(*) desc limit 1;
select t1.airline from airlines as t1 join flights as t2 on t1.airline  =  t2.airline group by t1.airline order by count(*) desc limit 1;
select t1.abbreviation,  t2.country from airlines as t1 join flights as t2 on t1.airline  =  t2.airline group by t1.abbreviation order by count(*) desc limit 1;
select t1.abbreviation,  t2.country from airlines as t1 join flights as t2 on t1.airline  =  t2.airportcode group by t1.abbreviation order by count(*) desc limit 1;
select distinct t1.airline from airlines as t1 join flights as t2 on t1.airportcode  =  t2.airportcode where t2.sourceairport  =  'ahd';
select distinct t1.airline from airlines as t1 join flights as t2 on t1.airportcode  =  t2.airportcode where t2.sourceairport  =  'ahd';
select distinct t1.airline from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t2.destairport  =  'ahd';
select distinct t1.airline from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t2.destairport  =  'ahd';
select distinct t1.airline from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t2.sourceairport  =  'apg' intersect select distinct t1.airline from airlines as t1 join flights as t2 on t1.air
select t1.airline from airports as t1 join flights as t2 on t1.airportcode  =  t2.sourceairport where t2.destairport  =  "apg" intersect select t1.airline from airports as t1 join flights as t2 on t1.air
select distinct t1.airline from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t2.destairport  =  'cvo' except select t1.airline from airlines as t1 join flights as t2 on t1.airline
select distinct t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.sourceairport !=  apg and t2.destination  =  cvo;
select distinct t1.airline from airlines as t1 join flights as t2 on t1.airline  =  t2.airline group by t1.airline having count(*)  >=  10;
select t1.airline from airlines as t1 join flights as t2 on t1.airline  =  t2.airline group by t1.airline having count(*)  >=  10;
select distinct t1.airline from airlines as t1 join flights as t2 on t1.airline  =  t2.airline group by t1.airline having count(*)  <  200;
select distinct t1.airline from airlines as t1 join flights as t2 on t1.airline  =  t2.airline group by t1.airline having count(*)  <  200;
select t1.flightno from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t2.sourceairport  =  "united airlines";
select t1.flightno from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t2.sourceairport  =  'united';
select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  "apg";
select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode;
select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  "apg";
select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.country  =  'apg';
select t1.flightno from airports as t1 join flights as t2 on t1.airportcode  =  t2.airportcode where t2.sourceairport  =  "aberdeen";
select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  'aberdeen';
select t1.flightno from airports as t1 join flights as t2 on t1.airportcode  =  t2.airportcode where t2.sourceairport  =  "aberdeen";
select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  'aberdeen';
select count(*) from flights where city  =  "aberdeen" or city  =  "abilene";
select count(*) from flights where destairport  =  'abilene' or destairport  =  'aberdeen';
select t1.airportname from airports as t1 join flights as t2 on t1.airportcode  =  t2.airportcode where t2.sourceairport is not empty and t2.destairport is not empty;
select airportname from airports where airportcode not in (select sourceairport from flights);
select count(*) from employee;
select count(*) from employee;
select name from employee order by age asc;
select name from employee order by age asc;
select city,  count(*) from employee group by city;
select city,  count(*) from employee group by city;
select city from employee group by city having count(*)  >  1;
select city from employee group by city having count(*)  >  1;
select district,  count(*) from shop group by district;
select count(*),  district from shop where location  =  'location';
select t2.manager_name,  t2.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;
select t2.manager_name,  t2.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;
select min(number_products),  max(number_products) from shop;
select min(number_products),  max(number_products) from shop;
select t1.name,  t1.location,  t2.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id order by t2.number_products desc;
select t1.name,  t1.location,  t1.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc;
select name from shop where number_products  >  (select avg(number_products) from shop);
select name from shop group by name having count(*)  >  (avg(number_products) );
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t2.employee_id order by count(*) desc limit 1;
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t2.employee_id order by count(*) desc limit 1;
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t2.employee_id order by sum(t2.bonus) desc limit 1;
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t2.employee_id order by sum(t2.bonus) desc limit 1;
select name from employee where name not in (select name from evaluation);
select name from employee where employee_id not in (select employee_id from evaluation);
select name from shop where number_products  =  (select max(number_products) from hiring);
select t2.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;
select name from shop where number_products  =  0;
select name from shop where number_products  =  0;
select count(*),  t1.shop_name from hiring as t1 join shop as t2 on t1.shop_id  =  t2.shop_id group by t2.shop_id;
select count(*),  name from shop;
select sum(bonus) from evaluation;
select sum(bonus) from evaluation;
select * from hiring;
select * from hiring;
select district from shop where number_products  <  3000 intersect select district from shop where number_products  >  10000;
select district from shop where number_products  <  3000 intersect select district from shop where number_products  >  10000;
select count(distinct location) from shop;
select count(distinct location) from shop;
select count(*) from documents;
select count(*) from documents;
select distinct t1.document_id,  t1.document_name,  t1.document_description from documents as t1 join documents as t2 on t1.document_id  =  t2.document_id;
select document_id,  document_name,  document_description from documents;
select t1.document_name,  t2.document_id from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id where t2.template_type_code  =  "paragraph_type_letter_w";
select document_name,  document_id from documents where document_description like '%w%';
select t1.document_id,  t2.document_name,  t3.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id join ref_template_types as t3 on t2.paragraph_id  
select t1.document_id,  t2.document_name,  t3.document_description from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_type_code join templates as t3 on t2.template_
select count(distinct template_id) from documents where document_id in (select distinct template_id from templates);
select count(distinct template_id) from documents;
select count(*) from documents where template_type_code  =  'ppt';
select count(*) from documents where template_type_code  =  'ppt';
select t1.template_id,  count(*) from templates as t1 join documents as t2 on t1.template_id  =  t2.template_id group by t1.template_id;
select distinct t1.template_id,  count(*) from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id group by t2.template_id;
select t1.template_id,  t1.template_type_code from templates as t1 join documents as t2 on t1.template_id  =  t2.template_id group by t1.template_id order by count(*) desc limit 1;
select t1.template_id,  t1.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code group by t2.template_type_code order by count(*) desc limit
select template_id from templates group by template_id having count(*)  >  1;
select t1.template_id from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id group by t2.template_id having count(*)  >  1;
select template_id from templates where template_type_code not in (select template_type_code from documents);
select template_id from templates where template_type_code not in (select template_type_code from documents);
select count(*) from templates;
select count(*) from templates;
select t1.template_id,  t2.version_number,  t3.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code join documents as t3 on t
select t1.template_id,  t1.version_number,  t1.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code;
select distinct t1.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code;
select distinct template_type_code from ref_template_types;
select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_code  =  'pp' or t2.template_type_code  =  
select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_code  =  'pp' or t2.template_type_code  =  
select count(*) from templates where template_type_code  =  'cv';
select count(*) from templates where template_type_code  =  'cv';
select version_number,  template_type_code from templates where version_number  >  5;
select t1.version_number,  t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t1.version_number  >  5;
select template_type_code,  count(*) from ref_template_types group by template_type_code;
select distinct(template_type_code),  count(*) from ref_template_types;
select template_type_code from ref_template_types group by template_type_code order by count(*) desc limit 1;
select t1.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code order by count(*) desc limit 1;
select template_type_code from ref_template_types group by template_type_code having count(*)  <  3;
select template_type_code from ref_template_types where template_type_code  <  (select count(*) from templates);
select min(version_number),  t1.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code;
select min(version_number),  t1.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_id;
select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id  =  t2.document_id where t2.document_name  =  "data base";
select t1.template_type_code from ref_template_types as t1 join documents as t2 on t1.template_type_code  =  t2.template_id join paragraphs as t3 on t2.paragraph_id  =  t3.paragraph_id where t3.document_
select document_name from documents where template_type_code  =  'bk';
select document_name from documents where template_type_code  =  'bk';
select template_type_code,  count(*) from templates group by template_type_code;
select distinct(template_type_code),  count(*) from documents group by template_type_code;
select template_type_code from documents group by template_type_code order by count(*) desc limit 1;
select t1.template_type_code from ref_template_types as t1 join documents as t2 on t1.template_type_code  =  t2.template_id group by t1.template_type_code order by count(*) desc limit 1;
select template_type_code from ref_template_types except select t1.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code;
select t1.template_type_code from ref_template_types as t1 join documents as t2 on t1.template_type_code  =  t2.template_id where t2.document_id is null;
select t1.template_type_code,  t1.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_id;
select t1.template_type_code,  t1.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_id;
select t1.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_id where t2.template_type_code  =  "ad";
select t1.template_type_description from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_id;
select template_type_code from ref_template_types where template_type_description  =  "book";
select t1.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_id where t2.template_description  =  "book";
select distinct t1.template_type_description from templates as t1 join documents as t2 on t1.template_id  =  t2.document_id where t2.document_id in (select distinct document_id from documents);
select distinct t1.document_description from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id where t2.template_type_code  =  "document";
select t1.template_id from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_id where t2.template_type_description  =  "presentation";
select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_description  =  'presentation';
select count(*) from paragraphs;
select count(*) from paragraphs;
select count(*) from paragraphs as t1 join documents as t2 on t1.document_id  =  t2.document_id where t2.document_name  = 'summer show';
select count(*) from paragraphs as t1 join documents as t2 on t1.document_id  =  t2.document_id where t2.document_name  = 'summer show';
select other_details from paragraphs where paragraph_text like '%korea%';
select other_details from paragraphs where paragraph_text like '%korea%';
select t1.paragraph_id,  t1.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  'welcome to ny';
select paragraph_id,  paragraph_text from documents where document_name  =  'welcome to ny';
select paragraph_text from documents where document_name  =  "customer reviews";
select paragraph_text from documents where document_name  =  'customer reviews';
select document_id,  count(*) from documents group by document_id;
select distinct document_id,  count(*) from documents group by document_id;
select t1.document_id,  t1.document_name,  count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id;
select t1.document_id,  t1.document_name,  count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id;
select distinct document_id from documents group by document_id having count(*)  >=  2;
select document_id from documents group by document_id having count(*)  >=  2;
select t1.document_id,  t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) desc limit 1;
select document_id,  document_name from documents order by count(*) desc limit 1;
select document_id from documents group by document_id order by count(*) desc limit 1;
select document_id from documents order by other_details desc limit 1;
select document_id from documents where document_id  >=  1 intersect select document_id from documents where document_id  <=  2;
select document_id from documents where document_id in (1,2);
select t1.document_id from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t2.paragraph_text  =  "brazil" intersect select t1.document_id from documents as t1 join paragraphs as t2 on t1
select document_id from documents where document_description like '%brazil%' intersect select document_id from documents where document_description like '%ireland%';
select count(*) from teacher;
select count(*) from teacher;
select name from teacher order by age asc;
select name from teacher order by age asc;
select t2.age,  t2.hometown from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id;
select t2.age,  t2.hometown from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id;
select name from teacher where hometown!= 'little lever urban district';
select name from teacher where hometown!= 'little lever urban district';
select name from teacher where age  =  32 or age  =  33;
select name from teacher where age  =  32 or age  =  33;
select hometown from teacher where age  = (select min(age) from teacher);
select t2.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id order by t1.age desc limit 1;
select hometown,  count(*) from teacher group by hometown;
select count(*) from teacher where hometown in  (select hometown from course_arrange group by hometown);
select hometown from teacher group by hometown order by count(*) desc limit 1;
select hometown from teacher group by hometown order by count(*) desc limit 1;
select t2.hometown from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id group by t1.teacher_id having count(*)  >=  2;
select t2.hometown from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id group by t1.teacher_id having count(*)  >=  2;
select t2.name,  t1.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id;
select t2.name,  t1.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id;
select t2.name,  t1.course from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id;
select t2.name,  t1.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id;
select t2.name from course as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id where t1.course_name  = 'math';
select name from teacher where subject  = 'math';
select t2.name,  count(*) from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id group by t1.name;
select t2.name,  count(*) from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id group by t1.name;
select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id group by t1.teacher_id having count(*)  >=  2;
select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id group by t1.teacher_id having count(*)  >=  2;
select name from teacher where teacher_id not in (select teacher_id from course_arrange);
select name from teacher where teacher_id not in (select teacher_id from course_arrange);
select count(*) from visitor where age  < 30;
select t2.name from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id group by t1.id order by t1.level;
select avg(age) from visitor where level_of_membership !=  4;
select t2.name,  t2.level_of_membership from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id group by t2.level_of_membership order by t2.age asc;
select t1.museum_id,  t1.name from museum as t1 join visit as t2 on t1.museum_id  =  t2.museum_id group by t1.museum_id order by count(*) desc limit 1;
select avg(num_of_staff) from museum where open_year  <  2009;
select open_year,  count(*) from museum where name  =  "plaza museum";
select name from museum where num_of_staff  >  (select min(num_of_staff) from museum);
select t1.id,  t1.name,  t1.age from visit as t1 join museum as t2 on t1.museum_id  =  t2.museum_id group by t1.id having count(*)  >  1;
select t1.id,  t1.name,  t1.level_of_membership from visit as t1 join museum as t2 on t1.museum_id  =  t2.museum_id group by t1.id order by sum(t2.total_sp
select t1.museum_id,  t1.name from visit as t1 join museum as t2 on t1.museum_id  =  t2.museum_id group by t2.museum_id order by count(*) desc limit 1;
select name from museum where museum_id not in (select museum_id from visit);
select t1.name,  t1.age from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id group by t1.visitor_id order by count(*) desc limit 1;
select avg(total_spent),  max(total_spent) from visit;
select sum(total_spent) from visit where level_of_membership  =  1;
select t2.name from visit as t1 join museum as t2 on t1.museum_id  =  t2.museum_id where t1.open_year  <  2009 intersect select t2.name from visit as t1 join museum as t2 on t1.museum
select count(*) from visitor where level_of_membership !=  1 and open_year  <  2010;
select count(*) from museum where open_year  >  2013 or open_year  <  2008;
select count(*) from players;
select count(*) from players;
select count(*) from matches;
select count(*) from matches;
select first_name,  birth_date from players where country_code  =  'usa';
select first_name,  birth_date from players where country_code  =  'usa';
select avg(loser_age) from matches union select avg(winner_age) from matches;
select avg(loser_age),  avg(winner_age) from matches;
select avg(t1.player_rank_points) from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id where t1.loser_id  =  'winner';
select avg(t1.player_rank_points) from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id where t1.winner_rank  =  "winner";
select max(loser_rank) from matches group by loser_id;
select winner_rank from matches group by winner_id order by sum(loser_rank_points) desc limit 1;
select count(distinct country_code) from players;
select count(distinct country_code) from players;
select count(distinct winner_name) from matches;
select count(distinct winner_name) from matches;
select t1.tourney_name from matches as t1 join tournaments as t2 on t1.tourney_id  =  t2.tourney_id group by t2.tourney_id having count(*)  >  10;
select t1.tourney_name from matches as t1 join rankings as t2 on t1.tourney_id  =  t2.tourney_id group by t2.tourney_name having count(*)  >  10;
select t1.winner_name from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id where t1.year  =  2013 intersect select t2.first_name,  t2.last_name from players as t2 join matches
select t1.first_name,  t1.last_name from players as t1 join matches as t2 on t1.player_id  =  t2.player_id where t2.year  =  2013 intersect select t1.first_name,  t1.last
select count(*) from matches where year  =  2013 or year  =  2016;
select count(*) from matches where year  =  2013 or year  =  2016;
select t1.country_code,  t1.first_name from matches as t1 join players as t2 on t1.player_id  =  t2.player_id where t1.loser_id  =  0 and t1.winner_id  =  1;
select t1.first_name,  t1.country_code from players as t1 join matches as t2 on t1.player_id  =  t2.player_id group by t1.player_id having count(*)  =  2;
select first_name,  country_code from players order by birth_date desc limit 1;
select first_name,  country_code from players order by winner_id desc limit 1;
select first_name,  last_name from players order by birth_date;
select first_name,  last_name from players order by birth_date;
select first_name,  last_name from players where hand  =  "left";
select first_name,  last_name from players order by birth_date;
select t1.first_name,  t1.country_code from players as t1 join matches as t2 on t1.player_id  =  t2.player_id group by t1.player_id order by count(*) desc limit 1;
select first_name,  country_code from players order by tourney_num desc limit 1;
select year from matches group by year order by count(*) desc limit 1;
select year from matches group by year order by count(*) desc limit 1;
select winner_name,  winner_rank_points from matches group by winner_id order by winner_rank_points desc limit 1;
select t2.winner_name,  sum(t1.rank_points) from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id group by t2.player_id order by sum(t1.rank_points) desc limit 1
select winner_name from matches where winner_rank  =  max(winner_rank_points) and tournament_name  =  "australian_open";
select t2.winner_name from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id join rankings as t3 on t1.loser_id  =  t3.player_id where t3.tournament_name  =  "
select t1.loser_name,  t2.winner_name from matches as t1 join players as t2 on t1.loser_id  =  t2.player_id order by t1.minutes desc limit 1;
select t1.winner_name,  t2.loser_name from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id order by t1.match_num limit 1;
select avg(t1.ranking),  t1.first_name from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id where t1.first_name  =  'player1' group by t1.first_name;
select t1.first_name,  avg(t2.ranking) from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.player_id;
select t1.ranking,  t2.ranking_points from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id where t1.first_name  =  'player1' group by t1.first_name;
select t1.first_name,  sum(t2.ranking_points) from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.player_id;
select country_code,  count(*) from players group by country_code;
select country_code,  count(*) from players group by country_code;
select country_code from players group by country_code order by count(*) desc limit 1;
select country_code from players group by country_code order by count(*) desc limit 1;
select country_code from players group by country_code having count(*)  >  50;
select country_code from players group by country_code having count(*)  >  50;
select sum(tours) from rankings group by ranking_date;
select sum(tours) from rankings group by ranking;
select count(*),  year from matches group by year;
select count(*),  year from matches group by year;
select winner_name,  winner_rank from matches where winner_age  <  25 order by winner_id;
select t1.winner_name,  t1.winner_rank from matches as t1 join players as t2 on t1.winner_id  =  t2.player_id join rankings as t3 on t2.player_id  =  t3.player_id where t3.ranking
select count(distinct winner_id) from matches where winner_hand  =  'left' intersect select count(distinct winner_id) from matches where winner_hand  =  'wta';
select count(*) from matches where winner_hand  =  'left';
select t1.first_name,  t1.country_code,  t1.birth_date from winners as t1 join matches as t2 on t1.player_id  =  t2.player_id group by t1.player_id order by t1.rank_points desc
select t1.first_name,  t1.country_code,  t1.birth_date from players as t1 join matches as t2 on t1.player_id  =  t2.player_id group by t1.player_id order by sum(t2.winner_
select count(*),  t1.player_id from players as t1 join matches as t2 on t1.player_id  =  t2.player_id group by t1.player_id;
select count(distinct hand),  t1.player_id from players as t1 join matches as t2 on t1.player_id  =  t2.player_id group by t1.player_id;
select count(*) from ship where disposition_of_ship  =  'captured';
select name,  tonnage from ship order by tonnage desc;
select name,  date,  result from battle;
select max(t1.killed),  min(t2.killed) from death as t1 join battle as t2 on t1.id  =  t2.id group by t1.id;
select avg(injured) from death;
select t1.note,  t2.injured from death as t1 join ship as t2 on t1.caused_by_ship_id  =  t2.id where t2.tonnage  =  't';
select name,  result from battle where bulgarian_commander !=  'boril';
select distinct id,  name from battle where ship_type  =  "brig";
select t1.id,  t1.name from battle as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id group by t1.id having count(*)  >  10;
select t1.id,  t1.name from ship as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id group by t1.id order by sum(t2.injured) desc limit 1;
select distinct name from battle where bulgarian_commander  >=   kaloyan and latin_commander  <=  baldwin i;
select count(*) from battle;
select count(*) from battle where id not in (select id from death where caused_by_ship_id  =  225);
select t1.name,  t1.date from battle as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id where t2.name  =  'lettice' intersect select t1.name,  t1.date from battle
select name,  result from battle where id not in (select id from ship where location  =  'english channel');
select note from death where caused_by_ship_id  =  "east";
select address_id from addresses where line_1  =  "line 1" intersect select address_id from addresses where line_2  =  "line 1";
select line_1,  line_2 from addresses;
select count(*) from courses;
select count(*) from courses;
select t1.course_name from degree_programs as t1 join courses as t2 on t1.degree_program_id  =  t2.degree_program_id where t2.course_name  =  "math";
select course_description from courses where course_name  =  "math";
select t2.zip_postcode from addresses as t1 join cities as t2 on t1.city  =  t2.city where t1.city  =  'port chelsea';
select zip_postcode from cities where name  =  "port chelsea";
select department_name,  department_id from departments order by count(*) desc limit 1;
select department_name,  department_id from departments order by count(*) desc limit 1;
select count(*) from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id group by t1.department_id;
select count(distinct department_id) from degree_programs;
select count(distinct degree_program_name) from degree_programs;
select count(*) from degree_programs;
select count(*) from degree_programs where department_name  =  "engineering";
select count(*) from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id where t2.department_name  =  "engineering";
select section_name,  section_description from sections;
select section_name,  section_description from sections;
select course_name,  course_id from courses where number_of_sections  <=  2;
select t1.course_name,  t1.course_id from courses as t1 join student_enrolment as t2 on t1.course_id  =  t2.course_id where t2.section_count  <  2;
select section_name from sections order by reverse(section_name);
select section_name from sections reversed order;
select t2.semester_name,  t2.semester_id from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id group by t2.semester_id order by count(*) desc limit 1;
select t2.semester_name,  t2.semester_id from semesters as t1 join student_enrolment as t2 on t1.semester_id  =  t2.semester_id group by t1.semester_id order by count(*) desc limit 1
select t2.department_description from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id where t1.department_name like "%computer%";
select department_description from departments where department_name like '%computer%';
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id group by t1.first_name,  t1
select t1.first_name,  t1.last_name,  t1.student_id from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.semester_id  =  2
select t1.first_name,  t1.middle_name,  t1.last_name from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id;
select first_name,  middle_name,  last_name from students where current_address_id  =  addresses.address_id and degree_program_id  =  4;
select t1.degree_program_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_program_name order by count(*) desc limit 1;
select degree_summary_name from degree_programs group by degree_summary_name order by count(*) desc limit 1;
select t1.program_id,  t1.program_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.program_id order by count(*) desc limit 
select t2.degree_program_id,  t2.degree_summary_name from degree_programs as t1 join student_enrolment as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_program_id order
select t1.student_id,  t1.first_name,  t1.middle_name,  t1.last_name,  count(*) from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id  = 
select t1.first_name,  t1.last_name,  t1.first_name,  t1.last_name,  count(*) from students as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree
select semesters from students group by semesters order by semesters asc;
select semester_name from semesters where semester_id not in (select semester_id from students);
select course_name from student_enrolment where student_enrolment_id  =  student_enrolment_courses.student_enrolment_id;
select course_name from courses where student_enrolment_id in (select student_enrolment_id from student_enrolment);
select course_name from student_enrolment group by course_id order by count(*) desc limit 1;
select course_name from student_enrolment group by course_id order by count(*) desc limit 1;
select t2.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t1.current_address_state  =  "north carolina" and t1.current_address_city !=  "ch
select t2.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t1.current_address_state  =  "north" and t1.current_address_city  =  "charlotte
select transcript_date,  transcript_id from transcripts where transcript_date  >= (select max(transcript_date) from transcripts);
select transcript_date,  transcript_id from transcripts where transcript_date  >= (select max(transcript_date) from transcripts group by transcript_date having count(*)  >  2);
select t2.cell_mobile_number from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t1.first_name  =  "timothy" and t1.last_name  =  "ward";
select t2.cell_mobile_number from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t1.first_name  =  "timothy" and t1.last_name  =  "ward";
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id group by t1.first_name,  t1
select t1.first_name,  t1.last_name,  t1.first_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id group by t1.student_id order by t1.
select t1.first_name,  t1.middle_name,  t1.last_name from graduates as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id;
select t1.first_name,  t1.last_name,  t1.first_name,  t1.last_name from graduates as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.
select t1.first_name from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.student_enrolment_id join students as t3 on t2.student_id  =  t3.student_id where t3.current_
select t1.first_name from students as t1 join addresses as t2 on t1.current_address_id  =  t2.address_id where t1.permanent_address_id !=  t2.permanent_address_id;
select t1.address_id,  count(*) from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.student_enrolment_id group by t1.address_id order by count(*) desc limit 1;
select t1.address_id,  t1.line_1,  t1.line_2 from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.address_id group by t1.address_id order by count(*) desc
select avg(transcript_date) from transcripts;
select avg(transcript_date) from transcript_contents;
select date_left from transcripts where transcript_date  =  (select min(transcript_date) from transcripts);
select t1.transcript_date from transcripts as t1 join student_enrolment_courses as t2 on t1.transcript_id  =  t2.student_course_id;
select count(*) from transcripts as t1 join student_enrolment as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id;
select count(*) from transcripts;
select max(transcript_date) from transcripts as t1 join student_enrolment as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id;
select date_left from transcripts where transcript_date  =  (select max(t1.transcript_date) from transcripts as t1 join student_enrolment as t2 on t1.student_enrolment_id  =  t2.student_id join degree_programs as t3 on
select count(*) from transcripts as t1 join student_enrolment as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id group by t1.student_enrolment_id;
select t1.transcript_id,  t2.transcript_id from transcripts as t1 join student_enrolment as t2 on t1.transcript_id  =  t2.student_course_id group by t1.transcript_id having count(*)  >=  2
select transcript_date from transcript_contents order by transcript_date desc limit 1;
select transcript_date,  transcript_id from transcripts order by transcript_date desc limit 1;
select t2.semester_id from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t1.major_code  =  'bachelor' intersect select t2.semester_id from students as t1 join student
select semester_id from student_enrolment where student_enrolment_id  = (select semester_id from student_enrolment where student_enrolment_id  =  1) intersect select semester_id from student_enrolment where student_enrolment_id  = 
select count(distinct address_id) from addresses;
select distinct address_id from addresses where city  =  "new york";
select t1.student_first_name,  t1.student_last_name,  t1.student_middle_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id order by t2.student_
select distinct t2.first_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id order by t1.first_name;
select section_name from sections as h join semesters as t on h.section_id  =  t.section_id where t.semester_name  =  'h';
select section_name from sections where section_name  =  "h";
select first_name from students where permanent_address_id  =  09700166582 or cell_phone_number  =  '09700166582';
select first_name from students where permanent_address_id  =  09700166582 or cell_phone_number  =  '09700166582';
select title from cartoon;
select title from cartoon order by title;
select t1.title from cartoon as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.directed_by  =  "ben jones";
select t1.title from cartoon as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.directed_by  =  'ben jones';
select count(*) from cartoon as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.directed_by  =  "joseph kuhr";
select count(*) from cartoon as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.directed_by  =  'joseph kuhr';
select title,  directed_by from cartoon order by original_air_date;
select t1.title,  t2.directed_by,  t3.written_by from cartoon as t1 join tv_series as t2 on t1.id  =  t2.id join tv_channel as t3 on t2.channel  =  t3.id order by
select t1.title from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.directed_by  =  "ben jones" or t2.directed_by  =  "brandon vietti";
select t1.title from cartoon as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.directed_by  =  'ben jones' intersect select t1.title from cartoon as t1 join tv_channel as t2 on t1.channel  
select country,  count(*) from tv_channel group by country order by count(*) desc limit 1;
select t2.country,  count(*) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t1.country order by count(*) desc limit 1;
select count(distinct series_name),  sum(t1.content) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t1.series_name;
select count(distinct series),  count(distinct content) from tv_channel;
select t2.content from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.series_name  =  "sky radio";
select content from tv_series where series_name  = 'sky radio';
select package_option from tv_channel where series_name  =  "sky radio";
select package_option from tv_series where series_name  =  "sky radio";
select count(*) from tv_channel where language  =  'english';
select count(*) from tv_channel where language  =  'english';
select language,  count(*) from tv_channel group by language order by count(*) desc limit 1;
select t2.language from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t2.language order by count(*) desc limit 1;
select language,  count(*) from tv_channel group by language;
select t2.country,  count(*) from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t1.country;
select series_name from tv_series where title  =  "the rise of the blue beetle!";
select t2.series_name from tv_series as t1 join tv_channel as t2 on t1.id  =  t2.id where t1.channel  =  "the rise of the blue beetle";
select t1.title from tv_series as t1 join tv_channel as t2 on t1.id  =  t2.channel where t2.series_name  =  "sky radio";
select t1.title from tv_series as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.series_name  =  "sky radio";
select ep from tv_series order by rating;
select episode from tv_series order by rating;
select t1.episode,  t1.rating from tv_series as t1 join tv_channel as t2 on t1.channel  =  t2.id group by t1.episode order by t1.rating desc limit 3;
select t1.episode,  t2.rating from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id group by t1.episode order by count(*) desc limit 3;
select min(share),  max(share) from tv_series;
select max(share),  min(share) from tv_series;
select t2.air_date from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t1.title  =  "a love of a lifetime" and t2.air_date  =  "2021-01-01";
select t2.air_date from tv_series as t1 join tv_channel as t2 on t1.id  =  t2.id where t1.title  =  "a love of a lifetime";
select t2.weekly_rank from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t1.air_date  =  '2021-01-01' and t1.title  =  "a love of a lifetime";
select t2.weekly_rank from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t1.air_date  =  '2021-01-01' and t2.episode  =  "a love of a lifetime";
select t2.series_name from tv_series as t1 join tv_channel as t2 on t1.id  =  t2.channel where t1.episode  =  "a love of a lifetime";
select t2.series_name from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t1.air_date  =  '2021-01-01';
select ep from tv_series where series_name  =  "sky radio";
select ep from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t1.series_name  =  "sky radio";
select count(*),  director from cartoon group by director;
select count(*),  directed_by from cartoon group by directed_by;
select t1.production_code,  t2.channel from tv_series as t1 join cartoon as t2 on t1.id  =  t2.channel group by t1.id order by t1.air_date desc limit 1;
select production_code,  channel from cartoon order by original_air_date desc limit 1;
select t1.package_option,  t2.series_name from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.high_definition_tv;
select package_option,  t1.title from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.high_definition_tv;
select t2.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t1.written_by  =  'todd casey';
select country from cartoon where written_by  =  'todd casey';
select country from tv_channel where series_name  =  "todd casey" except select t1.series_name from tv_series as t1 join tv_channel as t2 on t1.id  =  t2.channel where t2.written_by  =  "todd casey
select country from tv_channel where series_name !=  "todd casey cartoon";
select t2.series_name,  t1.country from tv_series as t1 join tv_channel as t2 on t1.id  =  t2.channel where t1.director_by  =  'ben jones' intersect select t2.series_name,  t1
select t1.series_name,  t2.country from tv_series as t1 join tv_channel as t2 on t1.id  =  t2.channel where directed_by  =  'ben jones' intersect select t1.series_name,  t2.country from
select t1.pixel_aspect_ratio_par,  t2.country from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.language !=  'english';
select t1.pixel_aspect_ratio_par,  t2.country from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.language !=  'english';
select t1.id from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t1.id having count(*)  >  2;
select t1.id from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel group by t1.id having count(*)  >  2;
select t1.id from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where directed_by !=  'ben jones';
select t1.id from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.directed_by  =  'ben jones';
select t2.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.directed_by  =  'ben jones';
select t1.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t2.directed_by !=  'ben jones';
select count(*) from people;
select count(*) from people;
select earnings from poker_player order by earnings desc;
select earnings from poker_player order by earnings desc;
select final_table_made,  best_finish from poker_player;
select t1.final_table_made,  t2.best_finish from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id;
select avg(earnings) from poker_player;
select avg(earnings) from poker_player;
select t2.money_rank from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t2.earnings desc limit 1;
select max(money_rank) from poker_player;
select max(final_table_made) from poker_player where earnings  <  200000;
select max(final_table_made) from poker_player where earnings  <  200000;
select name from poker_player;
select name from poker_player;
select name from poker_player where earnings  >  300000;
select name from poker_player where earnings  >  300000;
select name from poker_player order by final_table_made asc;
select name from poker_player order by best_finish desc;
select t2.birth_date from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t2.earnings desc limit 1;
select t1.birth_date from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t2.earnings desc limit 1;
select best_finish from poker_player order by height desc limit 1;
select max(money_rank) from poker_player group by height order by money_rank desc;
select avg(earnings) from poker_player where height  >  200;
select avg(earnings) from people where height  >  200;
select name from poker_player order by earnings desc;
select name from poker_player order by earnings desc;
select nationality,  count(*) from people group by nationality;
select nationality,  count(*) from people group by nationality;
select nationality from people group by nationality order by count(*) desc limit 1;
select nationality from people group by nationality order by count(*) desc limit 1;
select nationality from people group by nationality having count(*)  >=  2;
select nationality from people group by nationality having count(*)  >=  2;
select name,  birth_date from people order by name asc;
select name,  birth_date from people order by name;
select name from people where nationality!= "russia";
select name from people where nationality!= 'russia';
select name from people where people_id not in (select people_id from poker_player);
select name from people where nationality !=  'poker_player';
select count(distinct nationality) from people;
select count(distinct nationality) from people;
select count(*) from area_code_state;
select contestant_number,  contant_name from contestants order by contestant_number desc;
select t1.vote_id,  t2.phone_number,  t3.state from votes as t1 join contestants as t2 on t1.contestant_number  =  t2.contestant_number join area_code_state as t3 on t1.state  
select max(area_code),  min(area_code) from area_code_state;
select t2.created from votes as t1 join area_code_state as t2 on t1.state  =  t2.state where t1.contestant_number  =  1;
select t2.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number where t1.contestant_name!= 'jessie alloway';
select distinct state,  min(created) from votes group by state;
select t1.contestant_number,  t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number having count(*)  >=  2
select t1.contestant_number,  t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number order by count(*) desc limit 1
select count(*) from votes where state  =  'ny' or state  =  'ca';
select count(*) from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number where t2.vote_id !=  0;
select area_code from contestants group by area_code order by count(*) desc limit 1;
select t1.create_date,  t1.state,  t2.phone_number from votes as t1 join contestants as t2 on t1.contestant_number  =  t2.contestant_number where t2.contestant_name  =  'tabatha
select distinct t1.area_code from area_code_state as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number where t2.contestant_number  =  'tabatha gehling' intersect select distinct t1.area
select t2.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number where t1.contestant_name like '%al%';
select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.is_independent  =  'true' and t1.continent !=  'america' and t1.continent !=  'euro
select name from country where continent !=  'america' and year  >  1950;
select count(*) from country where governmentform  =  "republic";
select count(*) from country where governmentform  = 'republic';
select sum(surfacearea) from country where continent  =  "the americas" and region  =  "the caribbean";
select sum(surfacearea) from country where continent  =  "america";
select continent from country where continent  =  "anguilla";
select continent from country where continent  =  "anguilla";
select t1.region from city as t1 join country as t2 on t1.countrycode  =  t2.code where t1.name  =  "kabul";
select t1.name from city as t1 join country as t2 on t1.countrycode  =  t2.code where t2.name  =  "kabul";
select isofficial from countrylanguage where countrycode  =  "aruba";
select isofficial from countrylanguage where countrycode  =  "aruba";
select t1.population,  t2.lifeexpectancy from city as t1 join country as t2 on t1.countrycode  =  t2.code where t1.name  =  "brazil";
select t1.population,  t2.lifeexpectancy from city as t1 join country as t2 on t1.countrycode  =  t2.code where t1.name  =  "Brazil";
select region,  population from city where countrycode  =  "angola";
select t3.region,  t3.population from city as t1 join country as t2 on t1.countrycode  =  t2.code join countrylanguage as t3 on t2.code  =  t3.countrycode where t1.name  =  'angola' and t
select avg(lifeexpectancy) from country where continent  =  "central africa";
select avg(lifeexpectancy) from country where continent  =  "central africa";
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  <  0.05 order by t2.percentage limit 1;
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  < (select avg(percentage) from countrylanguage where continent  =  "asia");
select sum(population),  max(gnp) from country where continent  =  "asia";
select sum(population),  max(gnp) from country where continent  =  "asia";
select avg(lifeexpectancy) from country where continent  =  "african" and governmentform  =  "republic";
select avg(lifeexpectancy) from country where continent  =  "africa" and governmentform  =  "republic";
select sum(surfacearea) from country where continent  =  "asia" intersect select sum(surfacearea) from country where continent  =  "europe";
select sum(surfacearea) from country where continent  =  'asia' intersect select sum(surfacearea) from country where continent  =  'europe';
select count(*) from city where district  =  "gelderland";
select sum(population) from city where district  =  "gelderland";
select avg(gross domestic product),  sum(population) from country where governmentform  =  'us territory';
select avg(gross_national_product),  sum(population) from country where continent  =  'us';
select count(distinct language) from countrylanguage;
select count(distinct language) from sqlite_sequence;
select count(*) from country where continent  =  "africa";
select count(distinct governmentform) from country where continent  =  "africa";
select sum(t1.isofficial) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.name  =  "aruba";
select count(*) from countrylanguage where countrycode  =  "aruba";
select count(*) from countrylanguage where isofficial  =  "afghanistan";
select count(*) from countrylanguage where code  =  "afghanistan";
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code order by count(*) desc limit 1;
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code order by sum(t2.percentage) desc limit 1;
select continent from countrylanguage group by continent order by count(*) desc limit 1;
select continent from countrylanguage group by continent order by count(*) desc limit 1;
select count(distinct t1.countrycode) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  'english' intersect select count(distinct t1.countrycode) from countrylanguage as t2 join country as
select count(*) from country where language  =  "english" intersect select count(*) from country where language  =  "dutch";
select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  'english' intersect select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code  = 
select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  'english' intersect select distinct t1.name from country as t1 join countrylanguage as t2 on t1.code  = 
select distinct t1.name from country as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial  =  'english' intersect select distinct t1.name from countrylanguage as t2 join country as t1 on t2.countrycode
select name from country where isofficial  =  'english' intersect select name from country where isofficial  =  'french';
select count(distinct continent) from country where language  =  "chinese";
select count(*) from country where continent  =  "china" and language  =  "chinese";
select region from country where language  =  "english" intersect select region from country where language  =  "dutch";
select region,  case when language  =  "dutch" then "dutch" else "english" end as language from countrylanguage where code  =  "dutch" intersect select region,  case when language  =  "english" then "english" else "d
select country from countrylanguage group by countrycode having count(*)  >=  2;
select country from countrylanguage where isofficial  =  'english' or isofficial  =  'dutch';
select isofficial from countrylanguage group by isofficial order by count(*) desc limit 1;
select isofficial from countrylanguage group by isofficial order by count(*) desc limit 1;
select t1.language from country as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.governmentform  = 'republic';
select language from country where governmentform  =  'Republic';
select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.language  =  'english' order by t2.percentage desc limit 1;
select t1.name,  t1.population from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.language  =  "english" order by t1.population desc limit 1;
select t1.name,  t1.population,  t2.expectedlife from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.continent  =  "asia" order by t2.surfacearea desc limit 1;
select name,  population,  lifeexpectancy from country where continent  =  "asia" order by surfacearea desc limit 1;
select avg(lifeexpectancy) from country where language !=  "en";
select avg(lifeexpectancy) from country where governmentform !=  'english';
select sum(district) from city where countrycode!= "en";
select count(*) from country where continent !=  'america' and language !=  'english';
select isofficial from countrylanguage where headofstate  =  "beatrix";
select isofficial from countrylanguage where headofstate  =  "beatrix";
select sum(t2.percentage) from countrylanguage as t1 join sqlite_sequence as t2 on t1.code  =  t2.name where t1.seq  <  1930;
select sum(distinct isofficial) from countrylanguage where headofstate  = 'soviet';
select t1.countrycode from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  >  sum(t1.surfacearea) group by t1.countrycode;
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  >  sum(t2.percentage) over (select avg(percentage) from countrylanguage);
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  <  0.5 order by t1.name;
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  <  0.5 order by t1.population desc limit 1;
select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.percentage  >  0.5 group by t1.name having count(*)  >=  1;
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  >  0.001 order by t1.name;
select countrycode from country where isofficial !=  'english';
select countrycode from country where language !=  'english';
select t1.countrycode from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language !=  'english';
select countrycode from countrylanguage where language !=  'english';
select t1.code from country as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.percentage  <  0.5 group by t1.code having count(*)  =  0;
select t1.countrycode from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language !=  'english' and t2.governmentform != 'republic';
select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial !=  'english';
select name from city where language !=  "en";
select distinct t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial  =  'chinese';
select distinct t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial  =  'chinese';
select name,  independenceyear,  surfacearea from country where population  <  ( select min(population) from country );
select t1.name,  t1.year,  t2.surfacearea from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.population  < ( select max(t3.population) from country as t3 join city
select t1.population,  t1.name,  t2.leader from city as t1 join country as t2 on t1.countrycode  =  t2.code group by t1.countrycode order by surfacearea desc limit 1;
select name,  population,  headofstate from country where surfacearea  =  (select max(surfacearea) from country);
select t1.name,  sum(t2.language) from country as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode group by t1.countrycode having count(*)  >=  3;
select t1.name,  count(*) from countrylanguage as t1 join sqlite_sequence as t2 on t1.countrycode  =  t2.name group by t1.countrycode having count(*)  >  2;
select district,  count(*) from city group by district having avg(population)  >  district;
select districnty,  count(*) from city group by districnty having sum(population)  >  (select sum(population) from city);
select t1.governmentform,  sum(t2.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.governmentform;
select distinct t1.governmentform,  sum(t1.population) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code having avg(t2.percentage)  >  72;
select avg(lifeexpectancy),  sum(population) from country where surfacearea  <  72 group by continent;
select continent,  sum(population),  avg(lifeexpectancy) from country where continent !=  'Europe' group by continent having sum(lifeexpectancy)  <  72;
select name,  surfacearea from country order by surfacearea desc limit 5;
select name,  surfacearea from country order by surfacearea desc limit 5;
select name from country order by population desc limit 3;
select name from city order by population desc limit 3;
select name from country where population  < (select min(population) from country);
select name from country where population  < (select min(population) from country);
select count(*) from country where continent  =  "asia";
select count(*) from country where continent  =  'asia';
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.percentage  >  0.8 group by t1.name;
select name from country where continent  =  'Europe' and population  =  80000;
select sum(population),  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000 group by continent;
select sum(population),  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000 group by continent;
select name from city where population between 160000 and 900000;
select name from city where population between 160000 and 900000;
select t3.isofficial from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code join countrylanguage as t3 on t1.language  =  t3.isofficial group by t3.isofficial order by count(*) desc limit 1;
select isofficial from countrylanguage group by isofficial order by count(*) desc limit 1;
select t1.language,  max(t2.percentage) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code group by t1.countrycode order by t1.percentage desc limit 1;
select t1.countrycode,  t2.language from country as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode group by t1.countrycode order by sum(t2.percentage) desc limit 1;
select sum(t1.percentage) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code group by t2.code order by t1.percentage desc limit 1;
select count(*) from sqlite_sequence where isofficial  =  "spanish";
select t1.countrycode from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.countrycode order by percentagelocale desc limit 1;
select t1.countrycode from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.countrycode where t2.language  =  'español';
select count(*) from conductor;
select count(*) from conductor;
select name from conductor order by age asc;
select name from conductor order by age;
select name from conductor where nationality!= "usa";
select name from conductor where nationality !=  "usa";
select record_company from orchestra order by year_of_founded desc;
select record_company from orchestra order by year_of_founded desc;
select avg(attendance) from show;
select avg(attendance) from show;
select max(share),  min(share) from performance where type !=  "live final";
select max(share),  min(share) from performance where type !=  "live final";
select count(distinct nationality) from conductor;
select count(distinct nationality) from conductor;
select name from conductor order by age desc;
select name from conductor order by age desc;
select name from conductor order by age asc limit 1;
select name from conductor where age  >  0 order by age desc limit 1;
select name,  conductor_id from conductor;
select t1.name,  t2.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id;
select name from conductor where conductor_id not in (select conductor_id from orchestra);
select name from conductor where conductor_id not in (select conductor_id from orchestra);
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name order by count(*) desc limit 1;
select name from conductor order by count(*) desc limit 1;
select t2.name from orchestra as t1 join conductor as t2 on t1.orchestra_id  =  t2.orchestra_id where t1.year_of_founded  >  2008;
select name from orchestra where year_of_founded  >  2008;
select distinct record_company,  count(*) from orchestra group by record_company;
select count(*),  t2.record_company from orchestra as t1 join record_company as t2 on t1.record_company  =  t2.record_company group by t1.record_company;
select major_record_format from orchestra order by count(*) asc;
select major_record_format from orchestra order by count(*) desc;
select record_company from orchestra group by record_company order by count(*) desc limit 1;
select record_company from orchestra group by record_company order by count(*) desc limit 1;
select name from orchestra where orchestra_id not in (select orchestra_id from performance);
select orchestra from orchestra where orchestra_id not in (select orchestra_id from performance);
select record_company from orchestra where year_of_founded  <  2003 intersect select record_company from orchestra where year_of_founded  >  2003;
select distinct record_company from orchestra where year_of_founded  <  2003 intersect select distinct record_company from orchestra where year_of_founded  >  2003;
select count(*) from orchestra where major_record_format  =  "cd" or major_record_format  =  "dvd";
select count(*) from orchestra where record_format  =  'cd' or record_format  =  'dvd';
select year_of_founded from orchestra where major_record_format  = 'multiple';
select year_of_founded from orchestra where record_company !=  'all';
select count(*) from highschooler;
select count(*) from highschooler;
select name,  grade from highschooler;
select name,  grade from highschooler;
select grade from highschooler;
select grade from highschooler;
select t2.grade from highschooler as t1 join student as t2 on t1.student_id  =  t2.id where t1.name  =  "kyle";
select t2.grade from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id where t1.name  =  'kyle';
select name from highschooler where grade  =  10;
select name from highschooler where grade  =  10;
select id from highschooler where name  =  "kyle";
select t1.student_id from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t2.name  =  "kyle";
select count(*) from highschooler where grade  =  9 or grade  =  10;
select count(*) from highschooler where grade  =  9 or grade  =  10;
select count(*),  grade from highschooler group by grade;
select count(*),  grade from highschooler group by grade;
select grade from highschooler group by grade order by count(*) desc limit 1;
select t2.grade from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id group by t1.id order by count(*) desc limit 1;
select t2.grade from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id group by t2.grade having count(*)  >=  4;
select t2.grade from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id group by t1.grade having count(*)  >=  4;
select t1.student_id,  count(*) from friend as t1 join highschooler as t2 on t1.student_id  =  t2.id group by t1.student_id;
select count(*),  t1.student_id from friend as t1 join highschooler as t2 on t1.student_id  =  t2.id group by t1.student_id;
select t2.name,  count(*) from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id group by t1.name;
select t2.name,  count(*) from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id group by t1.name;
select t2.name from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id order by count(*) desc limit 1;
select t2.name from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id order by count(*) desc limit 1;
select t2.name from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id group by t1.name having count(*)  >=  3;
select t2.name from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id group by t1.id having count(*)  >=  3;
select t2.name from friend as t1 join highschooler as t2 on t1.student_id  =  t2.id where t1.friend_id  =  1;
select t2.name from friend as t1 join highschooler as t2 on t1.student_id  =  t2.id where t1.friend_id  =   highschooler.id and t1.student_id  =   highschooler.id where t2.student
select count(*) from friend as t1 join highschooler as t2 on t1.student_id  =  t2.id where t1.friend_id  =   t2.id and t2.grade  =  'kyle';
select count(*) from friend as t1 join highschooler as t2 on t1.student_id  =  t2.id where t1.friend_id  =  1;
select student_id from highschooler except select t2.student_id from friend as t1 join highschooler as t2 on t1.student_id  =  t2.student_id;
select t2.id from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id where t1.id !=  select t1.id from highschooler;
select name from highschooler where id not in (select student_id from friend);
select name from student where id not in (select student_id from friend);
select t1.id from friend as t1 join highschooler as t2 on t1.student_id  =  t2.id join likes as t3 on t2.id  =  t3.student_id where t3.liked_id  =  (select id from likes where liked_
select t1.id from friend as t1 join likes as t2 on t1.liked_id  =  t2.liked_id where t1.friend_id  =  highschooler;
select t2.name from friend as t1 join likes as t2 on t1.liked_id  =  t2.liked_id where t1.friend_id  =  highschooler;
select t2.name from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id join likes as t3 on t2.liked_id  =  t3.student_id;
select count(*) from likes as t1 join highschooler as t2 on t1.student_id  =  t2.id;
select count(*),  t1.student_id from likes as t1 join friend as t2 on t1.liked_id  =  t2.student_id group by t1.student_id;
select t2.name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name;
select t2.name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name;
select t2.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id order by count(*) desc limit 1;
select t2.name from likes as t1 join highschooler as t2 on t1.liked_id  =  t2.id order by count(*) desc limit 1;
select t1.name from friend as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.name having count(*)  >=  2;
select t1.name from friend as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.id having count(*)  >=  2;
select t1.name from friend as t1 join highschooler as t2 on t1.student_id  =  t2.id where t2.grade  >  5 group by t1.name having count(*)  >=  2;
select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.student_id where t2.grade  >  5 group by t1.name having count(*)  >=  2;
select count(*) from likes as t1 join highschooler as t2 on t1.liked_id  =  t2.id where t2.name  =  "kyle";
select count(*) from likes as t1 join highschooler as t2 on t1.student_id  =  t2.id where t2.name  =  "kyle";
select avg(grade) from highschooler where id not in (select student_id from friend);
select avg(grade) from highschooler;
select min(grade) from student where id not in (select student_id from friend);
select t1.grade from highschooler as t1 join student as t2 on t1.id  =  t2.id where t2.grade  =  'no friends';
select city from owners intersect select city from professionals;
select distinct state from owners intersect select distinct professional_id from professionals;
select avg(age) from dogs where dog_id in (select dog_id from treatments);
select avg(age) from dogs where dog_id in (select dog_id from treatments);
select t1.professional_id,  t1.last_name,  t1.cell_number from professionals as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by t1.professional_id having count(*)
select t1.professional_id,  t1.last_name,  t1.cell_number from professionals as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by t1.professional_id having count(*)
select t1.name from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id where t2.cost_of_treatment  >  1000;
select name from dogs where dog_id not in (select dog_id from treatments where cost_of_treatment  >  1000);
select first_name from professionals except select t1.first_name from professionals as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t2.first_name !=  'dog';
select first_name from professionals except select t1.first_name from professionals as t1 join owners as t2 on t1.owner_id  =  t2.owner_id;
select t2.professional_id,  t2.role_code,  t2.email_address from professionals as t1 join treatment_types as t2 on t1.role_code  =  t2.treatment_type_code group by t1.role_code having count(*)  =
select professional_id,  role_code from professionals where role_code !=  'dog_professional';
select t1.owner_id,  t1.first_name,  t1.last_name from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by count(*) desc limit 1;
select t1.owner_id,  t1.first_name,  t1.last_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by count(*) desc limit 1;
select t1.professional_id,  t1.role_code,  t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*)  >=  2;
select t1.professional_id,  t1.role_code,  t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*)  >=  2;
select t1.breed_name from dogs as t1 join breeds as t2 on t1.breed_code  =  t2.breed_code group by t1.breed_name order by count(*) desc limit 1;
select t1.breed_name from dogs as t1 join breeds as t2 on t1.breed_code  =  t2.breed_code group by t1.breed_name order by count(*) desc limit 1;
select t1.owner_id,  t1.last_name from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t2.payment_amount) desc limit 1;
select t1.owner_id,  t1.first_name,  t1.last_name from owners as t1 join treatments as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t2.cost_
select t1.treatment_type_description from treatment_types as t1 join treatments as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by t1.treatment_type_code order by sum(t2.cost_of_treatment) desc limit 1
select t1.treatment_type_description from treatment_types as t1 join treatments as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by t1.treatment_type_code order by sum(t2.cost_of_treatment) desc limit 1
select t1.owner_id,  t1.zip_code from dogs as t1 join payments as t2 on t1.dog_id  =  t2.dog_id group by t1.owner_id order by sum(t2.charge_amount) desc limit 1;
select t1.owner_id,  t1.zip_code from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t2.total_cost) desc limit 1;
select t1.professional_id,  t1.cell_number from professionals as t1 join treatment_types as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*)  >=  2;
select t1.professional_id,  t2.cell_number from professionals as t1 join treatment_types as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*)  >=  2;
select first_name,  last_name from professionals where cost_of_treatment  <  (select avg(cost_of_treatment) from treatment_types);
select first_name,  last_name from professionals where cost_of_treatment  <  (select avg(cost_of_treatment) from treatments);
select t1.date_of_treatment,  t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id;
select t1.date_of_treatment,  t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id;
select t1.cost_of_treatment,  t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code;
select t1.cost_of_treatment,  t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code;
select t1.first_name,  t1.last_name,  t2.size_code from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id;
select t1.first_name,  t1.last_name,  t1.size_code from owners as t1 join dogs as t2 on t1.dog_id  =  t2.dog_id;
select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;
select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.dog_id  =  t2.dog_id;
select t1.name,  t2.date_of_treatment from dogs as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by t1.breed_code order by count(*) desc limit 1;
select t1.name,  t1.date_of_treatment from dogs as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by t1.breed_code order by count(*) desc limit 1;
select t1.first_name,  t2.name from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t2.state  =  "Virginia";
select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.dog_id  =  t2.dog_id where t1.state  =  "virginia";
select date_of_birth,  date_departed from dogs where date_arrived  =  t1.date_arrived and date_departed  =  t2.date_departed;
select date_of_treatment,  date_arrived from treatments where treatment_type_code  =  "treatment";
select t2.first_name,  t2.last_name from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t1.dog_id  =  dogs.dog_id order by t1.dog_id desc limit 
select t2.first_name,  t2.last_name from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id order by t1.dog_id limit 1;
select email_address from professionals where state  =  "hawaii" or state  =  "wisconsin";
select email_address from professionals where state  =  "hawaii" or state  =  "wisconsin";
select date_of_birth,  date_departed from dogs;
select date_of_birth,  date_departed from dogs;
select count(*) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id group by t1.dog_id having count(*)  =  0;
select count(*) from treatment_types as t1 join dogs as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by t1.treatment_type_code;
select count(*) from professionals as t1 join treatment_types as t2 on t1.role_code  =  t2.role_code group by t1.role_code;
select count(*) from professionals as t1 join dogs as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id;
select t2.role_code,  t1.street,  t1.city,  t1.state from professionals as t1 join owners as t2 on t1.professional_id  =  t2.professional_id where t1.street like '%west%';
select t1.role_code,  t1.street,  t1.city,  t1.state from professionals as t1 join cities as t2 on t1.city  =  t2.city where t2.name like '%west%';
select first_name,  last_name,  email_address from owners where state  =  "north";
select first_name,  last_name,  email_address from owners where state like '%north%';
select count(*) from dogs where age  <  (select avg(age) from dogs);
select count(*) from dogs where age  <  (select avg(age) from dogs);
select cost_of_treatment from treatments order by date_of_treatment desc limit 1;
select cost_of_treatment from treatments order by date_of_treatment desc limit 1;
select count(*) from dogs where size_code not in (select size_code from treatments);
select count(*) from dogs where size_code not in (select size_code from treatments);
select count(*) from owners where owner_id not in (select dog_id from dogs);
select count(*) from owners where dog_id is null;
select count(*) from professionals where role_code !=  "d";
select count(*) from professionals where role_code !=  "dog_professional";
select t2.name,  t2.age,  t2.weight from dogs as t1 join dogs as t2 on t1.dog_id  =  t2.dog_id where abandon_yn  =  '1';
select t2.name,  t2.age,  t2.weight from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t1.abandoned_yn  =  1;
select avg(age) from dogs;
select avg(age) from dogs;
select age from dogs order by dog_id desc limit 1;
select date_of_birth from dogs order by age asc limit 1;
select t1.charge_type,  t1.charge_amount from charges as t1 join treatment_types as t2 on t1.charge_type_code  =  t2.treatment_type_code;
select charge_type,  sum(charge_amount) from charges group by charge_type;
select cost_of_treatment from treatment_types order by cost_of_treatment desc limit 1;
select charge_amount from charges order by charge_amount desc limit 1;
select email_address,  home_phone,  cell_number from professionals;
select email_address,  home_phone,  cell_number from professionals;
select distinct(t1.breed_code),  distinct(t2.size_code) from dogs as t1 join sizes as t2 on t1.size_code  =  t2.size_code;
select distinct t1.breed_code,  t2.size_code from dogs as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code;
select t1.first_name,  t2.treatment_description from professionals as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code;
select t1.first_name,  t1.description from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where t2.treatment_type_code  =  "treatment_type_code";
select count(*) from singer;
select count(*) from singer;
select name from singer order by net_worth_millions asc;
select name from singer order by net_worth_millions asc;
select birth_year,  citizenship from singer;
select birth_year,  citizenship from singer;
select name from singer where citizenship !=  "france";
select name from singer where citizenship !=  'french';
select name from singer where birth_year  =  1948 or birth_year  =  1949;
select name from singer where birth_year between 1948 and 1949;
select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id order by t2.sales desc limit 1;
select t2.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id order by net_worth_millions desc limit 1;
select distinct citizenship,  count(*) from singer group by citizenship;
select count(*),  citizenship from singer group by citizenship;
select citizenship from singer group by citizenship order by count(*) desc limit 1;
select citizenship from singer group by citizenship order by count(*) desc limit 1;
select distinct citizenship,  max(net_worth_millions) from singer group by citizenship;
select max(net_worth_millions) from singer where citizenship  =  'american';
select title,  name from song intersect select t1.title,  t2.name from song as t1 join singer as t2 on t1.singer_id  =  t2.singer_id;
select title,  name from song;
select distinct t1.name from song as t1 join singer as t2 on t1.singer_id  =  t2.singer_id where t2.net_worth_millions  >  300000;
select distinct t1.name from song as t1 join singer as t2 on t1.singer_id  =  t2.singer_id where t2.net_worth_millions  >  300000;
select name from singer group by name having count(*)  >  1;
select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.name having count(*)  >  1;
select t1.name,  sum(t2.sales) from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.name;
select sum(sales) from song as t1 join singer as t2 on t1.singer_id  =  t2.singer_id;
select name from singer where singer_id not in (select singer_id from song);
select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t2.title != 'song';
select t2.citizenship from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t1.birth_year  <  1945 intersect select t2.citizenship from singer as t1 join song as t2 on t
select citizenship from singer where birth_year between 1945 and 1955;
select count(*) from other_available_features;
select t2.feature_type_name from other_available_features as t1 join ref_property_types as t2 on t1.feature_type_code  =  t2.property_type_code;
select t2.property_type_description from other_property_features as t1 join ref_property_types as t2 on t1.property_id  =  t2.property_type_code;
select t1.property_name from other_property_features as t1 join properties as t2 on t1.property_id  =  t2.property_id where t2.property_type_code  =  'house' intersect select t1.property_name from other_property_features as t