select count(*) from singer;<separator>select count(*) from singer;<separator>select name,  country,  age from singer order by age desc;<separator>select name,  country,  age from singer order by age desc;<separator>select avg(age),  min(age),  max(age) from singer where country  =  "france";<separator>select avg(age),  min(age),  max(age) from singer where country  =  "france";<separator>select t2.song_name,  t2.song_release_year from singer_in_concert as t1 join singer as t2 on t1.singer_id  =  t2.singer_id order by t1.singer_id asc limit 1;<separator>select song_name,  song_release_year from singer order by age limit 1;<separator>select country from singer where age  >  20 group by country;<separator>select country from singer where age  >  20;<separator>select country,  count(*) from singer group by country;<separator>select country,  count(*) from singer group by country;<separator>select song_name from singer where age  >  (select avg(age) from singer);<separator>select song_name from singer where age  >  (select avg(age) from singer);<separator>select location,  name from stadium where capacity between 5000 and 10000;<separator>select location,  name from stadium where capacity between 5000 and 10000;<separator>select max(capacity),  avg(capacity) from stadium;<separator>select avg(capacity),  max(capacity) from stadium;<separator>select t2.name,  t2.capacity from stadium as t1 join stadium_in_concert as t2 on t1.stadium_id  =  t2.stadium_id group by t1.stadium_id order by avg(t1.capacity) desc limit 1;<separator>select t2.name,  t2.capacity from stadium as t1 join stadium_in_concert as t2 on t1.stadium_id  =  t2.stadium_id group by t1.stadium_id order by avg(t1.capacity) desc limit 1;<separator>select count(*) from concert where year  =  2014 or year  =  2015;<separator>select count(*) from concert where year  =  2014 or year  =  2015;<separator>select t2.name,  count(*) from stadium as t1 join singer_in_concert as t2 on t1.stadium_id  =  t2.stadium_id group by t1.stadium_id;<separator>select stadium_id from stadium group by stadium_id;<separator>select t2.name,  t1.capacity from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id where t2.year  >  2014;<separator>select t2.name,  t2.capacity from stadium as t1 join singer_in_concert as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t1.stadium_id order by count(*)<separator>select year from concert group by year order by count(*) desc limit 1;<separator>select year from concert order by year desc limit 1;<separator>select distinct t2.name from stadium as t1 join stadium_in_concert as t2 on t1.stadium_id  =  t2.stadium_id;<separator>select name from stadium where stadium_id not in (select stadium_id from concert);<separator>select country from singer where age  >  40 intersect select country from singer where age  <  30;<separator>select name from stadium where stadium_id not in (select stadium_id from concert where year  =  2014);<separator>select name from stadium where year !=   2014;<separator>select t1.concert_name,  t1.theme,  count(*) from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id group by t1.concert_id;<separator>select t1.concert_name,  t2.theme,  count(*) from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id group by t1.concert_name;<separator>select t1.name,  count(*) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by t1.name;<separator>select t1.name,  count(*) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by t1.singer_id;<separator>select name from concert where year  =  2014;<separator>select t2.name from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id where t1.year  =  2014;<separator>select t1.name,  t1.country from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t2.song_name like '%hey%';<separator>select t1.name,  t1.country from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t2.song_title like '%hey%';<separator>select t1.name,  t1.location from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id where t2.year  =  2014 intersect select t1.name,  t1.location from stadium as t<separator>select t2.name,  t2.location from stadium as t1 join stadium_in_concert as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  =  2014 intersect select t2.name,  t2.location<separator>select count(*) from stadium as t1 join singer_in_concert as t2 on t1.stadium_id  =  t2.stadium_id join concert as t3 on t2.concert_id  =  t3.concert_id where t3.highest  =  t1.capacity<separator>select count(*) from stadium as t1 join singer_in_concert as t2 on t1.stadium_id  =  t2.stadium_id join concert as t3 on t2.concert_id  =  t3.concert_id where t3.capacity  = ( select max(<separator>select count(*) from pets where weight  >  10;<separator>select count(*) from pets where weight  >  10;<separator>select pet_age from pets order by pet_age desc limit 1;<separator>select weight from pets where pet_age  =   1;<separator>select max(weight),  t1.pet_type from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t2.pet_type;<separator>select max(weight),  pet_type from pets group by pet_type;<separator>select count(*) from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.age  >  20;<separator>select count(*) from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.age  >  20;<separator>select count(*) from has_pet where pet_type  =  "dog" and sex  =  "f";<separator>select count(*) from has_pet where pet_type  =  "dog" and sex  =  "female";<separator>select count(distinct pet_type) from pets;<separator>select count(distinct pettype) from has_pet;<separator>select fname from student where pet_type  =  "cat" or pet_type  =  "dog";<separator>select t1.fname from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.pet_type  =  "cat" intersect select t1.fname from has_pet as t1 join student as t2 on t1.<separator>select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid in (select petid from pets where pet_type  =  'cat' intersect select petid from pets where pet_type  =<separator>select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid in (select petid from pets where pet_type  =  "cat" intersect select petid from pets where pet_type  =<separator>select t2.major,  t2.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.petid where t1.petid  =  'cat';<separator>select t1.major from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  -1 group by t1.major;<separator>select stuid from has_pet except select t1.stuid from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.major  =  "cat";<separator>select stuid from has_pet except select t1.stuid from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.sex  = 'm' and t2.major  =  'cs';<separator>select fname,  age from student where stuid in ( select stuid from has_pet where petid !=  "cat" );<separator>select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  'dog' except select t1.fname from student as t1 join has_pet as t2 on t1.st<separator>select pet_type,  weight from pets order by pet_age desc limit 1;<separator>select pettype,  weight from pets order by pet_age desc limit 1;<separator>select pet_id,  weight from pets where pet_age  >  1;<separator>select petid,  weight from pets where pet_age  >  1;<separator>select avg(age),  max(age) from pets group by pet_type;<separator>select avg(age),  max(age) from pets group by pet_type;<separator>select avg(weight),  pet_type from has_pet group by pet_type;<separator>select avg(weight),  pet_type from has_pet group by pet_type;<separator>select fname,  age from student where stuid in (select stuid from has_pet);<separator>select t1.fname,  t1.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.fname;<separator>select t1.petid from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.lname  = 'smith';<separator>select t1.petid from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.lname  = 'smith';<separator>select count(*),  stuid from has_pet group by stuid having count(*)  >  1 intersect select stuid from student;<separator>select stuid,  count(*) from has_pet group by stuid;<separator>select fname,  lname,  age,  sex from student where stuid in ( select stuid from has_pet group by stuid having count(*)  >  1);<separator>select t1.fname,  t1.lname,  t1.sex from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid having count(*)  >  1;<separator>select t2.lname from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t1.petid  =  3 and t2.sex  =  'f';<separator>select t2.lname from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t1.petid  =  3 and t2.sex  =  'f';<separator>select avg(age) from student where stuid not in (select stuid from has_pet);<separator>select avg(age) from student where stuid not in (select stuid from has_pet);<separator>select count(*) from continents;<separator>select count(*) from continents;<separator>select continent, "continent",  count(*) from countries group by continent;<separator>select t1.continent,  t2.continent,  count(*) from continents as t1 join countries as t2 on t1.continent  =  t2.continent group by t1.continent;<separator>select count(*) from countries;<separator>select count(*) from countries;<separator>select t1.maker,  t1.fullname,  count(*) from car_makers as t1 join car_names as t2 on t1.id  =  t2.makeid group by t1.maker;<separator>select t1.fullname,  t1.id,  count(*) from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id;<separator>select t1.model from car_names as t1 join cars_data as t2 on t1.make  =  t2.make where t2.horsepower  =  min(t2.horsepower) group by t1.model;<separator>select t1.model from car_names as t1 join cars_data as t2 on t1.make  =  t2.make where t2.horsepower  =  min(t2.horsepower) order by t1.horsepower;<separator>select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.make where t2.weight  <  (select avg(t2.weight) from cars_data);<separator>select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.make where t2.weight  <  (select avg(t2.weight) from cars_data);<separator>select t2.maker from car_makers as t1 join cars_data as t2 on t1.id  =  t2.makeid where t1.year  =  1970;<separator>select t1.maker from car_makers as t1 join car_names as t2 on t1.id  =  t2.make where t2.year  =  1970;<separator>select t1.maker,  t2.production from car_makers as t1 join cars_data as t2 on t1.id  =  t2.makeid where t1.year  =  min(t1.year) order by t2.production;<separator>select t1.maker,  t2.year from car_makers as t1 join cars_data as t2 on t1.id  =  t2.makeid where t2.year  =  (select min(year) from cars_data);<separator>select distinct t1.model from car_makers as t1 join car_names as t2 on t1.id  =  t2.make where t2.year  >  1980;<separator>select distinct t1.model from car_makers as t1 join cars_data as t2 on t1.id  =  t2.make where t2.year  >  1980;<separator>select t2.continent,  count(*) from continents as t1 join car_makers as t2 on t1.continent  =  t2.continent group by t1.continent;<separator>select t2.continent,  count(*) from continents as t1 join car_makers as t2 on t1.continent  =  t2.continent group by t1.continent;<separator>select t2.country from countries as t1 join car_makers as t2 on t1.continent  =  t2.continent group by t1.continent order by count(*) desc limit 1;<separator>select t2.country from car_makers as t1 join countries as t2 on t1.country  =  t2.continent order by count(*) desc limit 1;<separator>select maker,  count(*),  maker from car_makers group by maker;<separator>select count(distinct maker),  maker,  fullname from car_makers;<separator>select t2.accelerate from car_names as t1 join car_makers as t2 on t1.make  =  t2.maker where t1.make  =  "amc hornet sportabout";<separator>select sum(accelerate) from car_names where make  =  "amc hornet sportabout";<separator>select count(*) from car_makers where country  =  "france";<separator>select count(*) from car_makers where country  =  "france";<separator>select count(*) from car_makers where country  =  "usa";<separator>select count(*) from car_makers where country  =  "united states";<separator>select avg(t1.mpg) from car_names as t1 join cars_data as t2 on t1.make  =  t2.make where t2.cylinders  =  4;<separator>select avg(t1.mpg) from car_names as t1 join cars_data as t2 on t1.make  =  t2.make where t2.cylinders  =  4;<separator>select min(weight) from cars_data where cylinders  =  8 and year  =  1974;<separator>select min(t1.weight) from car_names as t1 join cars_data as t2 on t1.make  =  t2.make where t2.year  =  1974 and t2.cylinder  =  8;<separator>select maker,  model from car_makers;<separator>select maker,  model from car_makers;<separator>select countryname,  maker from car_makers group by country order by count(*) desc limit 1;<separator>select t1.country,  t1.id from car_makers as t1 join countries as t2 on t1.country  =  t2.continent group by t1.country having count(*)  >=  1;<separator>select count(*) from cars_data where horsepower  >  150;<separator>select count(*) from cars_data where horsepower  >  150;<separator>select avg(t1.weight) from cars_data as t1 join cars_data as t2 on t1.id  =  t2.id group by t1.year;<separator>select avg(t1.weight),  t2.year from cars_data as t1 join car_names as t2 on t1.make  =  t2.makeid group by t1.year;<separator>select country from countries where continent  =  'europe' group by country having count(*)  >=  3;<separator>select country from countries where continent  =  'europe';<separator>select max(horsepower),  maker from car_names where cylinders  =  3;<separator>select max(horsepower),  maker from cars_data where cylinders  =  3;<separator>select t1.model from car_makers as t1 join car_names as t2 on t1.id  =  t2.make where t2.mpg  =  max(t2.mpg) group by t1.model;<separator>select t2.model from car_names as t1 join cars_data as t2 on t1.make  =  t2.makeid order by t2.mpg desc limit 1;<separator>select avg(horsepower) from cars_data where year  <  1980;<separator>select avg(horsepower) from cars_data where year  <  1980;<separator>select avg(edispl) from car_names where make  =  "volvo";<separator>select avg(edispl) from car_names where make  =  "volvo";<separator>select max(accelerate) from cars_data where cylinders  >  1 group by cylinders;<separator>select max(cylinders) from cars_data;<separator>select t1.model from car_makers as t1 join car_names as t2 on t1.id  =  t2.makeid group by t1.model order by count(*) desc limit 1;<separator>select t1.model from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t2.model order by count(*) desc limit 1;<separator>select count(*) from cars_data where cylinders  >  4;<separator>select count(*) from cars_data where cylinders  >  4;<separator>select count(*) from car_makers where year  =  1980;<separator>select count(*) from cars_data where year  =  1980;<separator>select count(*) from car_makers as t1 join car_names as t2 on t1.id  =  t2.make where t2.fullname  =  "american motor company";<separator>select count(*) from car_makers as t1 join car_names as t2 on t1.id  =  t2.make where t1.maker  =  "american motor company";<separator>select maker,  max(makeid) from car_makers group by maker;<separator>select maker,  makerid from car_makers where count(*)  >  3;<separator>select distinct t1.model from car_makers as t1 join car_names as t2 on t1.maker  =  t2.makeid where t2.fullname  =  "general motors" or t2.weight  >  3500;<separator>select distinct t1.model from car_makers as t1 join cars_data as t2 on t1.makeid  =  t2.makeid where t2.weight  >  3500 intersect select distinct t1.model from car_makers as t1 join cars_data as t2 on t<separator>select t1.year from car_data as t1 join cars_data as t2 on t1.id  =  t2.id where t2.weight between 3000 and 4000;<separator>select year from cars_data where cylinders  <  4000 intersect select year from cars_data where cylinders  >  3000;<separator>select t1.horsepower from car_data as t1 join cars_data as t2 on t1.id  =  t2.id group by t1.horsepower order by max(t2.accelerate) limit 1;<separator>select t1.horsepower from car_data as t1 join cars_data as t2 on t1.id  =  t2.id group by t1.horsepower order by sum(t2.accelerate) desc limit 1;<separator>select cylinders from car_names where cylinders  =  (select min(cylinder) from car_names);<separator>select cylinders from car_names where make  =  'volvo' group by cylinders order by min(accelerate) desc limit 1;<separator>select count(*) from cars_data where accelerate  >  (select max(accelerate) from cars_data);<separator>select count(*) from cars_data where accelerate  >  (select max(accelerate) from cars_data);<separator>select count(*) from countries group by continent having count(*)  >  2;<separator>select count(*) from countries group by continent having count(*)  >  2;<separator>select count(*) from cars_data where cylinders  >  6;<separator>select count(*) from cars_data where cylinders  >  6;<separator>select t2.horsepower from cars_data as t1 join car_names as t2 on t1.make  =  t2.makeid where t1.cylinders  =  4;<separator>select t2.horsepower from car_names as t1 join cars_data as t2 on t1.make  =  t2.make where t1.cylinder  =  4;<separator>select t1.makeid,  t1.make from car_makers as t1 join cars_data as t2 on t1.id  =  t2.makeid where t2.horsepower  >  (select min(horsepower) from cars_data);<separator>select t1.make,  t1.maker from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.make where t2.horsepower  <  4;<separator>select max(t1.mpg) from car_names as t1 join cars_data as t2 on t1.make  =  t2.make where t2.cylinders  =  8 or t2.year  <  1980;<separator>select max(mpg) from cars_data where cylinders  =  8 or year  <  1980;<separator>select t2.model from car_makers as t1 join car_names as t2 on t1.makeid  =  t2.makeid where t1.maker !=  "ford motor company" and t2.cylinders  <  3500;<separator>select model from car_names where cylinders  <  3500 except select make from car_makers where id  =  1;<separator>select country from countries except select t1.country from car_makers as t1 join car_names as t2 on t1.id  =  t2.makeid;<separator>select distinct country from countries where continent  =  'no car makers';<separator>select t1.maker,  t1.maker from car_makers as t1 join car_makers as t2 on t1.id  =  t2.maker group by t1.maker having count(*)  >=  3 intersect select t1.maker,  t1.maker from car_<separator>select t1.id,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 and sum(t2.model)  >  3;<separator>select t1.country,  t2.name from countries as t1 join car_makers as t2 on t1.continent  =  t2.continent group by t1.continent having count(*)  >  3 intersect select t1.country,  t2.name from countries<separator>select t1.continent,  t2.country from countries as t1 join car_makers as t2 on t1.continent  =  t2.continent group by t1.continent having count(*)  >  3 intersect select t1.continent,  t2.country<separator>select country from airlines where airline  =  "jetblue airways";<separator>select country from airlines where airline  =  "jetblue airways";<separator>select t2.abbreviation from airlines as t1 join airlines as t2 on t1.uid  =  t2.uid where t1.airline  =  "jetblue airways";<separator>select t2.abbreviation from airlines as t1 join airports as t2 on t1.airline  =  t2.airline where t1.abbreviation  =  'jetblue';<separator>select t1.abbreviation,  t2.abbreviation from airlines as t1 join airports as t2 on t1.airline  =  t2.airline where t2.country  =  "usa";<separator>select t1.airline,  t1.abbreviation from airlines as t1 join airlines as t2 on t1.uid  =  t2.uid where t2.country  =  'usa';<separator>select t2.airportcode,  t2.airportname from airports as t1 join cities as t2 on t1.airportcode  =  t2.airportcode where t1.city  =  'anthony';<separator>select airportcode,  airportname from airports where city  =  'anthony';<separator>select count(*) from airlines;<separator>select count(*) from airlines;<separator>select count(*) from airports;<separator>select count(*) from airports;<separator>select count(*) from flights;<separator>select count(*) from flights;<separator>select t1.abbreviation from airlines as t1 join airlines as t2 on t1.uid  =  t2.uid where t2.abbreviation  =  'ual';<separator>select airline from airlines where abbreviation  =  'ual';<separator>select count(*) from airlines where country  =  'usa';<separator>select count(*) from airlines where country  =  'usa';<separator>select city,  country from airports where airportcode  =  'alton';<separator>select city,  country from airports where airportcode  =  'alton';<separator>select airportname from airports where airportcode  =  'ako';<separator>select airportname from airports where airportcode  =  'ako';<separator>select airportname from airports where city  =  'aberdeen';<separator>select airportname from airports where city  =  'aberdeen';<separator>select count(*) from flights where sourceairport  =  "apg";<separator>select count(*) from flights where sourceairport  =  "apg";<separator>select count(*) from flights where destairport  =  'ato';<separator>select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportcode  =  "ato";<separator>select count(*) from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport where t1.city  =  "aberdeen";<separator>select count(*) from flights where sourceairport  =  'aberdeen';<separator>select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportcode  =  "aberdeen";<separator>select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportcode  =  "aberdeen";<separator>select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportcode  =  "aberdeen" and t1.destairport  =  t2.airportcode;<separator>select count(*) from flights where sourceairport  =  "aberdeen" and destairport  =  "ashley";<separator>select count(*) from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airline  =  'jetblue airways';<separator>select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.uid where t2.airline  =  'jetblue airways';<separator>select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.uid where t2.airline  =  "united airlines" and t1.destairport  =  "asy";<separator>select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.uid where t1.destairport  =  "asy";<separator>select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.uid where t2.airline  =  "united airlines" and t1.destairport  =  "ahd";<separator>select count(*) from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t2.sourceairport  =  'ahd';<separator>select count(*) from airlines as t1 join airports as t2 on t1.airline  =  t2.airline where t2.countryabbrev  =  'aberdeen';<separator>select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.uid where t2.airline  =  "united" and t1.destairport  =  "aberdeen";<separator>select t2.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.city order by count(*) desc limit 1;<separator>select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.city order by count(*) desc limit 1;<separator>select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.city order by count(*) desc limit 1;<separator>select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.city order by count(*) desc limit 1;<separator>select airportcode from airports order by count(*) desc limit 1;<separator>select airportcode from airports order by count(*) desc limit 1;<separator>select airportcode from airports order by count(*) desc limit 1;<separator>select airportcode from airports order by count(*) desc limit 1;<separator>select airline from flights group by airline order by count(*) desc limit 1;<separator>select airline from flights group by airline order by count(*) desc limit 1;<separator>select t1.abbreviation,  t1.country from airlines as t1 join flights as t2 on t1.uid  =  t2.airline group by t1.abbreviation order by count(*) desc limit 1;<separator>select t1.abbreviation,  t2.country from airlines as t1 join airports as t2 on t1.airline  =  t2.airline group by t1.airline order by count(*) desc limit 1;<separator>select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'ahd';<separator>select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.sourceairport  =  "ahd";<separator>select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'ahd';<separator>select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  "ahd";<separator>select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.sourceairport  =  'apg' intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid  = <separator>select t1.airline from airlines as t1 join airports as t2 on t1.airline  =  t2.airline where t2.airportcode  =  "apg" intersect select t1.airline from airlines as t1 join airports as t2 on t1.airline  <separator>select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'cvo' intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid  = <separator>select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.sourceairport  =  "cvo" intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid  = <separator>select airline from airlines where count(*)  >=  10;<separator>select airline from airlines where count(*)  >=  10;<separator>select airline from airlines where count(*)  <  200;<separator>select airline from airlines where count(*)  <  200;<separator>select t2.flightno from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airline  =  "united airlines";<separator>select flightno from flights where airline  =  'united';<separator>select flightno from flights where sourceairport  =  "apg";<separator>select flightno from flights where sourceairport  =  "apg";<separator>select t2.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t1.destairport  =  "apg";<separator>select flightno from flights where destairport  =  "apg";<separator>select t2.flightno from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport where t1.countryabbrev  =  "aberdeen ";<separator>select flightno from flights where sourceairport  =  'aberdeen';<separator>select t2.flightno from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport where t1.countryabbrev  =  "aberdeen";<separator>select flightno from flights where destairport  =  'aberdeen';<separator>select count(*) from flights where destairport  =  "aberdeen" or destairport  =  "abilene";<separator>select count(*) from flights where destairport  =  "aberdeen" or destairport  =  "abilene";<separator>select airportname from airports where airportcode not in ( select airportcode from flights );<separator>select airportcode from airports where airportname not in (select airportname from flights);<separator>select count(*) from employee;<separator>select count(*) from employee;<separator>select name from employee order by age asc;<separator>select name from employee order by age asc;<separator>select count(*),  t1.city from employee as t1 join city as t2 on t1.city  =  t2.city group by t2.city;<separator>select count(*),  city from employee group by city;<separator>select city from employee where age  >  30 group by city having count(*)  >=  2;<separator>select city from employee group by city having count(*)  >  1;<separator>select count(*),  location from shop group by location;<separator>select count(*),  location from shop group by location;<separator>select manager_name,  location from shop order by number_products desc limit 1;<separator>select t2.manager_name,  t2.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;<separator>select min(number_products),  max(number_products) from shop;<separator>select min(number_products),  max(number_products) from shop;<separator>select t1.name,  t1.location,  t1.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t2.shop_id order by count(*) desc;<separator>select t1.name,  t1.location,  t1.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id order by t2.number_products desc;<separator>select name from shop where number_products  >  (select avg(number_products) from shop);<separator>select t2.name from shop as t1 join evaluation as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by avg(t2.number_products) desc limit 1;<separator>select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t1.employee_id order by count(*) desc limit 1;<separator>select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t2.employee_id order by count(*) desc limit 1;<separator>select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t1.employee_id order by sum(t2.bonus) desc limit 1;<separator>select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t2.employee_id order by sum(t2.bonus) desc limit 1;<separator>select name from employee where employee_id not in (select employee_id from evaluation);<separator>select name from employee where employee_id not in (select employee_id from evaluation);<separator>select t2.name from hiring as t1 join shop as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;<separator>select t2.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;<separator>select t2.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id where t1.employee_id is null;<separator>select name from shop where number_products  =   0;<separator>select count(*),  t1.name from hiring as t1 join shop as t2 on t1.shop_id  =  t2.shop_id group by t2.name;<separator>select count(*),  t2.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id;<separator>select sum(bonus) from evaluation;<separator>select sum(bonus) from evaluation;<separator>select * from hiring;<separator>select * from hiring;<separator>select t1.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id where t2.number_products  <  3000 intersect select t1.district from shop as t1 join hiring as t2 on t1.shop_<separator>select t1.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id where t2.number_products  <  3000 intersect select t1.district from shop as t1 join hiring as t2 on t1.shop_<separator>select count(distinct location) from shop;<separator>select count(distinct location) from shop;<separator>select count(*) from documents;<separator>select count(*) from documents;<separator>select document_id,  document_name,  document_description from documents;<separator>select document_id,  document_name,  document_description from documents;<separator>select document_name,  document_id from documents where document_description like '%w%';<separator>select document_name,  document_id from documents where document_description like '%w%';<separator>select document_id,  template_id,  document_name from documents where document_name  =  "robbin cv";<separator>select document_id,  document_name,  document_description from documents where document_name  =  "robbin cv";<separator>select count(*) from documents group by document_id;<separator>select count(*) from documents group by document_id;<separator>select count(*) from documents where document_name  =  "ppt";<separator>select count(*) from documents where document_type_code  =  'ppt';<separator>select t1.template_id,  count(*) from documents as t1 join templates as t2 on t1.document_id  =  t2.document_id group by t2.template_id;<separator>select distinct(t1.template_id),  count(*) from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id group by t1.template_id;<separator>select t1.template_id,  t1.template_type_code from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id group by t1.document_id order by count(*) desc limit 1;<separator>select t1.template_id,  t1.template_type_code from templates as t1 join documents as t2 on t1.template_id  =  t2.template_id group by t1.template_id order by count(*) desc limit 1;<separator>select t1.template_id from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id group by t2.template_id having count(*)  >  1;<separator>select t1.template_id from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id group by t1.template_id having count(*)  >  1;<separator>select template_id from templates except select t1.template_id from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id;<separator>select template_id from templates except select t1.template_id from templates as t1 join documents as t2 on t1.template_id  =  t2.template_id;<separator>select count(*) from templates;<separator>select count(*) from templates;<separator>select t1.template_id,  t2.version_number,  t3.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code join documents as t3 on t<separator>select template_id,  version_number,  template_type_code from templates;<separator>select distinct t1.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code;<separator>select distinct template_type_code from ref_template_types;<separator>select template_id from templates where template_type_code  =  'ppt' or template_type_code  =  'pp';<separator>select template_id from templates where template_type_code  =  'ppt' or template_type_code  =  'pp';<separator>select count(*) from templates where template_type_code  =  'cv';<separator>select count(*) from templates where template_type_code  =  "cv";<separator>select version_number,  template_type_code from templates where version_number  >  5;<separator>select t1.version_number,  t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t1.version_number  >  5;<separator>select t1.template_type_code,  count(*) from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code group by t2.template_type_code;<separator>select distinct template_type_code,  count(*) from templates group by template_type_code;<separator>select template_type_code from templates group by template_type_code order by count(*) desc limit 1;<separator>select t1.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code order by count(*) desc limit 1;<separator>select distinct t1.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code group by t1.template_type_code having count(*)  <  3;<separator>select template_type_code from ref_template_types where template_type_code  <  3;<separator>select min(version_number),  template_type_code from templates group by template_type_code;<separator>select t1.version_number,  t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code;<separator>select t1.template_type_code from documents as t1 join ref_template_types as t2 on t1.document_id  =  t2.template_id where t1.document_name  =  "data base";<separator>select t1.template_type_code from documents as t1 join ref_template_types as t2 on t1.document_id  =  t2.template_id where t1.document_name  =  "data base";<separator>select document_name from documents where template_type_code  =  'bk';<separator>select document_name from documents where template_type_code  =  'bk';<separator>select t1.template_type_code,  count(*) from templates as t1 join documents as t2 on t1.template_id  =  t2.document_id group by t1.template_type_code;<separator>select distinct template_type_code,  count(*) from documents group by template_type_code;<separator>select t1.template_type_code from documents as t1 join ref_template_types as t2 on t1.document_id  =  t2.template_id group by t1.document_id order by count(*) desc limit 1;<separator>select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id  =  t2.document_id group by t1.template_type_code order by count(*) desc limit 1;<separator>select distinct template_type_code from templates except select t1.template_type_code from templates as t1 join documents as t2 on t1.document_id  =  t2.document_id;<separator>select template_type_code from ref_template_types except select template_type_code from documents;<separator>select template_type_code,  template_type_description from ref_template_types;<separator>select template_type_code,  template_type_description from ref_template_types;<separator>select template_type_description from ref_template_types where template_type_code  =  "ad";<separator>select template_type_description from ref_template_types where template_type_code  =  'ad';<separator>select t2.template_type_code from ref_template_types as t1 join documents as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_description  =  "book";<separator>select t2.template_type_code from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_type_description  =  "book";<separator>select distinct(templates.template_type_description) from documents as t1 join templates as t2 on t1.document_id  =  t2.document_id;<separator>select distinct t1.other_details from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id join templates as t3 on t2.template_type_code  =  t3.template_type_code;<separator>select t1.template_id from ref_template_types as t1 join templates as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_description  =  "presentation";<separator>select document_id from documents where document_description  =  'presentation';<separator>select count(*) from paragraphs;<separator>select count(*) from paragraphs;<separator>select count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  = 'summer show';<separator>select count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "summer show";<separator>select other_details from paragraphs where document_name  =  "korea ";<separator>select other_details from documents where document_name  =  "korea";<separator>select document_id,  document_name,  document_description from documents where document_name  =  'welcome to ny';<separator>select document_id,  document_name from documents where document_name  =  "welcome to ny";<separator>select other_details from documents where document_name  =  "customer reviews";<separator>select other_details from documents where document_name  =  "customer reviews";<separator>select document_id,  count(*) from documents group by document_id;<separator>select document_id,  count(*) from documents group by document_id;<separator>select document_id,  document_name,  count(*) from documents group by document_id;<separator>select document_id,  document_name,  count(*) from documents group by document_id;<separator>select document_id from documents group by document_id having count(*)  >=  2;<separator>select document_id from documents group by document_id having count(*)  >=  2;<separator>select document_id,  document_name from documents order by count(*) desc limit 1;<separator>select t1.document_id,  t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) desc limit 1;<separator>select document_id from documents group by document_id order by count(*) desc limit 1;<separator>select document_id from documents order by count(*) desc limit 1;<separator>select document_id from documents group by document_id having count(*)  >=  1 intersect select document_id from documents group by document_id having count(*)  >=  2;<separator>select document_id from documents group by document_id having count(*)  >=  1 intersect having count(*)  <=  2;<separator>select document_id from documents where document_name  =  "brazil" intersect select document_id from documents where document_name  =  "ireland";<separator>select document_id from documents where document_description like '%brazil%' intersect select document_id from documents where document_description like '%ireland%';<separator>select count(*) from teacher;<separator>select count(*) from teacher;<separator>select name from teacher order by age asc;<separator>select name from teacher order by age asc;<separator>select age,  hometown from teacher;<separator>select t1.age,  t2.hometown from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id;<separator>select name from teacher where hometown!= "little lever urban district";<separator>select name from teacher where hometown!= "little lever urban district";<separator>select t2.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id where t1.age  =  32 or t1.age  =  33;<separator>select name from teacher where age  =  32 or age  =  33;<separator>select hometown from teacher order by age desc limit 1;<separator>select t2.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id where t1.age  <  t2.age order by t1.age limit 1;<separator>select hometown,  count(*) from teacher group by hometown;<separator>select hometown,  count(*) from teacher group by hometown;<separator>select hometown from teacher group by hometown order by count(*) desc limit 1;<separator>select hometown from teacher group by hometown order by count(*) desc limit 1;<separator>select hometown from teacher group by hometown having count(*)  >=  2;<separator>select hometown from teacher group by hometown having count(*)  >=  2;<separator>select t1.name,  t2.course from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id;<separator>select t1.name,  t2.course from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id;<separator>select t1.name,  t2.course from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id order by t1.name;<separator>select t1.name,  t2.course from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id order by t1.name;<separator>select t2.name from course as t1 join teacher as t2 on t1.course_id  =  t2.course_id where t1.name  =  "math";<separator>select t2.name from course as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id where t1.course_id  =  "math";<separator>select t1.name,  count(*) from course as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id group by t2.name;<separator>select t1.name,  count(*) from course as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id group by t2.name;<separator>select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id group by t1.teacher_id having count(*)  >=  2;<separator>select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id group by t1.teacher_id having count(*)  >=  2;<separator>select name from teacher where teacher_id not in (select teacher_id from course_arrange);<separator>select name from teacher where teacher_id not in (select teacher_id from course_arrange);<separator>select count(*) from visitor where age  <  30;<separator>select name from visitor where level_of_membership  >  4 order by level;<separator>select avg(t1.age) from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id where t2.level_of_membership  <  4;<separator>select t2.name,  t2.level_of_membership from visitor as t1 join visitor as t2 on t1.museum_id  =  t2.museum_id where t1.level_of_membership  >  4 order by t2.age;<separator>select t1.museum_id,  t1.name from museum as t1 join visit as t2 on t1.museum_id  =  t2.museum_id group by t1.museum_id order by count(*) desc limit 1;<separator>select avg(num_of_staff) from museum where open_year  <  2009;<separator>select open_year,  num_of_staff from plaza museum;<separator>select name from museum where num_of_staff  >  (select min(num_of_staff) from museum);<separator>select t1.id,  t1.name,  t1.age from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id group by t2.visitor_id having count(*)  >  1;<separator>select t1.id,  t2.name,  t3.level_of_membership from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id group by t2.visitor_id order by sum(t3.total_sp<separator>select t1.museum_id,  t1.name from visit as t1 join museum as t2 on t1.museum_id  =  t2.museum_id group by t1.museum_id order by count(*) desc limit 1;<separator>select name from museum where museum_id not in (select museum_id from visit);<separator>select t2.name,  t2.age from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id group by t1.visitor_id order by sum(t1.num_of_ticket) desc limit 1;<separator>select avg(t1.num_of_ticket),  max(t1.num_of_ticket) from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id group by t1.visitor_id;<separator>select sum(t2.total_spent) from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id where t1.level_of_membership  =  1;<separator>select t2.name from visit as t1 join museum as t2 on t1.museum_id  =  t2.museum_id where t1.open_year  <  2009 intersect select t2.name from visit as t1 join museum as t2 on t1.museum<separator>select count(*) from visit where open_year  <  2010;<separator>select count(*) from museum where open_year  >  2013 or open_year  <  2008;<separator>select count(*) from players;<separator>select count(*) from players;<separator>select count(*) from matches;<separator>select count(*) from matches;<separator>select first_name,  birth_date from players where country_code  =  'usa';<separator>select first_name,  birth_date from players where country_code  =  'usa';<separator>select avg(loser_age),  avg(winner_age) from matches;<separator>select avg(loser_age),  avg(winner_age) from matches;<separator>select avg(t1.ranking) from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id;<separator>select avg(t1.ranking) from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id;<separator>select max(t1.ranking) from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id;<separator>select t1.loser_rank from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id group by t1.loser_id order by sum(t2.ranking) desc limit 1;<separator>select count(distinct country_code) from players;<separator>select count(distinct country_code) from players;<separator>select count(distinct winner_name) from matches;<separator>select count(distinct winner_name) from matches;<separator>select tourney_name from matches group by tourney_name having count(*)  >  10;<separator>select tourney_name from matches group by tourney_name having count(*)  >  10;<separator>select winner_name from matches where year  =  2013 intersect select winner_name from matches where year  =  2016;<separator>select t1.first_name,  t1.last_name from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id where t2.year  =  2013 intersect select t1.first_name,  t1.last<separator>select count(*) from matches where year  =  2013 or year  =  2016;<separator>select count(*) from matches where year  =  2013 or year  =  2016;<separator>select t1.country_code,  t1.first_name from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id where t2.tourney_name  =  "wta" intersect select t1.country_code, <separator>select t1.first_name,  t1.last_name,  t2.country_code from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id where t1.tourney_name  =  "wta" intersect select<separator>select first_name,  country_code from players order by birth_date desc limit 1;<separator>select first_name,  country_code from players order by birth_date desc limit 1;<separator>select first_name,  last_name from players order by birth_date;<separator>select first_name,  last_name from players order by birth_date;<separator>select first_name,  last_name from players where hand  =  "l" order by birth_date;<separator>select first_name,  last_name from players where hand  =  "left";<separator>select t1.first_name,  t1.last_name,  t2.country_code from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.player_id order by count(*) desc limit 1;<separator>select t1.first_name,  t1.last_name,  t2.country_code from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id group by t1.player_id order by count(*) desc limit 1;<separator>select year from matches group by year order by count(*) desc limit 1;<separator>select year from matches group by year order by count(*) desc limit 1;<separator>select t1.winner_name,  t1.winner_rank_points from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id group by t1.winner_id order by count(*) desc limit 1;<separator>select t1.winner_name,  sum(t2.rank_points) from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id group by t1.winner_name order by sum(t2.rank_points) desc limit <separator>select t1.winner_name from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id where t2.tour  =  "australian open" order by t2.ranking_points desc limit 1;<separator>select t1.winner_name from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id where t2.tournament_name  =  "australian open";<separator>select t1.loser_name,  t2.winner_name from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id group by t1.loser_name order by sum(t1.minutes) desc limit 1;<separator>select t1.winner_name,  t2.loser_name from matches as t1 join matches as t2 on t1.loser_id  =  t2.loser_id group by t1.winner_id order by count(*) desc limit 1;<separator>select avg(t1.ranking),  t1.first_name from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id group by t2.first_name;<separator>select first_name,  avg(ranking) from players group by first_name;<separator>select t1.first_name,  sum(t2.ranking_points),  t1.first_name from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id group by t1.first_name;<separator>select first_name,  sum(ranking_points) from players group by first_name;<separator>select country_code,  count(*) from players group by country_code;<separator>select country_code,  count(*) from players group by country_code;<separator>select country_code from players order by count(*) desc limit 1;<separator>select country_code from players order by count(*) desc limit 1;<separator>select country_code from players group by country_code having count(*)  >  50;<separator>select country_code from players group by country_code having count(*)  >  50;<separator>select tourney_date,  sum(tours) from rankings group by tourney_date;<separator>select tourney_date,  count(*) from rankings group by tourney_date;<separator>select year,  count(*) from matches group by year;<separator>select count(*),  year from matches group by year;<separator>select winner_name,  winner_rank from matches group by winner_name order by winner_age limit 3;<separator>select winner_name,  winner_rank from matches group by winner_age order by winner_age limit 3;<separator>select count(distinct winner_hand) from matches where winner_hand  =  "left" intersect select winner_hand from matches where tourney_name  =  "wta";<separator>select count(*) from matches where winner_hand  =  "left";<separator>select t1.first_name,  t1.last_name,  t1.birth_date from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id group by t1.winner_rank order by t2.score desc limit <separator>select t1.first_name,  t1.last_name,  t1.birth_date from players as t1 join matches as t2 on t1.player_id  =  t2.winner_id group by t1.winner_rank order by sum(t2.winner_<separator>select hand,  count(*) from players group by hand;<separator>select hand,  count(*) from players group by hand;<separator>select count(*) from ship where disposition_of_ship  =  'captured';<separator>select name,  tonnage from ship order by tonnage desc;<separator>select name,  date,  result from battle;<separator>select max(killed),  min(killed) from death;<separator>select avg(t1.injured) from death as t1 join battle as t2 on t1.caused_by_ship_id  =  t2.id group by t2.id;<separator>select t1.note,  t2.injured from death as t1 join ship as t2 on t1.caused_by_ship_id  =  t2.id where t2.tonnage  =  100;<separator>select name,  result from battle where latin_commander !=  'boril';<separator>select distinct t1.id,  t1.name from battle as t1 join ship as t2 on t1.lost_in_battle  =  t2.id where t2.ship_type  =  "brig";<separator>select t1.id,  t1.name from battle as t1 join death as t2 on t1.id  =  t2.lost_in_battle group by t1.id having count(*)  >  10;<separator>select t1.id,  t1.name from battle as t1 join death as t2 on t1.id  =  t2.lost_in_battle group by t2.id order by sum(t2.injured) desc limit 1;<separator>select distinct t1.name from battle as t1 join death as t2 on t1.id  =  t2.lost_in_battle where t2.bulgarian_commander  =  'kaloyan' intersect select t1.name from battle as t1 join death as t2 on<separator>select count(distinct result) from battle;<separator>select count(*) from battle where lost_in_battle is null and tonnage  =  '225';<separator>select t1.name,  t1.date from battle as t1 join ship as t2 on t1.lost_in_battle  =  t2.id where t2.name  =  "hms atalanta" intersect select t1.name,  t1.date from<separator>select t1.name,  t2.result,  t3.bulgarian_commander from battle as t1 join death as t2 on t1.id  =  t2.lost_in_battle join ship as t3 on t2.caused_by_ship_id<separator>select note from death where note like '%east%';<separator>select t1.line_1,  t1.line_2 from addresses as t1 join addresses as t2 on t1.address_id  =  t2.address_id where t1.line_1  =  'line 1' intersect select t1.line_2 from addresses as<separator>select t1.line_1,  t1.line_2 from addresses as t1 join addresses as t2 on t1.address_id  =  t2.address_id group by t1.address_id order by count(*) desc limit 1;<separator>select count(*) from courses;<separator>select count(*) from courses;<separator>select t1.course_description from courses as t1 join degree_programs as t2 on t1.course_id  =  t2.course_id join other_details as t3 on t2.degree_summary_name  =  t3.degree_summary_name where t2.degree<separator>select course_description from courses where course_name  =  "math";<separator>select t1.zip_postcode from addresses as t1 join cities as t2 on t1.city_id  =  t2.city_id where t2.city_name  =  "port chelsea";<separator>select zip_postcode from addresses where address_id  =  "port chelsea";<separator>select department_name,  department_id from degree_programs group by department_id order by count(*) desc limit 1;<separator>select department_name,  department_id from degree_programs group by department_id order by count(*) desc limit 1;<separator>select count(distinct department_id) from degree_programs;<separator>select count(distinct department_id) from degree_programs;<separator>select count(distinct degree_summary_name) from degree_programs;<separator>select count(distinct degree_program_id) from degree_programs;<separator>select count(*) from degree_programs where department_name  =  "engineering";<separator>select count(*) from degree_programs where department_name  =  "engineering";<separator>select section_name,  section_description from sections;<separator>select section_name,  section_description from sections;<separator>select course_name,  course_id from courses group by course_id having count(*)  <=  2;<separator>select t1.course_name,  t1.course_id from courses as t1 join degree_programs as t2 on t1.course_id  =  t2.course_id group by t1.course_id having count(*)  <  2;<separator>select section_name from sections order by section_name desc;<separator>select section_name from sections order by section_name desc;<separator>select t2.semester_name,  t2.semester_id from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id group by t1.<separator>select t1.semester_name,  t1.semester_id from semesters as t1 join student_enrolment_courses as t2 on t1.semester_id  =  t2.semester_id group by t1.semester_id order by count(*) desc<separator>select t2.department_description from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id where t1.department_name like '%the computer%';<separator>select t2.department_description from departments as t1 join student_enrolment_courses as t2 on t1.department_id  =  t2.student_course_id where t1.department_name like '%computer%';<separator>select t1.first_name,  t1.middle_name,  t1.last_name,  t1.student_enrolment_id from student_enrolment as t1 join degree_programs as t2 on t1.degree_program_id  =  t<separator>select t1.first_name,  t1.middle_name,  t1.last_name,  t1.student_id from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id join degrees as t<separator>select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id where t2.degree_summary_name  <separator>select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id where t2.degree_summary_name  <separator>select t1.degree_summary_name from degree_programs as t1 join student_enrolment_courses as t2 on t1.degree_program_id  =  t2.student_course_id group by t1.degree_summary_name order by count(*) desc limit 1;<separator>select t1.degree_summary_name from degree_programs as t1 join student_enrolment_courses as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_summary_name order by count(*) desc limit 1;<separator>select t1.degree_program_id,  t1.degree_summary_name from degree_programs as t1 join student_enrolment_courses as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_program<separator>select t1.degree_program_id,  t1.degree_summary_name from degree_programs as t1 join student_enrolment_courses as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_program<separator>select t1.student_id,  t1.first_name,  t1.middle_name,  t1.last_name,  count(*),  t1.student_id from student_enrolment as t1 join student_enrolment_courses as t<separator>select t1.first_name,  t1.middle_name,  t1.last_name,  count(*) as number_of_enrollments from student_enrolment group by t1.first_name,  t1.middle_name,  t1.last<separator>select t2.semester_name from student_enrolment_courses as t1 join semesters as t2 on t1.semester_id  =  t2.semester_id where t1.student_enrolment_id is null;<separator>select semester_name from student_enrolment where semester_id = ( select semester_id from student_enrolment_courses group by semester_id having count(*)  =  0;);<separator>select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id where t2.student_enrolment_id is not null;<separator>select course_name from courses where student_enrolment_id in (select student_enrolment_id from student_enrolment_courses);<separator>select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id group by t1.course_id order by count(*) desc limit 1;<separator>select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id group by t1.course_id order by count(*) desc limit 1;<separator>select t1.last_name from students as t1 join addresses as t2 on t1.current_address_id  =  t2.address_id where t2.state_province_county  =  'north carolina' except select t1.last_name from students as t1 join<separator>select t1.last_name from students as t1 join addresses as t2 on t1.current_address_id  =  t2.address_id where t2.state_province_county  =  'north carolina' except select t1.last_name from students as t1 join<separator>select t1.transcript_date,  t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id group by t1.transcript_date having count(*)  <separator>select t1.transcript_date,  t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id group by t1.transcript_id having count(*)  <separator>select t1.cell_mobile_number from students as t1 join addresses as t2 on t1.current_address_id  =  t2.address_id where t2.first_name  =  "timmothy" and t2.last_name  =  "ward";<separator>select t2.cell_mobile_number from students as t1 join student_enrolment_courses as t2 on t1.student_id  =  t2.student_enrolment_id where t1.first_name  =  "timmothy" and t1.last_name<separator>select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment_courses as t2 on t1.student_id  =  t2.student_id where t2.student_course_id  <separator>select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment_courses as t2 on t1.student_id  =  t2.student_id where t2.student_course_id  <separator>select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment_courses as t2 on t1.student_id  =  t2.student_id where t2.student_course_id  <separator>select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment_courses as t2 on t1.student_id  =  t2.student_id where t2.student_course_id  <separator>select t1.first_name from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.current_address_id except select t1.first_name from addresses as t1 join student_enrolment as t2 on t1.address_id<separator>select t1.first_name from students as t1 join addresses as t2 on t1.current_address_id  =  t2.address_id where t2.permanent_address_id !=  t1.current_address_id;<separator>select t1.address_id,  t1.line_1,  t1.line_2,  t1.line_3 from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.current_address_id group by<separator>select t1.address_id,  t1.line_1,  t1.line_2 from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.current_address_id group by t1.address_id order by count<separator>select avg(transcript_date) from transcripts group by semester_name;<separator>select avg(transcript_date) from transcripts;<separator>select t1.transcript_date,  t1.other_details from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id where t2.transcript_id  =  ( select max<separator>select t1.transcript_date,  t1.other_details from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id join student_enrolment as t3 on t2.student<separator>select count(*) from transcripts;<separator>select count(*) from transcripts;<separator>select t1.transcript_date from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id join students as t3 on t2.student_id  =  t3.student_id where t<separator>select t1.transcript_date from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id where t2.student_enrolment_id  =  'last';<separator>select count(*),  t1.course_id from student_enrolment_courses as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id group by t1.course_id<separator>select t1.course_id,  max(t2.transcript_id),  t1.enrollment_id from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id group<separator>select t1.transcript_date,  t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id group by t1.transcript_date order by count(*)<separator>select t1.transcript_date,  t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id group by t1.transcript_id order by count(*)<separator>select t1.semester_name from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id where t2.student_course_id  =  (select course<separator>select t2.semester_id from student_enrolment_courses as t1 join degrees as t2 on t1.degree_program_id  =  t2.degree_program_id where t1.student_course_id  =  (select student_course_id from students where first<separator>select count(*) from addresses where current_address_id!= 0;<separator>select distinct address_id from addresses where permanent_address_id in (select current_address_id from students);<separator>select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment_courses as t2 on t1.student_id  =  t2.student_id order by t2.transcript_date desc<separator>select other_details from students order by other_details desc;<separator>select section_name from sections;<separator>select section_description from sections where section_name  =  "h";<separator>select t1.first_name from students as t1 join addresses as t2 on t1.current_address_id  =  t2.address_id where t2.country  =  "haiti" or t2.cell_mobile_number  =  "09700166582";<separator>select t1.first_name from students as t1 join addresses as t2 on t1.current_address_id  =  t2.address_id where t2.country  =  "haiti" or t2.cell_mobile_number  =  "09700166582";<separator>select title from cartoon order by title;<separator>select title from cartoon order by title;<separator>select t1.title from cartoon as t1 join tv_series as t2 on t1.channel  =  t2.channel where t2.directed_by  =  "ben jones";<separator>select t1.title from cartoon as t1 join t2 as t2 on t1.directed_by  =  t2.id where t2.name  =  "ben jones";<separator>select count(*) from cartoon where directed_by  =  "joseph kuhr";<separator>select count(*) from cartoon where directed_by  =  "joseph kuhr";<separator>select title,  directed_by from cartoon order by original_air_date;<separator>select t1.title,  t2.directed_by from cartoon as t1 join tv_series as t2 on t1.channel  =  t2.channel order by t2.air_date;<separator>select t1.title from cartoon as t1 join movie as t2 on t1.id  =  t2.movie_id where t2.director like "%ben jones%" or t2.director like "%brandon vietti%";<separator>select title from cartoon where directed_by  =  "ben jones" or directed_by  =  "brandon vietti";<separator>select country,  count(*) from tv_channel group by country order by count(*) desc limit 1;<separator>select country,  count(*) from tv_channel group by country order by count(*) desc limit 1;<separator>select count(distinct series_name),  count(distinct content) from tv_channel;<separator>select count(*) from tv_series;<separator>select content from tv_channel where series_name  =  "sky radio";<separator>select content from tv_series where series_name  =  "sky radio";<separator>select package_option from tv_channel where series_name  =  "sky radio";<separator>select package_option from tv_series where series_name  =  "sky radio";<separator>select count(*) from tv_channel where language  =  'english';<separator>select count(*) from tv_channel where language  =  "english";<separator>select language,  count(*) from tv_channel group by language order by count(*) desc limit 1;<separator>select language,  count(*) from tv_channel group by language order by count(*) desc limit 1;<separator>select language,  count(*) from tv_channel group by language;<separator>select language,  count(*) from tv_channel group by language;<separator>select t2.series_name from tv_series as t1 join cartoon as t2 on t1.channel  =  t2.id where t1.title  =  "the rise of the blue beetle!";<separator>select t2.series_name from tv_series as t1 join cartoon as t2 on t1.channel  =  t2.id where t1.title  =  "the rise of the blue beetle";<separator>select t1.title from tv_series as t1 join cartoon as t2 on t1.channel  =  t2.id where t2.series_name  =  "sky radio";<separator>select t1.title from tv_series as t1 join cartoon as t2 on t1.channel  =  t2.id where t2.title like "%sky radio%";<separator>select episode from tv_series order by 18_49_rating_share;<separator>select episode from tv_series order by 18_49_rating_share;<separator>select t1.episode,  t1.rating from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id group by t1.episode order by count(*) desc limit 3;<separator>select episode from tv_series order by 18_49_rating_share desc limit 3;<separator>select min(share),  max(share) from tv_series;<separator>select max(share),  min(share) from tv_series;<separator>select t2.air_date from tv_series as t1 join tv_series as t2 on t1.id  =  t2.parent_id where t1.title  =  "a love of a lifetime";<separator>select episode from tv_series where title  =  "a love of a lifetime";<separator>select weekly_rank from tv_series where episode  =  "a love of a lifetime";<separator>select 18_49_rating_share from tv_series where episode  =  "a love of a lifetime";<separator>select t1.series_name from tv_series as t1 join tv_series as t2 on t1.id  =  t2.parent_id where t2.episode  =  "a love of a lifetime";<separator>select t2.series from tv_series as t1 join cartoon as t2 on t1.channel  =  t2.id where t1.episode  =  "a love of a lifetime";<separator>select t1.episode from tv_series as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.series_name  =  "sky radio";<separator>select episode from tv_series where series_name  =  "sky radio";<separator>select count(*),  directed_by from cartoon group by directed_by;<separator>select directed_by,  count(*) from cartoon group by directed_by;<separator>select t1.production_code,  t2.channel from tv_series as t1 join cartoon as t2 on t1.id  =  t2.channel where t1.air_date  =  max(t1.air_date) group by t1.production_code, <separator>select production_code,  channel from cartoon order by id desc limit 1;<separator>select t2.series_name,  t1.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.hight_definition_tv  =  'high';<separator>select t2.package_option,  t1.series_name from tv_series as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.content  =  "high definition tv";<separator>select country from tv_channel where written_by  =  "todd casey";<separator>select country from tv_series where written_by  =  "todd casey";<separator>select country from tv_channel where original_air_date  =  '1999-10-02' except select country from tv_channel where original_air_date  =  '1999-10-02' and original_air_date  =  '1999-10-09' and original_air<separator>select country from tv_channel except select country from tv_series where written_by  =  "todd casey";<separator>select t2.series_name,  t1.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.directed_by  =  "ben jones" or t2.directed_by  =  "michael chang";<separator>select t1.series_name,  t2.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.directed_by  =  "ben jones" intersect select t1.series_name,  t2.country<separator>select t1.pixel_aspect_ratio_par,  t2.nation from tv_channel as t1 join tv_channel as t2 on t1.id  =  t2.id where t2.language !=  'english';<separator>select t1.pixel_aspect_ratio_par,  t2.country from tv_channel as t1 join tv_channel as t2 on t1.id  =  t2.id where t2.language !=  "english";<separator>select t1.id from tv_channel as t1 join tv_channel as t2 on t1.id  =  t2.id group by t1.id having count(*)  >  2 intersect select t1.id from tv_channel as t1 join tv_channel as t2 on t1<separator>select id from tv_channel where count(*)  >  2;<separator>select t1.id from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t2.directed_by  =  'ben jones';<separator>select id from tv_channel where directed_by!= "ben jones";<separator>select t2.package_option from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t1.directed_by !=  "ben jones";<separator>select distinct t2.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.directed_by !=  "ben jones";<separator>select count(*) from poker_player;<separator>select count(*) from poker_player;<separator>select t2.earnings from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.earnings desc;<separator>select t2.earnings from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.earnings desc;<separator>select t1.final_table_made,  t2.best_finish from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id;<separator>select t1.final_table_made,  t2.best_finish from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id;<separator>select avg(earnings) from poker_player;<separator>select avg(earnings) from poker_player;<separator>select t2.money_rank from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.earnings desc limit 1;<separator>select t2.money_rank from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.earnings desc limit 1;<separator>select max(final_table_made) from poker_player where earnings  <  200000;<separator>select max(final_table_made) from poker_player where earnings  <  200000;<separator>select name from poker_player;<separator>select name from poker_player;<separator>select t2.name from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id where t1.earnings  >  300000;<separator>select t2.name from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id where t1.earnings  >  300000;<separator>select t1.name from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t2.final_table_made asc;<separator>select t2.name from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.final_table_made;<separator>select t1.birth_date from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t2.earnings desc limit 1;<separator>select t2.birth_date from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.earnings desc limit 1;<separator>select t2.money_rank from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t1.height desc limit 1;<separator>select t2.money_rank from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.height desc limit 1;<separator>select avg(earnings) from poker_player where height  >  200;<separator>select avg(earnings) from poker_player where height  >  200;<separator>select name from poker_player order by earnings desc;<separator>select t1.name from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t2.earnings desc;<separator>select nationality,  count(*) from people group by nationality;<separator>select nationality,  count(*) from people group by nationality;<separator>select nationality from people group by nationality order by count(*) desc limit 1;<separator>select nationality from people group by nationality order by count(*) desc limit 1;<separator>select nationality from people group by nationality having count(*)  >=  2;<separator>select nationality from people group by nationality having count(*)  >=  2;<separator>select t1.name,  t1.birth_date from people as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.name asc;<separator>select t1.name,  t1.birth_date from people as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.name;<separator>select name from people where nationality!= "russia";<separator>select name from people where nationality!= 'russian';<separator>select name from people where nationality!= 'poker player';<separator>select name from people where nationality!= 'poker_player';<separator>select count(distinct nationality) from people;<separator>select count(distinct nationality) from people;<separator>select count(*) from area_code_state;<separator>select contestant_name from contestants order by contestant_name;<separator>select t1.phone_number,  t2.state,  t3.contestant_number from votes as t1 join area_code_state as t2 on t1.contestant_number  =  t2.contestant_number join contestants as t3 on t1.<separator>select max(area_code),  min(area_code) from area_code_state;<separator>select t2.created from votes as t1 join area_code_state as t2 on t1.state  =  t2.state where t1.contestant_number  =  'ca';<separator>select contestant_name from contestants except select contestant_name from contestants where contestant_name  =  'jessie alloway';<separator>select distinct state,  created from votes;<separator>select t1.contestant_number,  t1.contestant_name from contestants as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number having count(*)  >=  2<separator>select t1.contestant_number,  t1.contestant_name from votes as t1 join contestants as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number order by count(*) desc limit 1<separator>select count(*) from votes where state  =  'ny' or state  =  'ca';<separator>select count(*) from contestants where contestant_name not in (select contestant_name from votes);<separator>select t1.area_code from votes as t1 join area_code_state as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number order by count(*) desc limit 1;<separator>select t1.contestant_name,  t2.state,  t3.phone_number from area_code_state as t1 join contestants as t2 on t1.contestant_number  =  t2.contestant_number join votes as t3 on t1.<separator>select t1.area_code from area_code_state as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number where t2.contestant_name  =  "tabatha gehling" intersect select t1.contestant<separator>select contestant_name from contestants where contest_name like '%al%';<separator>select name from country where continent  =  "independent" and year  >  1950;<separator>select name from country where continent  =  "asia" and year  >  1950;<separator>select count(*) from country where governmentform  =  "republic";<separator>select count(*) from country where governmentform  = 'republic';<separator>select sum(surfacearea) from country where continent  =  "caribbean";<separator>select sum(surfacearea) from country where continent  =  "carribean";<separator>select continent from country where continent  =  'anguilla';<separator>select continent from country where code  =  'anguilla';<separator>select t3.region from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode join country as t3 on t2.countrycode  =  t3.code where t1.name  =  'kabul';<separator>select region from country where name  =  "kabul";<separator>select language from countrylanguage group by language order by count(*) desc limit 1;<separator>select isofficial from countrylanguage where countrycode  =  "aruba" order by percentage limit 1;<separator>select t1.population,  t1.lifeexpectancy from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.countrycode  =  "brazil";<separator>select t1.population,  t2.lifeexpectancy from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode;<separator>select t3.region,  t3.population from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join country as t3 on t2.countrycode  =  t3.code where t1.name  =  'angola';<separator>select t3.region,  t3.population from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t2.countrycode  =  t3.countrycode where t1.code  =  'angola';<separator>select avg(lifeexpectancy) from country where continent  =  "central africa";<separator>select avg(lifeexpectancy) from country where continent  =  "central africa";<separator>select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  "asia" order by t2.lifeexpectancy limit 1;<separator>select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  "asia" group by t1.name order by t2.percentage desc limit 1;<separator>select sum(population),  max(gnp) from country where continent  =  "asia";<separator>select continent,  max(gnp) from country where continent  =  "asia";<separator>select avg(lifeexpectancy) from country where continent  =  "africa" and governmentform  =  "republic";<separator>select avg(lifeexpectancy) from country where continent  =  "africa" and governmentform  =  "republic";<separator>select sum(surfacearea) from continent where name  =  "asia" intersect select sum(surfacearea) from continent where name  =  "europe";<separator>select sum(surfacearea) from country where continent  =  "asia" intersect select sum(surfacearea) from country where continent  =  "europe";<separator>select count(*) from city as t1 join city as t2 on t1.id  =  t2.id where t1.name  =  "gelderland" and t2.name  =  "district";<separator>select sum(population) from city as t1 join city as t2 on t1.id  =  t2.id where t1.name  =  "gelderland" and t2.name  =  "district";<separator>select avg(gnp),  sum(population) from country where governmentform  =  'us territory';<separator>select avg(gnp),  sum(population) from country where continent  =  'america' group by continent;<separator>select count(distinct isofficial) from countrylanguage;<separator>select count(distinct language) from countrylanguage;<separator>select count(distinct governmentform) from country where continent  =  "africa";<separator>select count(distinct governmentform) from country where continent  =  "africa";<separator>select sum(isofficial) from countrylanguage where countrycode  =  "aruba";<separator>select count(*) from countrylanguage where countrycode  =  "aruba";<separator>select count(*) from countrylanguage where countrycode  =  "afghanistan";<separator>select count(*) from countrylanguage where isofficial  =  "afghanistan";<separator>select t1.name from countrylanguage as t1 join sqlite_sequence as t2 on t1.countrycode  =  t2.name where t2.seq  =  (select max(seq) from sqlite_sequence);<separator>select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code order by sum(t2.percentage) desc limit 1;<separator>select continent,  count(*) from countrylanguage group by continent order by count(*) desc limit 1;<separator>select continent,  count(*) from countrylanguage group by continent order by count(*) desc limit 1;<separator>select count(distinct countrycode) from countrylanguage where language  =  "english" intersect select count(distinct countrycode) from countrylanguage where language  =  "dutch";<separator>select count(distinct countrycode) from countrylanguage where language  =  "english" intersect select count(distinct countrycode) from countrylanguage where language  =  "dutch";<separator>select name from countrylanguage where isofficial  =  "english" intersect select name from countrylanguage where isofficial  =  "french";<separator>select name from countrylanguage where isofficial  =  "english" intersect select name from countrylanguage where isofficial  =  "french";<separator>select name from countrylanguage where isofficial  =  'english' intersect select name from countrylanguage where isofficial  =  'french';<separator>select name from country where language  =  "english" intersect select name from country where language  =  "french";<separator>select count(distinct continent) from countrylanguage where language  =  "chinese";<separator>select count(district) from countrylanguage where language  =  "chinese";<separator>select region from country where language  =  "en" intersect select region from country where language  =  "nl";<separator>select region from countrylanguage where language  =  "dutch" or language  =  "english";<separator>select t1.countrycode from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.isofficial  =  'english' intersect select t1.countrycode from countrylanguage as t1 join country as t2 on t1.countrycode  <separator>select countrycode from countrylanguage where isofficial  =  'english' intersect select countrycode from countrylanguage where isofficial  =  'dutch';<separator>select language from countrylanguage group by continent order by sum(percentage) desc limit 1;<separator>select language from countrylanguage where continent  =  "asia" group by language order by count(*) desc limit 1;<separator>select distinct t1.language from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.governmentform  = 'republic';<separator>select distinct isofficial from countrylanguage where governmentform  = 'republic' except select isofficial from countrylanguage where governmentform  = 'monarchy';<separator>select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial  =  "english" order by t1.population desc limit 1;<separator>select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial  =  "english" group by t1.name order by count(*) desc limit 1;<separator>select t1.name,  t1.population,  t1.expectedlife from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  "asian" group by t1.code order by t2.population<separator>select t1.name,  t1.population,  t1.lifeexpectancy from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  "asia" order by t1.population desc limit 1;<separator>select avg(lifeexpectancy) from countrylanguage where isofficial !=  "english";<separator>select avg(lifeexpectancy) from country where isofficial !=  "english";<separator>select sum(population) from country where continent !=  "english" group by countrycode;<separator>select count(*) from countrylanguage where isofficial !=  "english";<separator>select t3.isofficial from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.headofstate  =  "beatrix";<separator>select t3.localname,  t3.governmentform,  t3.headofstate from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code join country as t3 on t2.code  =  t3.code where t3.<separator>select sum(t1.percentage) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.founded  <  1930;<separator>select sum(distinct isofficial) from country where yearfound  <  1930;<separator>select t1.countrycode from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  'europe' group by t1.countrycode order by surfacearea desc limit 1;<separator>select country from country where continent  =  'europe' except select country from country where continent  =  'europe' group by country having sum(surfacearea)  >  (select sum(surfacearea) from country where continent  =  'europe' order by surfacearea desc limit 1<separator>select countrycode from country where continent  =  'africa' except select countrycode from country where continent  =  'asia';<separator>select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  'africa' intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t<separator>select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  "asia" group by t1.name having sum(t2.percentage)  >  0 order by sum(t2.<separator>select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  "asia" group by t1.name having sum(t2.percentage)  >  0 order by sum(t2.<separator>select countrycode from countrylanguage where isofficial !=  "english";<separator>select countrycode from countrylanguage where isofficial !=  "english";<separator>select countrycode from countrylanguage where language!= "english";<separator>select countrycode from countrylanguage where language!= "english";<separator>select countrycode from country language where language !=  "english" and governmentform !=  "republic";<separator>select distinct countrycode from countrylanguage where language !=  "english" and governmentform !=  "republic";<separator>select t1.name from countrylanguage as t1 join city as t2 on t1.countrycode  =  t2.countrycode where t2.language !=  "english" and t2.countrycode  =  t3.countrycode;<separator>select name from countrylanguage where isofficial !=  "english" and continent  =  "europe";<separator>select distinct t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial  =  "asian" and t2.language  =  "chinese";<separator>select distinct t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial  =  "asian" and t2.language  =  "chinese";<separator>select t1.name,  t1.independenceyear,  t1.surfacearea from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code order by t2.population limit 1;<separator>select t1.name,  t1.yearofindependence,  t1.surfacearea from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code order by t2.population desc limit 1;<separator>select t1.name,  t1.population,  t2.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode order by t2.population desc limit 1;<separator>select t1.name,  t1.population,  t2.headofstate from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code order by t2.surfacearea desc limit 1;<separator>select t1.name,  count(*) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code group by t2.code having count(*)  >=  3;<separator>select t1.name,  count(*) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code group by t2.code having count(*)  >  2;<separator>select district,  count(*) from city group by district having avg(population)  >  (select avg(population) from city);<separator>select district,  count(*) from city group by district having avg(population)  >  (select avg(population) from city);<separator>select governmentform,  sum(gnp),  avg(gnp) from countrygroup where lifeexpectancy  >  72 group by governmentform;<separator>select governmentform,  sum(population) from countrygroup by governmentform group by governmentform order by avg(lifeexpectancy) desc limit 1;<separator>select continent,  avg(lifeexpectancy),  sum(population) from country group by continent having avg(lifeexpectancy)  <  72;<separator>select continent,  sum(population),  avg(lifeexpectancy) from country where continent !=  'asia' group by continent;<separator>select name,  surfacearea from country order by surfacearea desc limit 5;<separator>select t1.name,  t1.surfacearea from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode order by t2.percentage limit 5;<separator>select name from country order by population desc limit 3;<separator>select name from country order by population desc limit 3;<separator>select name from country where population  <  (select min(population) from country);<separator>select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code order by count(*) desc limit 3;<separator>select count(*) from country where continent  =  "asia";<separator>select count(*) from country where continent  =  "asia";<separator>select name from country where continent  =  'europe' and population  =  80000;<separator>select name from country where continent  =  "europe" and population  =  80000;<separator>select sum(population),  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000;<separator>select sum(population),  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000;<separator>select t1.name from city as t1 join city as t2 on t1.id  =  t2.id where t2.population between 160000 and 900000;<separator>select name from city where population between 160000 and 900000;<separator>select language from countrylanguage group by language order by count(*) desc limit 1;<separator>select language from countrylanguage group by language order by count(*) desc limit 1;<separator>select t1.language,  max(t2.percentage) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code group by t1.countrycode order by percentage desc limit 1;<separator>select countrycode,  language from countrylanguage group by countrycode order by percentage desc limit 1;<separator>select sum(percentage) from countrylanguage group by isofficial order by percentage desc limit 1;<separator>select count(*) from countrylanguage where isofficial  =  "español" group by countrycode;<separator>select t1.countrycode from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.isofficial  =  "español" group by t1.countrycode order by sum(t2.percentage) desc limit 1;<separator>select t1.countrycode from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.isofficial  =  'español' group by t1.countrycode;<separator>select count(*) from conductor;<separator>select count(*) from conductor;<separator>select name from conductor order by age asc;<separator>select name from conductor order by age;<separator>select name from conductor where nationality!= "usa";<separator>select name from conductor where nationality!= 'usa';<separator>select record_company from orchestra order by year_of_founded desc;<separator>select record_company from orchestra order by year_of_founded desc;<separator>select avg(attendance) from show;<separator>select avg(attendance) from show;<separator>select max(share),  min(share) from performance where type!= "live final";<separator>select max(share),  min(share) from performance where type !=  "live final";<separator>select count(distinct nationality) from conductor;<separator>select count(distinct nationality) from conductor;<separator>select name from conductor order by year_of_work desc;<separator>select name from conductor order by year_of_work desc;<separator>select name from conductor order by year_of_work desc limit 1;<separator>select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.conductor_id order by count(*) desc limit 1;<separator>select t1.name,  t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id;<separator>select t1.name,  t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id;<separator>select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.conductor_id having count(*)  >  1;<separator>select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.conductor_id having count(*)  >  1;<separator>select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.conductor_id order by count(*) desc limit 1;<separator>select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.conductor_id order by count(*) desc limit 1;<separator>select t2.name from orchestra as t1 join conductor as t2 on t1.orchestra_id  =  t2.orchestra_id where t1.year_of_founded  >  2008;<separator>select t2.name from orchestra as t1 join conductor as t2 on t1.orchestra_id  =  t2.orchestra_id where t1.year_of_founded  >  2008;<separator>select distinct record_company from orchestra group by record_company;<separator>select count(*),  record_company from orchestra group by record_company;<separator>select major_record_format from orchestra order by count(*) asc;<separator>select major_record_format from orchestra order by count(*) desc limit 1;<separator>select record_company from orchestra group by record_company order by count(*) desc limit 1;<separator>select record_company from orchestra group by record_company order by count(*) desc limit 1;<separator>select distinct orchestra from orchestra;<separator>select orchestra from orchestra where orchestra_id not in (select orchestra_id from performance);<separator>select t2.record_company from orchestra as t1 join orchestra as t2 on t1.orchestra_id  =  t2.orchestra_id where t1.year_of_founded  <  2003 intersect select t2.record_company from orchestra as t1 join orchestra as<separator>select record_company from orchestra where year_of_founded  <  2003 intersect select record_company from orchestra where year_of_founded  >  2003;<separator>select count(*) from orchestra where major_record_format  =  "cd" or major_record_format  =  "dvd";<separator>select count(*) from orchestra where record_format  =  "cd" or record_format  =  "dvd";<separator>select year_of_founded from orchestra group by year_of_founded having count(*)  >  1;<separator>select year_of_founded from orchestra group by year_of_founded having count(*)  >  1;<separator>select count(*) from highschooler;<separator>select count(*) from highschooler;<separator>select t1.name,  t1.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id;<separator>select t1.name,  t1.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.id;<separator>select grade from highschooler;<separator>select t1.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.grade;<separator>select t2.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id where t1.name  =  "kyle";<separator>select t2.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.liked_id where t1.name  =  "kyle";<separator>select t2.name from highschooler as t1 join likes as t2 on t1.id  =  t2.liked_id where t1.grade  =  10;<separator>select name from highschooler where grade  =  10;<separator>select t1.id from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id where t2.name  =  "kyle";<separator>select t1.id from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t2.name  =  "kyle";<separator>select count(*) from highschooler where grade  =  9 or grade  =  10;<separator>select count(*) from highschooler where grade  =  9 or grade  =  10;<separator>select t1.grade,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.grade;<separator>select t1.grade,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.grade;<separator>select grade from highschooler group by grade order by count(*) desc limit 1;<separator>select t1.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.grade order by count(*) desc limit 1;<separator>select grade from highschooler where grade  >=  4;<separator>select grade from highschooler where grade  >=  4;<separator>select t1.student_id,  count(*) from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id group by t1.student_id;<separator>select t1.name,  count(*) from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id group by t1.name;<separator>select t1.name,  count(*) from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.name;<separator>select t1.name,  count(*) from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.id;<separator>select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.id order by count(*) desc limit 1;<separator>select t1.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id order by count(*) desc limit 1;<separator>select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t2.friend_id having count(*)  >=  3;<separator>select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t2.friend_id having count(*)  >=  3;<separator>select t1.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t2.name  =  "kyle";<separator>select t2.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t1.student_id  =  "kyle";<separator>select count(*) from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t1.student_id  =  t2.id and t2.name  =  'kyle';<separator>select count(*) from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t1.student_id  =  "kyle";<separator>select t1.student_id from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t2.student_id not in (select student_id from friend);<separator>select t1.student_id from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t2.student_id not in (select student_id from friend);<separator>select name from highschooler where id not in (select student_id from friend);<separator>select name from student where student_id not in (select student_id from friend);<separator>select t1.id from friend as t1 join likes as t2 on t1.student_id  =  t2.liked_id group by t1.student_id having count(*)  >  1;<separator>select t1.student_id from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id join likes as t3 on t2.id  =  t3.liked_id where t3.liked_id  =  t2.id group by<separator>select t1.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id join likes as t3 on t2.id  =  t3.liked_id where t3.liked_id !=  t2.id group by t1<separator>select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id where t2.liked_id  =  t1.id group by t1.name having count(*)  >  1;<separator>select t1.student_id,  count(*) from friend as t1 join likes as t2 on t1.student_id  =  t2.liked_id group by t1.student_id;<separator>select t1.student_id,  count(*) from friend as t1 join likes as t2 on t1.student_id  =  t2.liked_id group by t1.student_id;<separator>select t1.name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.liked_id group by t1.name;<separator>select t1.name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.liked_id group by t1.name;<separator>select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.id order by count(*) desc limit 1;<separator>select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id order by count(*) desc limit 1;<separator>select t1.name from friend as t1 join likes as t2 on t1.student_id  =  t2.liked_id group by t1.student_id having count(*)  >=  2;<separator>select t1.name from friend as t1 join likes as t2 on t1.student_id  =  t2.liked_id group by t1.student_id having count(*)  >=  2;<separator>select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id where t2.grade  >  5 group by t1.name having count(*)  >=  2;<separator>select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.name having count(*)  >  2 intersect select t1.name from highschooler as t1 join friend as t2 on t1.id<separator>select count(*) from likes as t1 join friend as t2 on t1.liked_id  =  t2.student_id where t2.name  =  "kyle";<separator>select count(*) from likes where liked_id  =  "kyle";<separator>select avg(grade) from highschooler where student_id in (select student_id from friend);<separator>select avg(grade) from highschooler where friend_id not in (select friend_id from likes);<separator>select t1.grade from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id where t2.friend_id is null;<separator>select t1.grade from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id where t2.friend_id is null;<separator>select t1.state,  t2.state from owners as t1 join professionals as t2 on t1.owner_id  =  t2.professional_id;<separator>select t1.state,  t2.state from owners as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id;<separator>select avg(date_of_birth) from dogs where breed_code in (select breed_code from breeds where breed_code!='mixed') group by breed_code;<separator>select avg(date_of_birth) from treatments group by dog_id;<separator>select t1.first_name,  t1.last_name,  t1.cell_number from professionals as t1 join states as t2 on t1.state_code  =  t2.state_code where t2.name  =  "indiana";<separator>select t1.professional_id,  t2.first_name,  t2.last_name,  t2.email_address,  t2.home_phone from professionals as t1 join states as t2 on t1.state_code  =  t2.state where<separator>select t1.name from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id where t2.cost_of_treatment  <  1000 group by t1.name;<separator>select t1.name from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t2.spend_on_treatment  <  1000;<separator>select first_name from professionals intersect select first_name from owners;<separator>select first_name from professionals intersect select first_name from owners;<separator>select t1.professional_id,  t2.role_code,  t3.email_address from professionals as t1 join treatment_types as t2 on t1.role_code  =  t2.role_code join dogs as t3 on t1.professional_id  = <separator>select professional_id,  role_code,  email_address from professionals where professional_id not in ( select professional_id from treatments where treatment_type_code  =  'dog' );<separator>select owner_id,  first_name,  last_name from dogs group by owner_id order by count(*) desc limit 1;<separator>select owner_id,  first_name,  last_name from dogs group by owner_id order by count(*) desc limit 1;<separator>select t1.professional_id,  t2.role,  t3.first_name from professionals as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code join owners as t3 on t1.owner_id  <separator>select t1.professional_id,  t2.role_code,  t3.first_name from professionals as t1 join treatment_types as t2 on t1.role_code  =  t2.role_code join treatments as t3 on t1.professional_id  = <separator>select breed_name from breeds order by count(*) desc limit 1;<separator>select t1.breed_name from breeds as t1 join dogs as t2 on t1.breed_code  =  t2.breed_code group by t1.breed_code order by count(*) desc limit 1;<separator>select owner_id,  first_name,  last_name from owners group by owner_id order by sum(treatment_cost) desc limit 1;<separator>select owner_id,  first_name,  last_name from owners where sum(cost_of_treatment)  =  (select max(sum(cost_of_treatment)) from treatments);<separator>select t1.treatment_type_description from treatment_types as t1 join treatments as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by t1.treatment_type_code order by sum(t2.cost_of_treatment) desc limit 1<separator>select treatment_type_description from treatment_types order by total_cost desc limit 1;<separator>select owner_id,  zip_code from owners group by owner_id order by sum(cost_of_treatment) desc limit 1;<separator>select owner_id,  zip_code from owners where sum(cost_of_treatment)  =  (select max(sum(cost_of_treatment)) from treatments);<separator>select t1.professional_id,  t2.cell_number from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*)  >=  2;<separator>select t1.professional_id,  t2.cell_number from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*)  >=  2;<separator>select t1.first_name,  t1.last_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where t2.cost_of_treatment  <  avg(t2.cost_of_treatment) group by t<separator>select t1.first_name,  t1.last_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where cost_of_treatment  < (select avg(cost_of_treatment) from treatments);<separator>select date_of_treatment,  first_name from treatments group by first_name;<separator>select date_of_treatment,  first_name from treatment group by first_name;<separator>select t1.cost_of_treatment,  t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code;<separator>select t1.treatment_type_description,  t2.cost_of_treatment from treatments as t1 join treatments as t2 on t1.treatment_id  =  t2.treatment_id;<separator>select first_name,  last_name,  size_code from dogs where owner_id  =  (select owner_id from owners);<separator>select t1.first_name,  t1.last_name,  t1.size_code from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;<separator>select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;<separator>select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;<separator>select t1.name,  t2.date_of_treatment from breeds as t1 join dogs as t2 on t1.breed_code  =  t2.breed_code group by t1.breed_code order by count(*) desc limit 1;<separator>select t1.name,  t2.date_of_treatment from breeds as t1 join dogs as t2 on t1.breed_code  =  t2.breed_code group by t1.breed_code order by count(*) desc limit 1;<separator>select t1.first_name,  t2.name from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t2.home_state  =  "virginia";<separator>select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id where t1.home_state  =  "virginia";<separator>select date_of_arrival,  date_of_departure from treatments where dog_id in (select dog_id from dogs where breed_code  =  "poodle");<separator>select date_of_arrival,  date_of_departure from treatments where dog_id in (select dog_id from dogs where breed_code  =  "poodle");<separator>select t1.last_name from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id order by t1.date_of_birth desc limit 1;<separator>select t1.last_name from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t1.date_of_birth  =  min(t2.date_of_birth) group by t1.last_name;<separator>select email_address from professionals where home_state  =  "hawaii" or home_state  =  "wisconsin";<separator>select email_address from professionals where state  =  "hawaii" intersect select email_address from professionals where state  =  "wisconsin";<separator>select date_of_birth,  date_departed from dogs group by date_of_birth;<separator>select date_of_birth,  date_of_departure from dogs;<separator>select count(*) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id group by t1.dog_id;<separator>select count(*) from treatments where dog_id in (select dog_id from dogs where breed_code  =  "poodle");<separator>select count(*) from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where t2.treatment_type_code  =  'any';<separator>select count(*) from professionals where professional_id in (select professional_id from treatment_types);<separator>select t1.role_code,  t2.street,  t3.city,  t4.state from professionals as t1 join cities as t2 on t1.city  =  t2.city join states as t3 on t2.state  =  t3.state;<separator>select t1.role_code,  t1.street,  t1.city,  t1.state from professionals as t1 where t1.street like '%west%';<separator>select first_name,  last_name,  email_address from owners where state  =  "north";<separator>select t1.first_name,  t1.last_name,  t1.email_address from owners as t1 join states as t2 on t1.state_code  =  t2.state_code where t2.name like '%north%';<separator>select count(*) from dogs where age  <  (select avg(age) from dogs);<separator>select count(*) from dogs where age  <  (select avg(age) from dogs);<separator>select sum(cost_of_treatment) from treatments group by treatment_id order by sum(cost_of_treatment) desc limit 1;<separator>select cost_of_treatment from treatments order by date_of_treatment desc limit 1;<separator>select count(*) from dogs where breed_code not in (select breed_code from treatments);<separator>select count(*) from dogs where breed_code not in ( select breed_code from treatments group by professional_id );<separator>select count(*) from owners where owner_id not in (select dog_id from dogs);<separator>select count(*) from owners where owner_id not in (select owner_id from dogs);<separator>select count(*) from professionals where professional_id not in (select professional_id from treatments);<separator>select count(*) from professionals where professional_id not in (select professional_id from treatments);<separator>select t2.name,  t2.age,  t2.weight from dogs as t1 join breeds as t2 on t1.breed_code  =  t2.breed_code where t1.abandoned_yn  =  'yes';<separator>select t2.name,  t2.age,  t2.weight from dogs as t1 join breeds as t2 on t1.breed_code  =  t2.breed_code where t1.abandoned_yn  =  '1';<separator>select avg(date_of_birth) from dogs;<separator>select avg(date_of_birth) from dogs;<separator>select date_of_birth from dogs order by date_of_birth desc limit 1;<separator>select date_of_birth from dogs order by date_of_birth desc limit 1;<separator>select charge_type,  sum(charge_amount) from charges group by charge_type;<separator>select charge_type,  sum(charge_amount) from charges group by charge_type;<separator>select sum(charge_amount) from charges group by charge_type order by sum(charge_amount) desc limit 1;<separator>select charge_amount from charges group by charge_type order by sum(charge_amount) desc limit 1;<separator>select email_address,  home_phone,  cell_number from professionals;<separator>select first_name,  last_name,  email_address,  home_phone,  cell_number from professionals;<separator>select breed_code,  size_code from breeds;<separator>select breed_code,  size_code from breeds;<separator>select t1.first_name,  t2.treatment_type_description from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.first_name;<separator>select t1.first_name,  t1.treatment_type_description from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id;<separator>select count(*) from singer;<separator>select count(*) from singer;<separator>select name from singer order by net_worth_millions asc;<separator>select name from singer order by net_worth_millions asc;<separator>select birth_year,  citizenship from singer;<separator>select birth_year,  citizenship from singer;<separator>select name from singer where citizenship!= "france";<separator>select name from singer where citizenship!= 'fr';<separator>select t1.name from singer as t1 join singer as t2 on t1.singer_id  =  t2.singer_id where t2.birth_year  =  1948 or t2.birth_year  =  1949;<separator>select name from singer where birth_year  =  1948 or birth_year  =  1949;<separator>select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id order by t2.net_worth_millions desc limit 1;<separator>select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id order by t2.net_worth_millions desc limit 1;<separator>select citizenship,  count(*) from singer group by citizenship;<separator>select citizenship,  count(*) from singer group by citizenship;<separator>select citizenship from singer group by citizenship order by count(*) desc limit 1;<separator>select citizenship from singer group by citizenship order by count(*) desc limit 1;<separator>select citizenship,  max(net_worth_millions) from singer group by citizenship;<separator>select max(net_worth_millions) from singer;<separator>select t1.title,  t2.name from song as t1 join singer as t2 on t1.singer_id  =  t2.singer_id;<separator>select t1.title,  t2.name from song as t1 join singer as t2 on t1.singer_id  =  t2.singer_id;<separator>select distinct t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t2.sales  >  300000;<separator>select distinct t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t2.sales  >  300000;<separator>select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.name having count(*)  >  1;<separator>select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.singer_id having count(*)  >  1;<separator>select t1.name,  sum(t2.sales) from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id;<separator>select sum(sales),  t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.name;<separator>select name from singer where singer_id not in (select singer_id from song);<separator>select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t2.title  =  'no song';<separator>select citizenship from singer where birth_year  <  1945 intersect select citizenship from singer where birth_year  >  1955;<separator>select citizenship from singer where birth_year  <  1945 intersect select citizenship from singer where birth_year  >  1955;<separator>select count(*) from other_available_features;<separator>select t2.feature_type_name from other_available_features as t1 join ref_feature_types as t2 on t1.feature_type_code  =  t2.feature_type_code where t1.feature_id  =  'aircon';<separator>select t2.property_type_description from properties as t1 join ref_property_types as t2 on t1.property_type_code  =  t2.property_type_code where t1.property_type_code  =  'apartment';<separator>select t1.property_name from properties as t1 join other_property_features as t2 on t1.property_id  =  t2.property_id where t2.feature_type_code  =  "house" or t2.feature_type_code  =  "apartment"