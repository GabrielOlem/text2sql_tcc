['<|schema|>table addresses, columns = [*,address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\ntable courses, columns = [*,course_id,course_name,course_description,other_details]\ntable degree_programs, columns = [*,degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\ntable departments, columns = [*,department_id,department_name,department_description,other_details]\ntable sections, columns = [*,section_id,course_id,section_name,section_description,other_details]\ntable semesters, columns = [*,semester_id,semester_name,semester_description,other_details]\ntable student_enrolment, columns = [*,student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\ntable student_enrolment_courses, columns = [*,student_course_id,course_id,student_enrolment_id]\ntable students, columns = [*,student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\ntable transcript_contents, columns = [*,student_course_id,transcript_id]\ntable transcripts, columns = [*,transcript_id,transcript_date,other_details]\nforeign_keys = [addresses.address_id,courses.course_id,departments.department_id,degree_programs.degree_program_id,sections.section_id,semesters.semester_id,students.student_id,student_enrolment.student_enrolment_id,student_enrolment_courses.student_course_id,transcripts.transcript_id]\n\nprimary_keys = [degree_programs.department_id = departments.department_id,sections.course_id = courses.course_id,students.permanent_address_id = addresses.address_id,students.current_address_id = addresses.address_id,student_enrolment.student_id = students.student_id,student_enrolment.semester_id = semesters.semester_id,student_enrolment.degree_program_id = degree_programs.degree_program_id,student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id,student_enrolment_courses.course_id = courses.course_id,transcript_contents.transcript_id = transcripts.transcript_id,transcript_contents.student_course_id = student_enrolment_courses.student_course_id]<|endoftext|><|query|>when is the first transcript released? list the date and details.<|endoftext|><|sql|>select transcript_date ,  other_details from transcripts order by transcript_date asc limit 1;<|endoftext|>',
 '<|schema|>table course, columns = [*,course_id,staring_date,course]\ntable course_arrange, columns = [*,course_id,teacher_id,grade]\ntable teacher, columns = [*,teacher_id,name,age,hometown]\nforeign_keys = [course.course_id,teacher.teacher_id,course_arrange.course_id]\n\nprimary_keys = [course_arrange.teacher_id = teacher.teacher_id,course_arrange.course_id = course.course_id]<|endoftext|><|query|>what is the name of each teacher and what course they teach?<|endoftext|><|sql|>select t3.name ,  t2.course from course_arrange as t1 join course as t2 on t1.course_id  =  t2.course_id join teacher as t3 on t1.teacher_id  =  t3.teacher_id;<|endoftext|>',
 '<|schema|>table airlines, columns = [*,uid,airline,abbreviation,country]\ntable airports, columns = [*,city,airportcode,airportname,country,countryabbrev]\ntable flights, columns = [*,airline,flightno,sourceairport,destairport]\nforeign_keys = [airlines.uid,airports.airportcode,flights.airline]\n\nprimary_keys = [flights.destairport = airports.airportcode,flights.sourceairport = airports.airportcode]<|endoftext|><|query|>return the number of flights departing from aberdeen.<|endoftext|><|sql|>select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.city  =  "aberdeen";<|endoftext|>',
 '<|schema|>table airlines, columns = [*,uid,airline,abbreviation,country]\ntable airports, columns = [*,city,airportcode,airportname,country,countryabbrev]\ntable flights, columns = [*,airline,flightno,sourceairport,destairport]\nforeign_keys = [airlines.uid,airports.airportcode,flights.airline]\n\nprimary_keys = [flights.destairport = airports.airportcode,flights.sourceairport = airports.airportcode]<|endoftext|><|query|>return the number of flights arriving in aberdeen.<|endoftext|><|sql|>select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.city  =  "aberdeen";<|endoftext|>',
 '<|schema|>table cartoon, columns = [*,id,title,directed_by,written_by,original_air_date,production_code,channel]\ntable tv_channel, columns = [*,id,series_name,country,language,content,pixel_aspect_ratio_par,hight_definition_tv,pay_per_view_ppv,package_option]\ntable tv_series, columns = [*,id,episode,air_date,rating,share,18_49_rating_share,viewers_m,weekly_rank,channel]\nforeign_keys = [tv_channel.id,tv_series.id,cartoon.id]\n\nprimary_keys = [tv_series.channel = tv_channel.id,cartoon.channel = tv_channel.id]<|endoftext|><|query|>find the package choice and series name of the tv channel that has high definition tv.<|endoftext|><|sql|>select package_option ,  series_name from tv_channel where hight_definition_tv  =  "yes";<|endoftext|>',
 '<|schema|>table city, columns = [*,id,name,countrycode,district,population]\ntable country, columns = [*,code,name,continent,region,surfacearea,indepyear,population,lifeexpectancy,gnp,gnpold,localname,governmentform,headofstate,capital,code2]\ntable countrylanguage, columns = [*,countrycode,language,isofficial,percentage]\ntable sqlite_sequence, columns = [*,name,seq]\nforeign_keys = [city.id,country.code,countrylanguage.countrycode]\n\nprimary_keys = [city.countrycode = country.code,countrylanguage.countrycode = country.code]<|endoftext|><|query|>what is the language spoken by the largest percentage of people in each country?<|endoftext|><|sql|>select language ,  countrycode ,  max(percentage) from countrylanguage group by countrycode;<|endoftext|>',
 '<|schema|>table breeds, columns = [*,breed_code,breed_name]\ntable charges, columns = [*,charge_id,charge_type,charge_amount]\ntable dogs, columns = [*,dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\ntable owners, columns = [*,owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\ntable professionals, columns = [*,professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\ntable sizes, columns = [*,size_code,size_description]\ntable treatment_types, columns = [*,treatment_type_code,treatment_type_description]\ntable treatments, columns = [*,treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nforeign_keys = [breeds.breed_code,charges.charge_id,sizes.size_code,treatment_types.treatment_type_code,owners.owner_id,dogs.dog_id,professionals.professional_id,treatments.treatment_id]\n\nprimary_keys = [dogs.owner_id = owners.owner_id,dogs.owner_id = owners.owner_id,dogs.size_code = sizes.size_code,dogs.breed_code = breeds.breed_code,treatments.dog_id = dogs.dog_id,treatments.professional_id = professionals.professional_id,treatments.treatment_type_code = treatment_types.treatment_type_code]<|endoftext|><|query|>list the date of each treatment, together with the first name of the professional who operated it.<|endoftext|><|sql|>select t1.date_of_treatment ,  t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id;<|endoftext|>',
 '<|schema|>table documents, columns = [*,document_id,template_id,document_name,document_description,other_details]\ntable paragraphs, columns = [*,paragraph_id,document_id,paragraph_text,other_details]\ntable ref_template_types, columns = [*,template_type_code,template_type_description]\ntable templates, columns = [*,template_id,version_number,template_type_code,date_effective_from,date_effective_to,template_details]\nforeign_keys = [ref_template_types.template_type_code,templates.template_id,documents.document_id,paragraphs.paragraph_id]\n\nprimary_keys = [templates.template_type_code = ref_template_types.template_type_code,documents.template_id = templates.template_id,paragraphs.document_id = documents.document_id]<|endoftext|><|query|>return the ids of templates that have the code pp or ppt.<|endoftext|><|sql|>select template_id from templates where template_type_code  =  "pp" or template_type_code  =  "ppt";<|endoftext|>',
 '<|schema|>table city, columns = [*,id,name,countrycode,district,population]\ntable country, columns = [*,code,name,continent,region,surfacearea,indepyear,population,lifeexpectancy,gnp,gnpold,localname,governmentform,headofstate,capital,code2]\ntable countrylanguage, columns = [*,countrycode,language,isofficial,percentage]\ntable sqlite_sequence, columns = [*,name,seq]\nforeign_keys = [city.id,country.code,countrylanguage.countrycode]\n\nprimary_keys = [city.countrycode = country.code,countrylanguage.countrycode = country.code]<|endoftext|><|query|>how many continents speak chinese?<|endoftext|><|sql|>select count( distinct continent) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "chinese";<|endoftext|>',
 "<|schema|>table concert, columns = [*,concert_id,concert_name,theme,stadium_id,year]\ntable singer, columns = [*,singer_id,name,country,song_name,song_release_year,age,is_male]\ntable singer_in_concert, columns = [*,concert_id,singer_id]\ntable stadium, columns = [*,stadium_id,location,name,capacity,highest,lowest,average]\nforeign_keys = [stadium.stadium_id,singer.singer_id,concert.concert_id,singer_in_concert.concert_id,singer_in_concert.singer_id]\n\nprimary_keys = [concert.stadium_id = stadium.stadium_id,singer_in_concert.singer_id = singer.singer_id,singer_in_concert.concert_id = concert.concert_id]<|endoftext|><|query|>what is the average, minimum, and maximum age for all french singers?<|endoftext|><|sql|>select avg(age) ,  min(age) ,  max(age) from singer where country  =  'france';<|endoftext|>",
 '<|schema|>table friend, columns = [*,student_id,friend_id]\ntable highschooler, columns = [*,id,name,grade]\ntable likes, columns = [*,student_id,liked_id]\nforeign_keys = [highschooler.id,friend.student_id,likes.student_id]\n\nprimary_keys = [friend.friend_id = highschooler.id,friend.student_id = highschooler.id,likes.student_id = highschooler.id,likes.liked_id = highschooler.id]<|endoftext|><|query|>show the names of students who have at least 2 likes.<|endoftext|><|sql|>select t2.name from likes as t1 join highschooler as t2 on t1.student_id  =  t2.id group by t1.student_id having count(*)  >=  2;<|endoftext|>',
 '<|schema|>table friend, columns = [*,student_id,friend_id]\ntable highschooler, columns = [*,id,name,grade]\ntable likes, columns = [*,student_id,liked_id]\nforeign_keys = [highschooler.id,friend.student_id,likes.student_id]\n\nprimary_keys = [friend.friend_id = highschooler.id,friend.student_id = highschooler.id,likes.student_id = highschooler.id,likes.liked_id = highschooler.id]<|endoftext|><|query|>count the number of high schoolers in grades 9 or 10.<|endoftext|><|sql|>select count(*) from highschooler where grade  =  9 or grade  =  10;<|endoftext|>',
 '<|schema|>table people, columns = [*,people_id,nationality,name,birth_date,height]\ntable poker_player, columns = [*,poker_player_id,people_id,final_table_made,best_finish,money_rank,earnings]\nforeign_keys = [poker_player.poker_player_id,people.people_id]\n\nprimary_keys = [poker_player.people_id = people.people_id]<|endoftext|><|query|>list the final tables made and the best finishes of poker players.<|endoftext|><|sql|>select final_table_made ,  best_finish from poker_player;<|endoftext|>',
 '<|schema|>table cartoon, columns = [*,id,title,directed_by,written_by,original_air_date,production_code,channel]\ntable tv_channel, columns = [*,id,series_name,country,language,content,pixel_aspect_ratio_par,hight_definition_tv,pay_per_view_ppv,package_option]\ntable tv_series, columns = [*,id,episode,air_date,rating,share,18_49_rating_share,viewers_m,weekly_rank,channel]\nforeign_keys = [tv_channel.id,tv_series.id,cartoon.id]\n\nprimary_keys = [tv_series.channel = tv_channel.id,cartoon.channel = tv_channel.id]<|endoftext|><|query|>find the production code and channel of the most recently aired cartoon .<|endoftext|><|sql|>select production_code ,  channel from cartoon order by original_air_date desc limit 1;<|endoftext|>',
 '<|schema|>table museum, columns = [*,museum_id,name,num_of_staff,open_year]\ntable visit, columns = [*,museum_id,visitor_id,num_of_ticket,total_spent]\ntable visitor, columns = [*,id,name,level_of_membership,age]\nforeign_keys = [museum.museum_id,visitor.id,visit.museum_id]\n\nprimary_keys = [visit.visitor_id = visitor.id,visit.museum_id = museum.museum_id]<|endoftext|><|query|>what are the average and maximum number of tickets bought in all visits?<|endoftext|><|sql|>select avg(num_of_ticket) ,  max(num_of_ticket) from visit;<|endoftext|>',
 '<|schema|>table course, columns = [*,course_id,staring_date,course]\ntable course_arrange, columns = [*,course_id,teacher_id,grade]\ntable teacher, columns = [*,teacher_id,name,age,hometown]\nforeign_keys = [course.course_id,teacher.teacher_id,course_arrange.course_id]\n\nprimary_keys = [course_arrange.teacher_id = teacher.teacher_id,course_arrange.course_id = course.course_id]<|endoftext|><|query|>show names of teachers that teach at least two courses.<|endoftext|><|sql|>select t2.name from course_arrange as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id group by t2.name having count(*)  >=  2;<|endoftext|>',
 "<|schema|>table concert, columns = [*,concert_id,concert_name,theme,stadium_id,year]\ntable singer, columns = [*,singer_id,name,country,song_name,song_release_year,age,is_male]\ntable singer_in_concert, columns = [*,concert_id,singer_id]\ntable stadium, columns = [*,stadium_id,location,name,capacity,highest,lowest,average]\nforeign_keys = [stadium.stadium_id,singer.singer_id,concert.concert_id,singer_in_concert.concert_id,singer_in_concert.singer_id]\n\nprimary_keys = [concert.stadium_id = stadium.stadium_id,singer_in_concert.singer_id = singer.singer_id,singer_in_concert.concert_id = concert.concert_id]<|endoftext|><|query|>what is the name and country of origin of every singer who has a song with the word 'hey' in its title?<|endoftext|><|sql|>select name ,  country from singer where song_name like '%hey%';<|endoftext|>",
 '<|schema|>table matches, columns = [*,best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year]\ntable players, columns = [*,player_id,first_name,last_name,hand,birth_date,country_code]\ntable rankings, columns = [*,ranking_date,ranking,player_id,ranking_points,tours]\nforeign_keys = [players.player_id]\n\nprimary_keys = [matches.winner_id = players.player_id,matches.loser_id = players.player_id,rankings.player_id = players.player_id]<|endoftext|><|query|>find the first name and country code of the oldest player.<|endoftext|><|sql|>select first_name ,  country_code from players order by birth_date limit 1;<|endoftext|>',
 "<|schema|>table documents, columns = [*,document_id,template_id,document_name,document_description,other_details]\ntable paragraphs, columns = [*,paragraph_id,document_id,paragraph_text,other_details]\ntable ref_template_types, columns = [*,template_type_code,template_type_description]\ntable templates, columns = [*,template_id,version_number,template_type_code,date_effective_from,date_effective_to,template_details]\nforeign_keys = [ref_template_types.template_type_code,templates.template_id,documents.document_id,paragraphs.paragraph_id]\n\nprimary_keys = [templates.template_type_code = ref_template_types.template_type_code,documents.template_id = templates.template_id,paragraphs.document_id = documents.document_id]<|endoftext|><|query|>how many documents are using the template with type code 'ppt'?<|endoftext|><|sql|>select count(*) from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id where t2.template_type_code  =  'ppt';<|endoftext|>",
 '<|schema|>table employee, columns = [*,employee_id,name,age,city]\ntable evaluation, columns = [*,employee_id,year_awarded,bonus]\ntable hiring, columns = [*,shop_id,employee_id,start_from,is_full_time]\ntable shop, columns = [*,shop_id,name,location,district,number_products,manager_name]\nforeign_keys = [employee.employee_id,shop.shop_id,hiring.employee_id,evaluation.employee_id]\n\nprimary_keys = [hiring.employee_id = employee.employee_id,hiring.shop_id = shop.shop_id,evaluation.employee_id = employee.employee_id]<|endoftext|><|query|>what are the minimum and maximum number of products across all the shops?<|endoftext|><|sql|>select min(number_products) ,  max(number_products) from shop;<|endoftext|>',
 '<|schema|>table matches, columns = [*,best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year]\ntable players, columns = [*,player_id,first_name,last_name,hand,birth_date,country_code]\ntable rankings, columns = [*,ranking_date,ranking,player_id,ranking_points,tours]\nforeign_keys = [players.player_id]\n\nprimary_keys = [matches.winner_id = players.player_id,matches.loser_id = players.player_id,rankings.player_id = players.player_id]<|endoftext|><|query|>find the number of players for each hand type.<|endoftext|><|sql|>select count(*) ,  hand from players group by hand;<|endoftext|>',
 "<|schema|>table cartoon, columns = [*,id,title,directed_by,written_by,original_air_date,production_code,channel]\ntable tv_channel, columns = [*,id,series_name,country,language,content,pixel_aspect_ratio_par,hight_definition_tv,pay_per_view_ppv,package_option]\ntable tv_series, columns = [*,id,episode,air_date,rating,share,18_49_rating_share,viewers_m,weekly_rank,channel]\nforeign_keys = [tv_channel.id,tv_series.id,cartoon.id]\n\nprimary_keys = [tv_series.channel = tv_channel.id,cartoon.channel = tv_channel.id]<|endoftext|><|query|>what are the countries that have cartoons on tv that were written by todd casey?<|endoftext|><|sql|>select t1.country from tv_channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.written_by  =  'todd casey';<|endoftext|>",
 "<|schema|>table battle, columns = [*,id,name,date,bulgarian_commander,latin_commander,result]\ntable death, columns = [*,caused_by_ship_id,id,note,killed,injured]\ntable ship, columns = [*,lost_in_battle,id,name,tonnage,ship_type,location,disposition_of_ship]\nforeign_keys = [battle.id,ship.id,death.id]\n\nprimary_keys = [ship.lost_in_battle = battle.id,death.caused_by_ship_id = ship.id]<|endoftext|><|query|>what are the different ids and names of the battles that lost any 'brig' type shipes?<|endoftext|><|sql|>select distinct t1.id ,  t1.name from battle as t1 join ship as t2 on t1.id  =  t2.lost_in_battle where t2.ship_type  =  'brig';<|endoftext|>",
 '<|schema|>table addresses, columns = [*,address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\ntable courses, columns = [*,course_id,course_name,course_description,other_details]\ntable degree_programs, columns = [*,degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\ntable departments, columns = [*,department_id,department_name,department_description,other_details]\ntable sections, columns = [*,section_id,course_id,section_name,section_description,other_details]\ntable semesters, columns = [*,semester_id,semester_name,semester_description,other_details]\ntable student_enrolment, columns = [*,student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\ntable student_enrolment_courses, columns = [*,student_course_id,course_id,student_enrolment_id]\ntable students, columns = [*,student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\ntable transcript_contents, columns = [*,student_course_id,transcript_id]\ntable transcripts, columns = [*,transcript_id,transcript_date,other_details]\nforeign_keys = [addresses.address_id,courses.course_id,departments.department_id,degree_programs.degree_program_id,sections.section_id,semesters.semester_id,students.student_id,student_enrolment.student_enrolment_id,student_enrolment_courses.student_course_id,transcripts.transcript_id]\n\nprimary_keys = [degree_programs.department_id = departments.department_id,sections.course_id = courses.course_id,students.permanent_address_id = addresses.address_id,students.current_address_id = addresses.address_id,student_enrolment.student_id = students.student_id,student_enrolment.semester_id = semesters.semester_id,student_enrolment.degree_program_id = degree_programs.degree_program_id,student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id,student_enrolment_courses.course_id = courses.course_id,transcript_contents.transcript_id = transcripts.transcript_id,transcript_contents.student_course_id = student_enrolment_courses.student_course_id]<|endoftext|><|query|>what are all the addresses including line 1 and line 2?<|endoftext|><|sql|>select line_1 ,  line_2 from addresses;<|endoftext|>',
 '<|schema|>table conductor, columns = [*,conductor_id,name,age,nationality,year_of_work]\ntable orchestra, columns = [*,orchestra_id,orchestra,conductor_id,record_company,year_of_founded,major_record_format]\ntable performance, columns = [*,performance_id,orchestra_id,type,date,official_ratings_(millions),weekly_rank,share]\ntable show, columns = [*,show_id,performance_id,if_first_show,result,attendance]\nforeign_keys = [conductor.conductor_id,orchestra.orchestra_id,performance.performance_id]\n\nprimary_keys = [orchestra.conductor_id = conductor.conductor_id,performance.orchestra_id = orchestra.orchestra_id,show.performance_id = performance.performance_id]<|endoftext|><|query|>find the number of orchestras whose record format is "cd" or "dvd".<|endoftext|><|sql|>select count(*) from orchestra where major_record_format  =  "cd" or major_record_format  =  "dvd";<|endoftext|>']