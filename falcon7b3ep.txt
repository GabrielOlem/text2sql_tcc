select count(*) from singer;
select count(*) from singer;
select name,  country,  age from singer order by age desc;
select name,  country,  age from singer order by age desc;
select avg(age),  min(age),  max(age) from singer where country  =  'france';
select avg(age),  min(age),  max(age) from singer where country  =  "france";
select song_name,  song_release_year from singer order by age desc limit 1;
select song_name,  song_release_year from singer where age  =  min(age) group by song_name;
select country from singer where age  >  20 group by country having count(*)  >  1;
select country from singer where age  >  20 group by country having count(*)  >=  1;
select country,  count(*) from singer group by country;
select country,  count(*) from singer group by country;
select song_name from singer where age  >  (select avg(age) from singer);
select song_name from singer where age  >  (select avg(age) from singer);
select location,  name from stadium where capacity  >=  5000 and capacity  <=  10000;
select location,  name from stadium where capacity between 5000 and 10000;
select max(highest),  avg(capacity) from stadium;
select avg(highest),  max(capacity) from stadium;
select name,  avg(capacity) from stadium order by avg(capacity) desc limit 1;
select name,  avg(capacity) from stadium order by avg(capacity) desc limit 1;
select count(*) from concert where year  =  2014 or year  =  2015;
select count(*) from concert where year  =  2014 or year  =  2015;
select t2.name,  count(*) from stadium as t1 join stadium_in_concert as t2 on t1.stadium_id  =  t2.stadium_id group by t1.stadium_id;
select count(*) from stadium as t1 join stadium_in_concert as t2 on t1.stadium_id  =  t2.stadium_id;
select t1.name,  t2.capacity from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id where t2.year  >=  2014 group by t1.name having count(*)  >  1 order by t
select name,  highest from stadium order by year desc limit 1;
select year from concert group by year order by count(*) desc limit 1;
select year from concert order by year desc limit 1;
select name from stadium where location  =  'any';
select name from stadium where stadium_id not in (select stadium_id from stadium_in_concert);
select country from singer where age  >  40 intersect select country from singer where age  <  30;
select name from stadium where stadium_id not in (select stadium_id from concert where year  =  2014);
select name from stadium where highest  <  2014;
select t1.concert_name,  t2.theme from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id;
select t1.concert_name,  t2.theme,  count(*) from concert as t1 join singer_in_concert as t2 on t1.concert_id  =  t2.concert_id group by t1.concert_name;
select name,  count(*) from singer group by name;
select t1.name,  count(*) from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id group by t1.name;
select name from concert where year  =  2014;
select t1.name from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t2.year  =  2014;
select t1.name,  t2.country from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t2.song_name like '%hey%';
select t1.name,  t2.country from singer as t1 join singer_in_concert as t2 on t1.singer_id  =  t2.singer_id where t2.song_name like '%hey%';
select t1.name,  t2.location from stadium as t1 join concert as t2 on t1.stadium_id  =  t2.stadium_id where t2.year  =  2014 intersect select t1.name,  t2.location from stadium as t
select name,  location from stadium where year  =  2014 intersect select name,  location from stadium where year  =  2015;
select count(*) from stadium as t1 join stadium_in_concert as t2 on t1.stadium_id  =  t2.stadium_id where t2.highest  =  t1.capacity order by t1.capacity desc limit 1;
select count(*) from stadium as t1 join stadium_in_concert as t2 on t1.stadium_id  =  t2.stadium_id group by t1.stadium_id order by t1.capacity desc limit 1;
select count(*) from pets where weight  >  10;
select count(*) from pets where weight  >  10;
select weight from pets order by pet_age desc limit 1;
select weight from pets where pet_age  =  "youngest";
select max(weight),  t1.pet_type from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t1.pet_type;
select max(weight),  max(pet_type) from pets;
select count(*) from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.age  >  20;
select count(*) from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.age  >  20;
select count(*) from has_pet where pettype  =  "dog" and sex  =  "f";
select count(*) from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.sex  =  "female" and t1.petid  =  "dog";
select count(distinct pet_type) from pets;
select count(distinct pet_type) from pets;
select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid in (select petid from pets where pet_type  =  'cat' or pet_type  =  'dog');
select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid in (select petid from pets where pet_type  =  'cat' union select petid from pets where pet_type  =
select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid in (select petid from pets where pet_type  =  'cat' intersect select petid from pets where pet_type  =
select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid in (select petid from pets where pet_type  =  "cat" intersect select petid from pets where pet_type  =
select t1.major,  t1.age from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  -1;
select t1.major from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid !=  1 and t1.major !=  'cat' and t1.age between 18 and 25;
select stuid from has_pet except select t1.stuid from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid where t2.pet_type  =  'cat';
select stuid from has_pet except select t1.stuid from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.major  =  'cat';
select fname,  age from student where stuid in (select stuid from has_pet where petid !=  2);
select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  1 except select t1.fname from student as t1 join has_pet as t2 on t1.stuid
select pet_type,  weight from pets order by pet_age desc limit 1;
select t1.pettype,  t1.weight from has_pet as t1 join pets as t2 on t1.petid  =  t2.petid group by t1.pettype order by t1.pet_age limit 1;
select petid,  weight from pets where pet_age  >  1;
select petid,  weight from pets where pet_age  >  1;
select avg(pet_age),  max(pet_age) from pets where pet_type  =  'cat';
select avg(t1.pet_age),  max(t1.pet_age) from pets as t1 join has_pet as t2 on t1.petid  =  t2.petid group by t2.pet_age;
select avg(weight),  pettype from pets group by pettype;
select avg(pet_age),  pettype from has_pet group by pettype;
select fname,  age from student where stuid in (select t1.stuid from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid);
select distinct fname,  age from student where stuid in (select petid from has_pet);
select t1.petid from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.lname  = 'smith';
select t1.petid from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t2.lname  = 'smith';
select count(*),  stuid from has_pet join student on has_pet.stuid  =  student.stuid group by stuid;
select stuid,  count(*) from has_pet group by stuid;
select fname,  lname from student where stuid in (select stuid from has_pet group by petid having count(*)  >  1);
select t1.fname,  t1.sex from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid having count(*)  >  1;
select t1.lname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid  =  3 and t2.pet_age  =  3;
select t2.lname from has_pet as t1 join student as t2 on t1.stuid  =  t2.stuid where t1.petid  =  3 and t2.sex  =  'f';
select avg(t1.age) from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid where t2.petid is null;
select avg(age) from student where stuid not in (select stuid from has_pet);
select count(*) from continents;
select count(*) from continents;
select continentid,  continent,  count(*) from countries group by continent;
select continent,  countryname,  count(*) from countries group by continent;
select count(*) from countries;
select count(*) from countries;
select t1.maker,  t1.fullname,  count(*) from car_makers as t1 join car_names as t2 on t1.id  =  t2.makeid group by t1.maker;
select t1.fullname,  t2.id,  count(*) from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id;
select t1.model from car_names as t1 join cars_data as t2 on t1.id  =  t2.make where t2.horsepower  =  min(t2.horsepower) group by t1.model;
select t1.model from car_names as t1 join cars_data as t2 on t1.id  =  t2.make where t2.horsepower  =  min(t2.horsepower) group by t1.model;
select t1.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.make where t2.weight  <  (select avg(t1.weight) from cars_data);
select t1.model from cars_data as t1 join car_names as t2 on t1.id  =  t2.make where t2.weight  <  (select avg(t1.weight) from cars_data);
select t1.maker from car_makers as t1 join cars_data as t2 on t1.id  =  t2.make where t2.year  =  1970;
select t1.maker from car_makers as t1 join car_names as t2 on t1.id  =  t2.make where t2.year  =  1970;
select t1.maker,  t2.productiontime from car_makers as t1 join cars_data as t2 on t1.id  =  t2.makeid where t1.continent  =  'europe' and t2.year  <  1970;
select t1.maker,  t2.year from car_makers as t1 join cars_data as t2 on t1.id  =  t2.makeid where t2.year  =  (select min(year) from cars_data);
select distinct model from car_makers where year  >  1980;
select distinct model from car_makers where year  >  1980;
select t2.continent,  count(*) from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.continent;
select t2.continent,  count(*) from countries as t1 join model_list as t2 on t1.continent  =  t2.continent group by t1.continent;
select t2.country from car_makers as t1 join countries as t2 on t1.country  =  t2.continent group by t2.continent order by count(*) desc limit 1;
select t1.country from countries as t1 join model_list as t2 on t1.continent  =  t2.maker group by t1.country order by count(*) desc limit 1;
select count(*),  maker from car_makers group by maker;
select count(*),  maker,  fullname from car_makers group by maker;
select accelerate from car_names where make  =  "amc hornet sportabout";
select accelerate from cars_data where make  =  "amc hornet sportabout";
select count(*) from car_makers where country  =  "france";
select count(*) from car_makers where country  =  "france";
select count(*) from car_makers where country  =  'usa';
select count(*) from car_makers where country  =  'united states';
select avg(t2.mpg) from cars_data as t1 join car_names as t2 on t1.make  =  t2.make where cylinders  =  4;
select avg(mpg) from cars_data where cylinders  =  4;
select min(weight) from cars_data where cylinders  =  8 and year  =  1974;
select min(t1.weight) from cars_data as t1 join car_makers as t2 on t1.make  =  t2.id where t2.cylinder  =  8 and t1.year  =  1974;
select maker,  model from car_makers;
select maker,  model from car_makers;
select countryname,  id from countries group by countryname having count(*)  >=  1;
select t1.country,  t2.id from countries as t1 join model_list as t2 on t1.continent  =  t2.continent group by t1.continent having count(*)  >=  1;
select count(*) from cars_data where horsepower  >  150;
select count(*) from cars_data where horsepower  >  150;
select avg(t1.weight) from cars_data as t1 join cars_data as t2 on t1.id  =  t2.id group by t1.year;
select avg(t1.weight),  avg(t1.year) from cars_data as t1 join car_names as t2 on t1.make  =  t2.make where t2.year between 1990 and 2000;
select continent from countries where continent  =  'europe' group by continent having count(*)  >=  3;
select distinct country from countries where continent  =  'europe' group by country having count(*)  >=  3;
select max(horsepower),  maker from car_names where cylinders  =  3;
select max(horsepower),  maker from cars_data where cylinders  =  3 intersect select t1.horsepower from cars_data as t1 join model_list as t2 on t1.model  =  t2.model where t2.cylinder  =  3 intersect select t1
select t1.model from car_makers as t1 join car_names as t2 on t1.id  =  t2.make where t2.mpg  =  (select max(mpg) from car_names);
select t1.model from car_names as t1 join cars_data as t2 on t1.id  =  t2.make where t2.mpg  =  (select max(mpg) from cars_data);
select avg(horsepower) from cars_data where year  <  1980;
select avg(horsepower) from cars_data where year  <  1980;
select avg(t1.edispl) from cars_data as t1 join car_names as t2 on t1.make  =  t2.make where t2.make  =  "volvo";
select avg(edispl) from cars_data where make  =  "volvo";
select max(accelerate) from cars_data where cylinders  <  4;
select max(accelerate) from cars_data group by cylinders;
select t1.model from car_makers as t1 join car_names as t2 on t1.id  =  t2.makeid group by t1.model order by count(*) desc limit 1;
select t1.model from car_makers as t1 join model_list as t2 on t1.id  =  t2.model group by t1.model order by count(*) desc limit 1;
select count(*) from cars_data where cylinders  >  4;
select count(*) from cars_data where cylinders  >  4;
select count(*) from cars_data where year  =  1980;
select count(*) from cars_data where year  =  1980;
select count(*) from car_makers as t1 join car_makers as t2 on t1.maker  =  t2.maker where t1.fullname  =  "american motor company";
select count(*) from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker where t1.maker  =  "american motor company";
select t1.fullname,  t2.id from car_makers as t1 join car_names as t2 on t1.id  =  t2.makeid group by t1.id having count(*)  >  3;
select t1.maker,  t1.id from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.maker having count(*)  >  3;
select distinct t1.model from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker where t2.maker like '%general%' or t2.weight  >  3500;
select distinct t1.model from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker where t2.weight  >  3500 group by t1.maker;
select year from cars_data where weight  >=  3000 and weight  <=  4000;
select year from cars_data where weight  <  4000 intersect select year from cars_data where weight  >  3000;
select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id  =  t2.make where t2.accelerate  =  (select max(t3.accelerate) from cars_data as t3);
select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id  =  t2.make where t2.accelerate  =  (select max(t3.accelerate) from cars_data as t3 join car_names as t4 on
select cylinders from cars_data where accelerate  =  (select min(accelerate) from cars_data);
select cylinders from car_names where make  =  "volvo" order by accelerate desc limit 1;
select count(*) from cars_data where accelerate  >  (select max(accelerate) from cars_data);
select count(*) from cars_data where accelerate  >  ( select max(accelerate) from cars_data group by horsepower);
select count(*) from countries as t1 join model_list as t2 on t1.continent  =  t2.maker group by t1.continent having count(*)  >  2;
select count(*) from countries as t1 join model_list as t2 on t1.continent  =  t2.continent group by t1.continent having count(*)  >  2;
select count(*) from cars_data where cylinders  >  6;
select count(*) from cars_data where cylinders  >  6;
select t1.horsepower from cars_data as t1 join car_names as t2 on t1.id  =  t2.make where t2.cylinders  =  4 group by t1.horsepower order by max(t2.horsepower) limit 1;
select t1.horsepower from cars_data as t1 join car_names as t2 on t1.make  =  t2.make where t2.cylinders  =  4;
select make from car_names where horsepower  >  (select min(horsepower) from cars_data);
select t1.make,  t1.makeid from car_makers as t1 join cars_data as t2 on t1.id  =  t2.makeid where t2.horsepower  <  4 group by t1.makeid having count(*)  >  1;
select max(mpg) from cars_data where cylinders  =  8 or year  <  1980;
select max(mpg) from cars_data where cylinders  =  8 or year  <  1980;
select model from cars_data where cylinders  <  3500 except select make from car_makers where maker  =  "ford motor company";
select model from cars_data where cylinders  <  3500 except select make from car_makers where id in (select makeid from car_makers);
select country from countries except select t1.country from countries as t1 join model_list as t2 on t1.continent  =  t2.continent join car_makers as t3 on t3.id  =  t2.maker;
select distinct country from countries where continent  =  'no';
select t1.maker,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.maker having count(*)  >=  2 intersect select t1.maker,  t1.maker from car_
select t1.id,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.maker having count(*)  >=  2 intersect select t1.id,  t1.maker from car_
select t1.country from countries as t1 join model_list as t2 on t1.continent  =  t2.continent where t2.model  =  "fiat" group by t1.country having count(*)  >  3;
select t1.continent,  t2.country from countries as t1 join model_list as t2 on t1.continent  =  t2.continent where t1.continent like '%fiat%' intersect select t1.continent,  t2.countryname from
select country from airlines where airline  =  "jetblue airways";
select country from airlines where airline  =  "jetblue airways";
select t2.abbreviation from airlines as t1 join airports as t2 on t1.airline  =  t2.airline where t1.airline  =  "jetblue airways";
select t2.abbreviation from airlines as t1 join airports as t2 on t1.airline  =  t2.airline where t1.airline  =  "jetblue airways";
select distinct t1.airline,  t2.abbreviation from airlines as t1 join airports as t2 on t1.airline  =  t2.airline where t1.country  =  "usa";
select t1.airline,  t1.abbreviation from airlines as t1 join airlines as t2 on t1.uid  =  t2.uid where t2.country  =  'usa';
select airportcode,  airportname from airports where city  =  'anthony';
select airportcode,  airportname from airports where city  =  'anthony';
select count(*) from airlines;
select count(*) from airlines;
select count(*) from airports;
select count(*) from airports;
select count(*) from flights;
select count(*) from flights;
select airline from airlines where abbreviation  =  'ual';
select airline from airlines where abbreviation  =  'ual';
select count(*) from airlines where country  =  'usa';
select count(*) from airlines where country  =  'usa';
select city,  country from airports where airportname  =  'alton';
select city,  country from airports where airportcode  =  'alton';
select airportname from airports where airportcode  =  'ako';
select airportname from airports where airportcode  =  'ako';
select airportname from airports where city  =  'aberdeen';
select airportname from airports where city  =  'aberdeen';
select count(*) from flights where destairport  =  "apg";
select count(*) from flights where destairport  =  "apg";
select count(*) from flights where destairport  =  'ato';
select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportcode  =  'ato';
select count(*) from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport where t1.city  =  'aberdeen';
select count(*) from flights where destairport  =  'aberdeen';
select count(*) from flights as t1 join airports as t2 on t1.destairport  =  t2.airportcode where t2.airportname  =  'aberdeen';
select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.uid where t2.airportcode  =  "aberdeen";
select count(*) from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportname  =  "aberdeen" and t1.destairport  =  "ashley";
select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.uid where t2.airportcode  =  "aberdeen" intersect select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.uid
select count(*) from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airline  =  'jetblue airways';
select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.uid where t2.airline  =  "jetblue airways";
select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.airline  =  "united airlines" and t1.destairport  =  "asy";
select count(*) from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'asy';
select count(*) from flights as t1 join airlines as t2 on t1.airline  =  t2.airline where t2.airline  =  "united airlines" and t1.destairport  =  "ahd";
select count(*) from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airline  =  'united' and t2.destairport  =  'ahd';
select count(*) from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t1.airline  =  'united' and t2.destairport  =  'aberdeen';
select count(*) from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'aberdeen';
select city from airports group by city order by count(*) desc limit 1;
select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.city order by count(*) desc limit 1;
select city from airports group by city order by count(*) desc limit 1;
select t1.city from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport group by t1.city order by count(*) desc limit 1;
select airportcode from airports order by count(*) desc limit 1;
select airportcode from airports group by airportcode order by count(*) desc limit 1;
select airportcode from airports order by count(*) desc limit 1;
select airportcode from airports order by count(*) desc limit 1;
select airline from flights group by airline order by count(*) desc limit 1;
select airline from flights group by airline order by count(*) desc limit 1;
select t1.abbreviation,  t1.country from airlines as t1 join flights as t2 on t1.airline  =  t2.airline group by t1.airline order by count(*) desc limit 1;
select t1.abbreviation,  t2.country from airlines as t1 join airports as t2 on t1.airline  =  t2.airportcode group by t1.airline having count(*)  =  min(flights.numberofflights) order by t1.ab
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'ahd';
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'ahd';
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'ahd';
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'ahd';
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  "apg" intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid  = 
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  "apg" intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid  = 
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t2.destairport  =  'cvo' except select t1.airline from airlines as t1 join flights as t2 on t1.uid  = 
select t1.airline from airlines as t1 join flights as t2 on t1.airline  =  t2.airline where t2.destairport  =  'cvo' intersect select t1.airline from airlines as t1 join flights as t2 on t1.airline  
select airline from airlines where count(*)  >=  10;
select t1.airline from airlines as t1 join flights as t2 on t1.uid  =  t2.airline group by t1.airline having count(*)  >=  10;
select airline from airlines where count(*)  <  200;
select airline from airlines where count(*)  <  200;
select flightno from airlines as t1 join flights as t2 on t1.uid  =  t2.airline where t1.airline  =  "united airlines";
select flightno from flights where airline  =  'united';
select flightno from flights where destairport  =  'apg';
select flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportcode  =  'apg';
select t1.flightno from flights as t1 join airports as t2 on t1.sourceairport  =  t2.airportcode where t2.airportcode  =  "apg";
select flightno from flights where destairport  =  'apg';
select t2.flightno from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport where t1.city  =  "aberdeen";
select flightno from flights where destairport  =  'aberdeen';
select t1.flightno from airports as t1 join flights as t2 on t1.airportcode  =  t2.destairport where t1.city  =  "aberdeen";
select flightno from flights where destairport  =  'aberdeen';
select count(*) from flights where destairport  =  "aberdeen" intersect select count(*) from flights where destairport  =  "abilene";
select count(*) from flights where destairport  =  "aberdeen" or destairport  =  "abilene";
select airportname from airports where airportcode not in ( select airportcode from flights );
select airportcode from airports where airportname!= 'departing' or airportname!= 'arriving';
select count(*) from employee;
select count(*) from employee;
select name from employee order by age asc;
select name from employee order by age asc;
select count(*),  city from employee group by city;
select count(*),  city from employee group by city;
select city from employee where age  >  30 group by city having count(*)  >=  2;
select city from employee where age  >  30 group by city having count(*)  >=  2;
select count(*),  location from shop group by location;
select count(*),  location from shop group by location;
select manager_name,  location from shop order by number_products desc limit 1;
select t1.manager_name,  t2.district from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;
select min(number_products),  max(number_products) from shop;
select min(number_products),  max(number_products) from shop;
select name,  location,  district from shop order by number_products desc;
select name,  location,  district from shop order by number_products desc;
select name from shop where number_products  >  (select avg(number_products) from shop);
select t1.name from shop as t1 join evaluation as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id having avg(t2.number_products)  >   10;
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t1.employee_id order by count(*) desc limit 1;
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t1.employee_id order by count(*) desc limit 1;
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t1.employee_id order by sum(t2.bonus) desc limit 1;
select t1.name from employee as t1 join evaluation as t2 on t1.employee_id  =  t2.employee_id group by t2.employee_id order by sum(t2.bonus) desc limit 1;
select name from employee where employee_id not in (select employee_id from evaluation);
select name from employee where employee_id not in (select employee_id from evaluation);
select t2.name from hiring as t1 join shop as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;
select t1.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id order by count(*) desc limit 1;
select name from shop where manager_name!= 'hiring';
select name from shop where number_products  =  (select count(*) from employee);
select count(*),  t1.name from hiring as t1 join shop as t2 on t1.shop_id  =  t2.shop_id group by t2.name;
select count(*),  t1.name from shop as t1 join hiring as t2 on t1.shop_id  =  t2.shop_id group by t1.shop_id;
select sum(bonus) from evaluation;
select sum(bonus) from evaluation;
select * from hiring;
select * from hiring;
select district from shop where number_products  <  3000 intersect select district from shop where number_products  >  10000;
select distinct district from shop where number_products  <  3000 intersect select distinct district from shop where number_products  >  10000;
select count(distinct location) from shop;
select count(distinct location) from shop;
select count(*) from documents;
select count(*) from documents;
select document_id,  document_name,  document_description from documents;
select document_id,  document_name,  document_description from documents;
select t1.document_name,  t2.template_id from documents as t1 join ref_template_types as t2 on t1.template_id  =  t2.template_id where t1.document_description like '%w%';
select document_name,  document_description from documents where document_description like '%w%';
select document_id,  template_id,  document_description from documents where document_name  =  "robbin cv";
select document_id,  template_id,  document_description from documents where document_name  =  "robbin cv";
select count(distinct template_id) from documents;
select count(distinct template_id) from documents;
select count(*) from documents where document_type_code  =  'ppt';
select count(*) from documents where document_type_code  =  'ppt';
select t1.template_id,  count(*) from templates as t1 join documents as t2 on t1.template_id  =  t2.template_id group by t1.template_id;
select distinct t1.template_id,  count(*) from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t1.template_id;
select t1.template_id,  t2.template_type_code from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t1.document_id order by count(*) desc limit 1;
select t1.template_id,  t2.template_type_code from templates as t1 join documents as t2 on t1.template_id  =  t2.template_id group by t1.template_id order by count(*) desc limit 1;
select t1.template_id from templates as t1 join documents as t2 on t1.template_id  =  t2.template_id group by t1.template_id having count(*)  >  1;
select t1.template_id from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id group by t1.document_id having count(*)  >  1;
select template_id from templates where template_type_code not in (select template_id from documents);
select template_id from templates where template_type_code not in (select template_id from documents);
select count(*) from templates;
select count(*) from templates;
select t1.template_id,  t2.version_number,  t3.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code join templates as t3 on t
select template_id,  version_number,  template_type_code from templates;
select distinct t1.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code;
select distinct template_type_code from templates;
select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_code  =  'pp' intersect select t1.template_id from templates as t
select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_code  =  'pp' intersect select t1.template_id from templates as t
select count(*) from templates where template_type_code  =  'cv';
select count(*) from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_code  =  'cv';
select version_number,  template_type_code from templates where version_number  >  5;
select version_number,  template_type_code from templates where version_number  >  5;
select t1.template_type_code,  count(*) from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code group by t2.template_type_code;
select distinct template_type_code,  count(*) from templates group by template_type_code;
select template_type_code from templates group by template_type_code order by count(*) desc limit 1;
select t1.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code group by t2.template_type_code order by count(*) desc limit 1;
select template_type_code from ref_template_types group by template_type_code having count(*)  <  3;
select template_type_code from ref_template_types where template_type_code  <  3;
select min(version_number),  template_type_code from templates group by template_type_code;
select date_effective_from,  template_type_code from templates group by date_effective_from order by date_effective_from desc limit 1;
select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id  =  t2.template_id where t2.document_name  =  "data base";
select t1.template_type_code from documents as t1 join templates as t2 on t1.template_id  =  t2.template_id where t1.document_name  =  "data base";
select t1.document_name from documents as t1 join ref_template_types as t2 on t1.document_id  =  t2.template_id where t2.template_type_code  =  'bk';
select document_name from documents where template_type_code  =  'bk';
select t1.template_type_code,  count(*) from templates as t1 join documents as t2 on t1.template_id  =  t2.document_id group by t1.template_type_code;
select distinct template_type_code,  count(*) from documents group by template_type_code;
select template_type_code from documents group by template_type_code order by count(*) desc limit 1;
select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id  =  t2.template_id group by t1.template_type_code order by count(*) desc limit 1;
select template_type_code from templates except select t1.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code;
select template_type_code from templates where template_type_code not in (select template_type_code from documents);
select template_type_code,  template_type_description from ref_template_types;
select template_type_code,  template_type_description from ref_template_types;
select template_type_description from ref_template_types where template_type_code  =  "ad";
select template_type_description from ref_template_types where template_type_code  =  'ad';
select template_type_code from ref_template_types where template_type_description  =  "book";
select t2.template_type_code from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t1.template_description  =  "book";
select distinct template_type_description from documents join templates on documents.document_id  =  templates.document_id group by template_type_description;
select other_details from documents where document_name  =  'templates';
select template_id from ref_template_types where template_type_description  =  "presentation";
select t1.template_id from templates as t1 join ref_template_types as t2 on t1.template_type_code  =  t2.template_type_code where t2.template_type_description  =  'presentation';
select count(*) from paragraphs;
select count(*) from paragraphs;
select count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  = 'summer show';
select count(*) from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "summer show";
select other_details from documents where document_name  =  "korea ";
select other_details from documents where document_name like '%korea%';
select t1.paragraph_id,  t1.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  'welcome to ny';
select t1.paragraph_id,  t1.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id where t1.document_name  =  "welcome to ny";
select other_details from documents where document_name  =  "customer reviews";
select other_details from documents where document_name  =  "customer reviews";
select document_id,  count(*) from documents group by document_id;
select document_id,  count(*) from documents group by document_id;
select document_id,  document_name,  count(*) from documents group by document_id;
select document_id,  document_name,  count(*) from documents group by document_name;
select document_id from documents group by document_id having count(*)  >=  2;
select document_id from documents group by document_id having count(*)  >=  2;
select t1.document_id,  t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id  =  t2.document_id group by t1.document_id order by count(*) desc limit 1;
select document_id,  document_name from documents order by count(*) desc limit 1;
select document_id from documents group by document_id order by count(*) desc limit 1;
select document_id from documents order by count(*) desc limit 1;
select document_id from documents where document_name  = 'sample' intersect select document_id from documents group by document_id having count(*)  >=  1 intersect group by document_id having count(*)  =  2;
select document_id from documents where document_description like '%one% or %two%';
select document_id from documents where document_name  =  "brazil" intersect select document_id from documents where document_name  =  "ireland";
select document_id from documents where document_description  =  "brazil" intersect select document_id from documents where document_description  =  "ireland";
select count(*) from teacher;
select count(*) from teacher;
select name from teacher order by age asc;
select name from teacher order by age asc;
select age,  hometown from teacher;
select name,  hometown from teacher;
select name from teacher where hometown!= "little lever urban district";
select name from teacher where hometown!= "little lever urban district";
select name from teacher where age  =  32 or age  =  33;
select name from teacher where age  =  32 or age  =  33;
select hometown from teacher order by age desc limit 1;
select t1.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id order by t1.age desc limit 1;
select hometown,  count(*) from teacher group by hometown;
select hometown,  count(*) from teacher group by hometown;
select hometown from teacher group by hometown order by count(*) desc limit 1;
select hometown from teacher group by hometown order by count(*) desc limit 1;
select hometown from teacher group by hometown having count(*)  >=  2;
select hometown from teacher group by hometown having count(*)  >=  2;
select t1.name,  t2.course from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id;
select t1.name,  t2.course from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id;
select t2.name,  t1.course from course as t1 join course_arrange as t2 on t1.course_id  =  t2.course_id order by t1.name;
select t1.name,  t2.course from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id order by t1.name;
select t2.name from course as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id where t1.course like '%math%';
select t2.name from course as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id where t1.course like "%math%";
select t1.name,  count(*) from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id group by t1.name;
select t1.name,  count(*) from course as t1 join teacher as t2 on t1.teacher_id  =  t2.teacher_id group by t2.name;
select name from teacher where teacher_id in (select teacher_id from course_arrange);
select t1.name from teacher as t1 join course_arrange as t2 on t1.teacher_id  =  t2.teacher_id group by t1.teacher_id having count(*)  >=  2;
select name from teacher where teacher_id not in (select teacher_id from course_arrange);
select name from teacher where teacher_id not in (select teacher_id from course_arrange);
select count(*) from visit where age  <  30;
select name from visitor where level_of_membership  >  4 order by level_of_membership;
select avg(age) from visitor where level_of_membership  <  4;
select t1.name,  t2.level_of_membership from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id where t1.level_of_membership  >  4 order by t2.age;
select t1.museum_id,  t1.name from museum as t1 join visit as t2 on t1.museum_id  =  t2.museum_id group by t1.museum_id order by count(*) desc limit 1;
select avg(num_of_staff) from museum where open_year  >  2009;
select open_year,  num_of_staff from museum where name  =  "plaza museum";
select name from museum where num_of_staff  >  (select min(num_of_staff) from museum);
select t1.id,  t1.name,  t1.age from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id group by t1.id having count(*)  >  1;
select t1.id,  t1.name,  t1.level_of_membership from visitor as t1 join visit as t2 on t1.id  =  t2.visitor_id group by t2.total_spent order by sum(t2.total_sp
select t1.museum_id,  t1.name from visit as t1 join museum as t2 on t1.museum_id  =  t2.museum_id group by t1.museum_id order by count(*) desc limit 1;
select name from museum where museum_id not in (select museum_id from visit);
select t1.name,  t1.age from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id group by t2.id order by sum(t2.num_of_ticket) desc limit 1;
select avg(t1.num_of_ticket),  max(t1.num_of_ticket) from visit as t1 join museum as t2 on t1.museum_id  =  t2.museum_id;
select sum(t2.total_spent) from visit as t1 join visitor as t2 on t1.visitor_id  =  t2.id where t1.level_of_membership  =  1;
select t2.name from visit as t1 join museum as t2 on t1.museum_id  =  t2.museum_id where t1.open_year  <  2009 intersect select t2.name from visit as t1 join museum as t2 on t1.museum
select count(*) from visit where open_year  <  2010;
select count(*) from museum where open_year  >  2013 or open_year  <  2008;
select count(*) from players;
select count(*) from players;
select count(*) from matches;
select count(*) from matches;
select first_name,  birth_date from players where country_code  =  'usa';
select first_name,  birth_date from players where country_code  =  'usa';
select avg(loser_age),  avg(winner_age) from matches;
select avg(loser_age),  avg(winner_age) from matches;
select avg(tournament_level) from matches group by winner_id;
select avg(tournament_level) from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id group by t1.winner_id;
select max(t1.rank) from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id;
select max(t1.ranking) from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id;
select count(distinct country_code) from players;
select count(distinct country_code) from players;
select count(distinct t1.loser_name) from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id;
select count(distinct t1.loser_name) from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id;
select tourney_name from matches group by tourney_name having count(*)  >  10;
select tourney_name from matches group by tourney_name having count(*)  >  10;
select t1.winner_name from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id where t2.tournament_name  =  "2013" intersect select t1.winner_name from matches as t1 join rankings as t2 on
select t1.first_name,  t1.last_name from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id where t2.ranking_date between '2013-01-01' and '2016-12-31'
select count(*) from matches where year  =  2013 or year  =  2016;
select count(*) from matches where year  =  2013 or year  =  2016;
select t1.country_code,  t1.first_name from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id where t2.tourney_name  =  "australian open" intersect select t1.country_code 
select t1.first_name,  t2.country_code from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id where t1.tourney_name  =  "wta" intersect select t1.first_name,
select first_name,  country_code from players order by birth_date desc limit 1;
select first_name,  country_code from players order by birth_date desc limit 1;
select first_name,  last_name from players order by birth_date;
select first_name,  last_name from players order by birth_date;
select t1.first_name,  t1.last_name from players as t1 join matches as t2 on t1.player_id  =  t2.loser_id where t2.hand  =  'l' order by t2.tourney_date;
select first_name,  last_name from players where hand  =  'left';
select t1.first_name,  t1.country_code from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.player_id order by count(*) desc limit 1;
select t1.first_name,  t1.country_code from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.player_id order by count(*) desc limit 1;
select year from matches group by year order by count(*) desc limit 1;
select year from matches group by year order by count(*) desc limit 1;
select t1.winner_name,  t1.winner_rank_points from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id group by t1.loser_id order by count(*) desc limit 1;
select t1.winner_name,  sum(t2.rank_points) from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id group by t1.loser_id order by count(*) desc limit 1;
select t1.winner_name from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id where t2.tour  =  "australian open" order by t2.ranking desc limit 1;
select t1.winner_name from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id where t2.tournament_name  =  "australian open" order by t2.rank descending limit 1;
select t1.loser_name,  t2.winner_name from matches as t1 join rankings as t2 on t1.loser_id  =  t2.player_id group by t1.loser_id order by sum(minutes) desc limit 1;
select t1.winner_name,  t2.loser_name from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id group by t1.match_num order by max(t1.minutes) limit 1;
select avg(t1.ranking),  t2.first_name from rankings as t1 join players as t2 on t1.player_id  =  t2.player_id;
select t1.first_name,  avg(t2.ranking) from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id;
select t1.first_name,  sum(t2.ranking_points) from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id group by t1.first_name;
select t1.first_name,  sum(t2.ranking_points) from players as t1 join rankings as t2 on t1.player_id  =  t2.player_id;
select country_code,  count(*) from players group by country_code;
select country_code,  count(*) from players group by country_code;
select country_code from players group by country_code order by count(*) desc limit 1;
select country_code from players order by count(*) desc limit 1;
select country_code from players group by country_code having count(*)  >  50;
select country_code from players group by country_code having count(*)  >  50;
select tour from rankings group by ranking_date;
select tour from rankings group by tour order by tour limit 1;
select year,  count(*) from matches group by year;
select count(*),  year from matches group by year;
select winner_name,  winner_rank from matches group by winner_age order by winner_rank limit 3;
select t1.first_name,  t1.last_name,  winner_rank from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id group by t1.winner_id order by t1.winner_age limit 3;
select count(distinct winner_hand) from matches as t1 join players as t2 on t1.loser_id  =  t2.player_id where t2.hand  =  "left" group by t1.loser_id;
select count(*) from matches as t1 join players as t2 on t1.loser_id  =  t2.player_id where t2.hand  =  "left handed";
select t1.first_name,  t1.last_name,  t1.birth_date from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id group by t1.winner_id order by sum(t2.ranking)
select t1.first_name,  t1.last_name,  t1.birth_date from matches as t1 join rankings as t2 on t1.winner_id  =  t2.player_id group by t1.winner_id order by sum(t2.winner_
select count(*),  hand from players group by hand;
select hand,  count(*) from players group by hand;
select count(*) from battle where lost_in_battle  =  "captured";
select name,  tonnage from ship order by tonnage desc;
select name,  date,  result from battle;
select max(killed),  min(killed) from death;
select avg(injured) from death group by caused_by_ship_id;
select t1.killed,  t2.injured from death as t1 join ship as t2 on t1.caused_by_ship_id  =  t2.id where t2.tonnage  =  't';
select name,  result from battle where bulgarian_commander!= "boril";
select distinct id,  name from battle where ship_type  =  "brig";
select t1.id,  t1.name from battle as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id group by t1.id having count(*)  >  10;
select t1.id,  t1.name from battle as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id group by t1.id order by sum(t2.injured) desc limit 1;
select distinct t1.name from battle as t1 join death as t2 on t1.id  =  t2.caused_by_ship_id where t2.bulgarian_commander  =  'kaloyan' intersect select t1.name from battle as t1 join death as t
select count(distinct result) from battle;
select count(*) from battle where lost_in_battle is null and tonnage  =  225;
select t1.name,  t1.date from battle as t1 join ship as t2 on t1.lost_in_battle  =  t2.id where t2.name  =  "hms atalanta" intersect select t1.name,  t1.date from
select name,  result from battle where id not in (select id from death);
select note from death where contains(note, 'east');
select * from addresses where line_1  =  'line 1' and line_2  =  'line 2';
select line_1,  line_2 from addresses;
select count(*) from courses;
select count(*) from courses;
select t1.course_description from courses as t1 join other_address_details as t2 on t1.course_id  =  t2.course_id join transcript_contents as t3 on t3.transcript_id  =  t2.transcript_id join student_enrolment
select course_description from courses where course_name  =  "math";
select t1.zip_postcode from addresses as t1 join cities as t2 on t1.city  =  t2.city where t2.city  =  "port chelsea";
select zip_postcode from addresses where line_1  =  "port chelsea";
select t1.department_name,  t1.department_id from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id group by t1.department_name order by count(*) desc limit 1;
select department_name,  department_id from degree_programs group by department_id order by count(*) desc limit 1;
select count(*) from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id group by t1.department_id;
select count(distinct department_id) from degree_programs;
select count(distinct degree_summary_name) from degree_programs;
select count(distinct degree_program_id) from degree_programs;
select count(*) from degree_programs where department_name  =  "engineering";
select count(*) from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id where t2.department_name  =  "engineering";
select section_name,  section_description from sections;
select section_name,  section_description from sections;
select course_name,  course_id from courses group by course_id having count(*)  <=  2;
select course_name,  course_id from courses where course_name like '%' or course_description like '%' group by course_name having count(*)  <  2;
select section_name from sections order by section_name desc;
select section_name from sections order by section_name asc;
select t1.semester_name,  t1.semester_id from semesters as t1 join student_enrolment_courses as t2 on t1.semester_id  =  t2.semester_id group by t1.semester_name order by count(*) desc
select t1.semester_name,  t1.semester_id from semesters as t1 join student_enrolment_courses as t2 on t1.semester_id  =  t2.semester_id group by t1.semester_id order by count(*) desc
select t1.department_description from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id where t2.degree_summary_name like "%the computer%";
select t1.department_description from departments as t1 join degree_programs as t2 on t1.department_id  =  t2.department_id where t2.degree_summary_name like "%computer%";
select t1.first_name,  t1.middle_name,  t1.last_name,  t2.student_enrolment_id from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment
select t1.first_name,  t1.middle_name,  t1.last_name,  t2.student_course_id from students as t1 join student_enrolment_courses as t2 on t1.student_id  =  t2.student_
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id where t2.degree_program_id  =  '
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join degree_programs as t2 on t1.degree_program_id  =  t2.degree_program_id where t2.degree_summary_name  
select t1.degree_summary_name from degree_programs as t1 join student_enrolment_courses as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_summary_name order by count(*) desc limit 1;
select t1.degree_summary_name from degree_programs as t1 join student_enrolment_courses as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_summary_name order by count(*) desc limit 1;
select t1.degree_program_id,  t1.degree_summary_name from degree_programs as t1 join student_enrolment_courses as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_program
select t1.degree_program_id,  t2.degree_summary_name from degree_programs as t1 join student_enrolment_courses as t2 on t1.degree_program_id  =  t2.degree_program_id group by t1.degree_program
select t1.student_id,  t1.first_name,  t1.middle_name,  t1.last_name,  count(*) from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrol
select t1.first_name,  t1.middle_name,  t1.last_name,  count(*) from student_enrolment as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.
select semester_name from semesters where semester_id not in (select semester_id from student_enrolment);
select semester_name from semesters where semester_id  =  (select semester_id from student_enrolment_courses group by semester_id having count(*)  =  0);
select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id where t2.student_enrolment_id is not null;
select course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id where t2.student_id is not null;
select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id group by t1.course_name order by count(*) desc limit 1;
select t1.course_name from courses as t1 join student_enrolment_courses as t2 on t1.course_id  =  t2.course_id group by t1.course_name order by count(*) desc limit 1;
select t1.last_name from students as t1 join student_enrolment_courses as t2 on t1.student_id  =  t2.student_enrolment_id where t2.state_province_county  =  'north carolina' and t1.current
select t1.last_name from students as t1 join addresses as t2 on t1.current_address_id  =  t2.address_id where t2.state_province_county  =  'north carolina' except select t1.last_name from students as t1 join
select t1.transcript_date,  t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id group by t1.transcript_id having count(*)  
select t1.transcript_date,  t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id group by t1.transcript_id having count(*)  
select t1.cell_mobile_number from students as t1 join addresses as t2 on t1.current_address_id  =  t2.address_id where t2.first_name  =  "timmothy" and t2.last_name  =  "ward";
select t1.cell_mobile_number from students as t1 join student_enrolment_courses as t2 on t1.student_id  =  t2.student_enrolment_id where t2.first_name  =  "timmothy" and t2.last_name
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment on t1.student_id  =  student_enrolment_id order by student_enrolment_id asc limit 1;
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment_courses as t2 on t1.student_id  =  t2.student_enrolment_id where t2.student_
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment_courses as t2 on t1.student_id  =  t2.student_id where t2.student_course_id  
select t1.first_name,  t1.middle_name,  t1.last_name from students as t1 join student_enrolment_courses as t2 on t1.student_id  =  t2.student_enrolment_id where t2.student_
select t1.first_name from addresses as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id join student_enrolment_courses as t3 on t2.student_enrolment_id  =  t3.student_
select t1.first_name from students as t1 join addresses as t2 on t1.current_address_id  =  t2.address_id where t2.address_id!= t1.permanent_address_id;
select t1.address_id,  concat(t1.line_1,  t1.line_2,  t1.line_3) from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.current_address
select t1.address_id,  t1.line_1,  t1.line_2 from addresses as t1 join student_enrolment as t2 on t1.address_id  =  t2.current_address_id group by t1.address_id order by count
select avg(t1.transcript_date) from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id;
select avg(t1.transcript_date) from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id;
select t1.transcript_date,  t2.other_details from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id;
select t1.transcript_date,  t2.other_details from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id;
select count(*) from transcripts as t join student_enrolment_courses as s on t.student_enrolment_id  =  s.student_enrolment_id where s.student_course_id is null;
select count(*) from transcripts;
select t1.transcript_date from transcripts as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id group by t1.transcript_date order by t1.transcript_date desc
select t1.transcript_date from transcripts as t1 join student_enrolment_courses as t2 on t1.student_enrolment_id  =  t2.student_enrolment_id where t2.student_course_id  =  -1;
select count(*) from student_enrolment_courses as t1 join transcripts as t2 on t1.student_course_id  =  t2.student_course_id group by t1.student_course_id;
select t1.course_id,  count(*) from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id group by t1.course_id;
select t1.transcript_date,  t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id group by t1.transcript_date order by count(*)
select t1.transcript_date,  t1.transcript_id from transcripts as t1 join student_enrolment_courses as t2 on t1.student_course_id  =  t2.student_course_id group by t1.transcript_id order by count(*)
select t1.semester_name from students as t1 join student_enrolment as t2 on t1.student_id  =  t2.student_id join degrees as t3 on t2.degree_program_id  =  t3.degree_program_id where t3.degree
select t1.semester_id from semesters as t1 join student_enrolment_courses as t2 on t1.semester_id  =  t2.semester_id where t2.student_course_id in (masters,bachelors);
select count(distinct address_id) from students;
select distinct address_id from students where permanent_address_id  =  (select other_address_details from addresses where line_1  =  "line_1" and line_2  =  "line_2" and line_3  =  "line_3" and city  =  "city
select first_name,  last_name from students order by first_name,  last_name desc;
select other_details from students order by other_details desc;
select section_name from sections as t join student_enrolment_courses as s on t.section_id  =  s.student_enrolment_id;
select section_description from sections where section_name  =  "h";
select t1.first_name from students as t1 join addresses as t2 on t1.current_address_id  =  t2.address_id where t2.country  =  "haiti" or t2.cell_mobile_number  =  "09700166582";
select t1.first_name from students as t1 join student_enrolment_courses as t2 on t1.student_id  =  t2.student_enrolment_id where t2.permanent_address_id  =  "haiti" or t2.cell_mobile
select title from cartoon order by title;
select title from cartoon order by title asc;
select t1.title from cartoon as t1 join tv_series as t2 on t1.channel  =  t2.channel where t2.directed_by  =  "ben jones";
select t1.title from cartoon as t1 join director as t2 on t1.directed_by  =  t2.id where t2.name  =  "ben jones";
select count(*) from cartoon where directed_by  =  "joseph kuhr";
select count(*) from cartoon where directed_by  =  "joseph kuhr";
select title,  directed_by from cartoon order by original_air_date;
select title,  directed_by from cartoon order by air_date;
select t1.title from cartoon as t1 join director as t2 on t1.directed_by  =  t2.id where t2.name in ("ben jones", "brandon vietti");
select title from cartoon where directed_by  =  "ben jones" or directed_by  =  "brandon vietti";
select country,  count(*) from tv_channel group by country order by count(*) desc limit 1;
select country,  count(*) from tv_channel group by country order by count(*) desc limit 1;
select count(distinct series_name),  count(distinct content) from tv_channel;
select count(distinct series_name),  count(distinct content) from tv_channel;
select content from tv_channel where series_name  =  "sky radio";
select content from tv_series where channel  =  "sky radio";
select hight_definition_tv from tv_channel where series_name  =  "sky radio";
select package_option from tv_channel where series_name  =  "sky radio";
select count(*) from tv_channel where language  =  'english';
select count(*) from tv_channel where language  =  "english";
select language,  count(*) from tv_channel group by language order by count(*) desc limit 1;
select language,  count(*) from tv_channel group by language having count(*)  =  (select min(count) from tv_channel);
select language,  count(*) from tv_channel group by language;
select count(*),  language from tv_channel group by language;
select t2.series_name from tv_series as t1 join cartoon as t2 on t1.channel  =  t2.id where t1.title  =  "the rise of the blue beetle!";
select t2.series_name from tv_series as t1 join cartoon as t2 on t1.channel  =  t2.id where t1.title  =  "the rise of the blue beetle";
select t1.title from tv_series as t1 join cartoon as t2 on t1.channel  =  t2.id where t2.series_name  =  "sky radio";
select t1.title from tv_series as t1 join cartoon as t2 on t1.channel  =  t2.id where t2.series_name  =  "sky radio";
select episode from tv_series order by 18_49_rating_share;
select episode from tv_series order by 18_49_rating_share;
select t1.episode,  t1.rating from tv_series as t1 join tv_series as t2 on t1.channel  =  t2.channel where t2.rating  =  (select max(t2.rating) from tv_series);
select episode from tv_series order by 18_49_rating_share desc limit 3;
select min(share),  max(share) from tv_series;
select max(share),  min(share) from tv_series;
select t2.air_date from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t1.title  =  "a love of a lifetime";
select air_date from tv_series where episode  =  "a love of a lifetime";
select weekly_rank from tv_series where episode  =  "a love of a lifetime";
select weekly_rank from tv_series where episode  =  "a love of a lifetime";
select t2.series_name from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t1.episode  =  "a love of a lifetime";
select t2.series from tv_series as t1 join tv_series as t2 on t1.id  =  t2.id where t1.episode  =  "a love of a lifetime";
select t1.episode from tv_series as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.series_name  =  "sky radio";
select episode from tv_series where channel  =  "sky radio";
select count(*),  directed_by from cartoon group by directed_by;
select directed_by,  count(*) from cartoon group by directed_by;
select production_code,  channel from cartoon order by production_code,  channel desc limit 1;
select production_code,  channel from cartoon order by original_air_date desc limit 1;
select t2.series_name,  t1.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.hight_definition_tv  =  'high definition tv';
select t1.package_option,  t2.series_name from tv_series as t1 join tv_channel as t2 on t1.channel  =  t2.id where t2.content  =  "high definition tv";
select t2.country from tv_channel as t1 join cartoon as t2 on t1.channel  =  t2.id where t1.written_by  =  "todd casey";
select country from tv_series where written_by  =  "todd casey";
select country from tv_channel where original_air_date !=  (select original_air_date from cartoon where directed_by  =  "todd casey") and country !=  "usa";
select country from tv_channel except select country from tv_series where original_air_date  =  '1999-01-01' and written_by  =  'todd casey';
select t2.series_name,  t1.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t1.directed_by  =  "ben jones" intersect select t1.directed_by,  t1.country
select t2.series_name,  t1.country from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t1.directed_by  =  "ben jones" intersect select t2.series_name,  t1.country
select t1.pixel_aspect_ratio_par,  t2.country from tv_channel as t1 join tv_channel as t2 on t1.id  =  t2.id where t1.language !=  "english" and t2.country !=  "english";
select t1.pixel_aspect_ratio_par,  t2.country from tv_channel as t1 join tv_channel as t2 on t1.id  =  t2.id where t1.language !=  "english";
select t1.id from tv_channel as t1 join tv_channel as t2 on t1.id  =  t2.id group by t1.country having count(*)  >  2;
select t1.id from tv_channel as t1 join tv_channel as t2 on t1.id  =  t2.id group by t1.id having count(*)  >  2;
select t2.id from tv_channel as t1 join cartoon as t2 on t1.channel  =  t2.id where t1.directed_by !=  "ben jones";
select id from tv_channel where directed_by !=  'ben jones';
select t2.package_option from tv_channel as t1 join cartoon as t2 on t1.id  =  t2.channel where t1.directed_by !=  "ben jones";
select distinct t2.package_option from tv_channel as t1 join tv_series as t2 on t1.id  =  t2.channel where t1.directed_by !=  'ben jones';
select count(*) from poker_player;
select count(*) from poker_player;
select earnings from poker_player order by final_table_made desc;
select t2.earnings from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t1.earnings desc;
select final_table_made,  best_finish from poker_player;
select final_table_made,  best_finish from poker_player;
select avg(earnings) from poker_player;
select avg(earnings) from poker_player;
select money_rank from poker_player order by earnings desc limit 1;
select money_rank from poker_player order by earnings desc limit 1;
select max(final_table_made) from poker_player where earnings  <  200000;
select max(final_table_made) from poker_player where earnings  <  200000;
select name from poker_player;
select name from poker_player;
select name from poker_player where earnings  >  300000;
select name from poker_player where earnings  >  300000;
select name from poker_player order by final_table_made asc;
select name from poker_player order by best_finish;
select t1.birth_date from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t2.earnings desc limit 1;
select t1.birth_date from poker_player as t1 join people as t2 on t1.people_id  =  t2.people_id order by t2.earnings desc limit 1;
select t1.money_rank from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t2.height desc limit 1;
select t1.money_rank from people as t1 join poker_player as t2 on t1.people_id  =  t2.people_id order by t2.height desc limit 1;
select avg(earnings) from poker_player where height  >  200;
select avg(earnings) from poker_player where height  >  200;
select name from poker_player order by earnings desc;
select name from poker_player order by earnings desc;
select nationality,  count(*) from people group by nationality;
select nationality,  count(*) from people group by nationality;
select nationality from people group by nationality order by count(*) desc limit 1;
select nationality from people group by nationality order by count(*) desc limit 1;
select nationality from people group by nationality having count(*)  >=  2;
select nationality from people group by nationality having count(*)  >=  2;
select name,  birth_date from people order by name asc;
select name,  birth_date from people order by name;
select name from people where nationality!= "russia";
select name from people where nationality!= 'russian';
select name from people where people_id not in (select people_id from poker_player);
select name from people where nationality !=  'poker player';
select count(distinct nationality) from people;
select count(distinct nationality) from people;
select count(*) from area_code_state;
select contestant_number,  contestant_name from contestants order by contestant_name desc;
select phone_number,  contestant_number,  state from votes;
select max(area_code),  min(area_code) from area_code_state;
select max(created) from votes where state  =  'ca';
select contestant_name from contestants except select t1.contestant_name from contestants as t1 join area_code_state as t2 on t1.contestant_number  =  t2.contestant_number where t2.contestant_name !=  'jessie alloway
select distinct state,  created from votes;
select t1.contestant_number,  t1.contestant_name from votes as t1 join contestants as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number having count(*)  >=  2
select t1.contestant_number,  t1.contestant_name from votes as t1 join contestants as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number order by count(*) desc limit 1
select count(*) from votes where state  =  'ny' or state  =  'ca';
select count(*) from contestants where contestant_number not in (select contestant_number from votes);
select t1.area_code from votes as t1 join area_code_state as t2 on t1.contestant_number  =  t2.contestant_number group by t1.contestant_number order by count(*) desc limit 1;
select t1.phone_number,  t1.state,  t1.contestant_number from votes as t1 join area_code_state as t2 on t1.contestant_number  =  t2.contestant_number where t2.contestant_name
select t1.area_code from area_code_state as t1 join votes as t2 on t1.contestant_number  =  t2.contestant_number where t2.contestant_name  =  "tabatha gehling" intersect select t1.area_code
select contestant_name from contestants where contestant_name like '%al%';
select name from country where continent  =  "independent" and year(indepyear)  >  1950;
select name from country where continent  =  "continent" and year(founded)  >  1950;
select count(*) from country where governmentform  =  "republic";
select count(*) from country where governmentform  =  "republic";
select sum(surfacearea) from country where continent  =  "caribbean";
select sum(surfacearea) from country where continent  =  "carribean";
select continent from country where continent  =  'anguilla';
select continent from country where continent  =  'anguilla';
select region from city where name  =  "kabul";
select region from country where name  =  "kabul";
select isofficial from countrylanguage order by percentage desc limit 1;
select isofficial from countrylanguage where countrycode  =  "aruba" order by percentage limit 1;
select population,  lifeexpectancy from country where name  =  "brazil";
select population,  lifeexpectancy from country where name  =  'brazil';
select region,  population from country where code  =  'angola';
select region,  population from country where continent  =  "africa" and name  =  "angola";
select avg(lifeexpectancy) from country where continent  =  "central africa";
select avg(lifeexpectancy) from country where continent  =  "central africa";
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  "asia" order by t2.lifeexpectancy desc limit 1;
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  "asia" order by t2.percentage limit 1;
select sum(population),  max(gnp) from country where continent  =  "asia";
select continent,  max(gnp),  region from country where continent  =  "asia" group by region order by max(gnp) desc limit 1;
select avg(lifeexpectancy) from country where continent  =  "africa" and governmentform  =  "republic" group by country;
select avg(lifeexpectancy) from country where continent  =  "africa" and governmentform  =  "republic";
select sum(surfacearea) from continent where continent  =  "asia" intersect select sum(surfacearea) from continent where continent  =  "europe";
select sum(surfacearea) from country where continent  =  "asia" or continent  =  "europe";
select count(*) from city as t1 join city as t2 on t1.id  =  t2.id where t1.name  =  "gelderland" and t2.district  =  "district";
select sum(population) from city as t1 join city as t2 on t1.id  =  t2.id where t1.name  =  "gelderland" and t2.district  =  "district";
select avg(gnp),  sum(population) from country where governmentform  =  "us territory";
select avg(gnp),  sum(population) from country where continent  =  "us" group by continent;
select count(distinct isofficial) from countrylanguage;
select count(distinct isofficial) from countrylanguage;
select count(distinct governmentform) from country where continent  =  "africa";
select count(distinct governmentform) from country where continent  =  "africa";
select sum(isofficial) from countrylanguage where countrycode  =  "aruba";
select count(*) from countrylanguage where countrycode  =  "aruba";
select count(*) from countrylanguage where countrycode  =  "afghanistan";
select count(*) from countrylanguage where isofficial  =  "afghanistan";
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t2.language order by count(*) desc limit 1;
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.name order by count(*) desc limit 1;
select continent from countrylanguage group by continent order by sum(isofficial) desc limit 1;
select continent from countrylanguage group by continent order by sum(isofficial) desc limit 1;
select count(distinct countrylanguage.isofficial) from countrylanguage as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t1.isofficial  =  "english" intersect select t2.isofficial from countrylanguage as t1 join countrylanguage as t
select count(distinct country) from countrylanguage where isofficial  =  "english" intersect select count(distinct country) from countrylanguage where isofficial  =  "dutch";
select name from countrylanguage where isofficial  =  "english" intersect select name from countrylanguage where isofficial  =  "french";
select name from countrylanguage where isofficial  =  "english" intersect select name from countrylanguage where isofficial  =  "french";
select name from countrylanguage where isofficial  =  "english" intersect select name from countrylanguage where isofficial  =  "french";
select name from country where isofficial  =  "english" intersect select name from country where isofficial  =  "french";
select count(distinct continent) from countrylanguage where language  =  "chinese";
select count(distinct continent) from countrylanguage where language  =  "chinese";
select region from country where localname  =  "english" or localname  =  "dutch";
select region from country where localname like "%dutch%" or localname like "%english%";
select country from countrylanguage where isofficial  =  'english' intersect select country from countrylanguage where isofficial  =  'dutch';
select country from countrylanguage where isofficial  =  'english' intersect select country from countrylanguage where isofficial  =  'dutch';
select language from countrylanguage where continent  =  "asia" order by percentage desc limit 1;
select language from countrylanguage where continent  =  "asia" group by language order by count(*) desc limit 1;
select distinct isofficial from countrylanguage where governmentform  =  "republic" group by isofficial having count(*)  =  1;
select distinct isofficial from countrylanguage where governmentform  = 'republic' group by isofficial having count(*)  =  1;
select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial  =  "english" order by t1.population desc limit 1;
select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial  =  "english" order by population desc limit 1;
select name,  population,  lifeexpectancy from country where continent  =  "asian" order by surfacearea desc limit 1;
select name,  population,  lifeexpectancy from country where continent  =  "asia" order by population desc limit 1;
select avg(lifeexpectancy) from country where isofficial !=  "english";
select avg(lifeexpectancy) from country where isofficial !=  "english";
select sum(population) from country where continent !=  "english" group by country;
select count(*) from country where continent !=  "english" and localname like "%english%";
select isofficial from countrylanguage where headofstate  =  "beatrix";
select isofficial from countrylanguage where headofstate  =  "beatrix";
select sum(t1.isofficial) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t1.founded  <  1930;
select sum(t1.percentage) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.headofstate  =  "founded before 1930" group by t2.countrycode;
select country from country where surfacearea  >  (select max(surfacearea) from country where continent  =  'europe');
select country from country where surfacearea  >  (select max(surfacearea) from country europe);
select country from country where continent  =  'africa' except select country from countrylanguage where countrycode  =  'asia';
select country from country where continent  =  "africa" except select country from country where continent  =  "asia";
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  "asian" group by t1.name having sum(t2.percentage)  >  (select sum(t2.percentage
select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  "asian" group by t1.name having sum(t2.percentage)  >  select t2.percentage from countrylanguage
select countrycode from country where localname like "%english%" except select countrycode from countrylanguage;
select countrycode from country where isofficial !=  'english';
select countrycode from countrylanguage where isofficial !=  'english';
select countrycode from countrylanguage where isofficial !=  'english';
select distinct countrycode from countrylanguage where language !=  "english" and governmentform !=  "republic" order by countrycode;
select distinct countrycode from countrylanguage where language !=  "english" intersect select distinct countrycode from countrylanguage where governmentform !=  "republic";
select t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial !=  "english" and t2.countrycode  =  country.code;
select name from city where isofficial !=  "english" and continent  =  "europe";
select distinct t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial  =  "asian" and t2.language  =  "chinese";
select distinct t1.name from city as t1 join countrylanguage as t2 on t1.countrycode  =  t2.countrycode where t2.isofficial  =  "asian" and t2.language  =  "chinese";
select t1.name,  t1.indepyear,  t1.surfacearea from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code order by population desc limit 1;
select t1.name,  t1.yearofindependence,  t1.surfacearea from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code order by population desc limit 1;
select t1.name,  t1.population,  t2.headofstate from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code order by surfacearea desc limit 1;
select name,  population,  headofstate from country order by surfacearea desc limit 1;
select t1.name,  count(*) from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code having count(*)  >=  3;
select t1.name,  count(*) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code group by t2.code having count(*)  >  2;
select count(*),  district from city group by district order by sum(population) desc limit 1;
select district,  count(*) from city group by district having population  >  (select avg(population) from city);
select governmentform,  sum(population) from countrygroup where lifeexpectancy  >  72 group by governmentform;
select governmentform,  sum(population) from country where governmentform  =  "parliamentary" group by governmentform order by avg(lifeexpectancy) desc limit 1;
select continent,  avg(lifeexpectancy),  sum(population) from country group by continent having avg(lifeexpectancy)  <  72;
select continent,  sum(population),  avg(lifeexpectancy) from country where lifeexpectancy  <  72 group by continent;
select name,  surfacearea from country order by surfacearea desc limit 5;
select name,  surfacearea from country order by surfacearea desc limit 5;
select name from country order by population limit 3;
select name from country order by population desc limit 3;
select name from country where population  <  (select min(population) from country);
select name from country order by population desc limit 3;
select count(*) from country where continent  =  "asia";
select count(*) from country where continent  =  "asia";
select name from country where continent  =  'europe' and population  =  80000;
select name from country where continent  =  "europe" and population  =  80000;
select sum(population),  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000;
select sum(population),  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000 group by continent;
select name from city where population between 160000 and 900000;
select name from city where population between 160000 and 900000;
select isofficial from countrylanguage group by isofficial order by count(*) desc limit 1;
select isofficial from countrylanguage group by isofficial order by count(*) desc limit 1;
select t1.language,  max(t2.percentage) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code group by t1.language order by sum(t2.percentage) desc limit 1;
select t1.countrycode,  t2.language from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t1.code having count(*)  >  (select min(count) from countrylanguage);
select sum(t1.percentage) from countrylanguage as t1 join country as t2 on t1.countrycode  =  t2.code where t2.isofficial like "%spanish%" group by t2.isofficial order by sum(t1.percentage) desc limit 1;
select count(*) from countrylanguage where isofficial  =  "español" group by countrycode;
select t1.countrycode from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode group by t2.countrycode order by sum(t2.percentage) desc limit 1;
select t1.code from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.isofficial  =  'español' group by t1.code;
select count(*) from conductor;
select count(*) from conductor;
select name from conductor order by age asc;
select name from conductor order by age;
select name from conductor where nationality!= "usa";
select name from conductor where nationality!= 'usa';
select record_company from orchestra order by year_of_founded desc;
select record_company from orchestra order by year_of_founded desc;
select avg(attendance) from show;
select avg(attendance) from show;
select max(share),  min(share) from performance where type !=  "live final";
select max(share),  min(share) from performance where type !=  "live final";
select count(distinct nationality) from conductor;
select count(distinct nationality) from conductor;
select name from conductor order by year_of_work desc;
select name from conductor order by year_of_work desc;
select name from conductor order by year_of_work desc limit 1;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name order by count(*) desc limit 1;
select t1.name,  t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id;
select t1.name,  t2.orchestra from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name having count(*)  >  1;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name having count(*)  >  1;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name order by count(*) desc limit 1;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id group by t1.name order by count(*) desc limit 1;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id where t2.year_of_founded  >  2008;
select t1.name from conductor as t1 join orchestra as t2 on t1.conductor_id  =  t2.conductor_id where t2.year_of_founded  >  2008;
select distinct record_company,  count(*) from orchestra group by record_company;
select count(*),  record_company from orchestra group by record_company;
select major_record_format from orchestra order by count desc;
select major_record_format from orchestra order by count(*) desc;
select record_company from orchestra group by record_company order by count(*) desc limit 1;
select record_company from orchestra group by record_company order by count(*) desc limit 1;
select name from orchestra where orchestra_id not in (select orchestra_id from performance);
select orchestra from orchestra where orchestra_id not in (select orchestra_id from performance);
select t2.record_company from orchestra as t1 join record_company as t2 on t1.record_company  =  t2.record_company where t1.year_of_founded  <  2003 intersect select t2.record_company from orchestra as t1 join record_company as
select record_company from orchestra where year_of_founded  <  2003 intersect select record_company from orchestra where year_of_founded  >  2003;
select count(*) from orchestra where major_record_format  =  "cd" or major_record_format  =  "dvd";
select count(*) from orchestra where record_format  =  "cd" or record_format  =  "dvd";
select year_of_founded from orchestra where orchestra_id in (select orchestra_id from orchestra where count(*)  >  1);
select year_of_founded from orchestra where orchestra_id in (select orchestra_id from performance group by orchestra_id having count(*)  >  1);
select count(*) from highschooler;
select count(*) from highschooler;
select name,  grade from highschooler;
select name,  grade from highschooler;
select grade from highschooler;
select grade from highschooler;
select grade from highschooler where id  =  'kyle';
select t2.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.liked_id where t1.name  =  'kyle';
select name from highschooler where grade  =  10;
select name from highschooler where grade  =  10;
select t1.id from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id where t2.name  =  "kyle";
select t1.id from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t2.name  =  "kyle";
select count(*) from highschooler where grade  =  9 or grade  =  10;
select count(*) from highschooler where grade  =  '9' or grade  =  '10';
select count(*),  grade from highschooler group by grade;
select count(*),  grade from highschooler group by grade;
select grade from highschooler group by grade order by count(*) desc limit 1;
select t1.grade from highschooler as t1 join likes as t2 on t1.id  =  t2.liked_id group by t1.grade order by count(*) desc limit 1;
select grade from highschooler where grade  >=  4;
select grade from highschooler where grade  >=  4;
select t1.student_id,  count(*) from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id group by t1.student_id;
select count(*),  t1.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id group by t1.name;
select t1.name,  count(*) from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.name;
select t1.name,  count(*) from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.name;
select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.id order by count(*) desc limit 1;
select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.id order by count(*) desc limit 1;
select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.name having count(*)  >=  3;
select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.name having count(*)  >=  3;
select t1.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t2.name  =  "kyle";
select t2.name from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t1.student_id  =  "kyle";
select count(*) from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t2.name  =  'kyle';
select count(*) from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id where t1.student_id  =  "kyle";
select student_id from highschooler where id not in (select student_id from friend);
select id from highschooler where id not in (select student_id from friend);
select name from highschooler where id not in (select student_id from friend);
select name from highschooler where id not in (select student_id from friend);
select t1.id from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id join likes as t3 on t2.liked_id  =  t3.liked_id where t3.liked_id !=  1;
select t1.student_id from friend as t1 join highschooler as t2 on t1.friend_id  =  t2.id join likes as t3 on t2.id  =  t3.liked_id where t3.liked_id  =  t1.student_id
select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id join likes as t3 on t2.liked_id  =  t3.liked_id where t3.liked_id is not null;
select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id join likes as t3 on t2.liked_id  =  t3.liked_id where t3.liked_id  =  t1.id;
select t1.name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.student_id group by t1.id;
select count(*),  t1.student_id from likes as t1 join highschooler as t2 on t1.liked_id  =  t2.id group by t1.student_id;
select t1.name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.liked_id group by t1.name;
select t1.name,  count(*) from highschooler as t1 join likes as t2 on t1.id  =  t2.liked_id group by t1.name having count(*)  >  0;
select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.liked_id group by t1.name order by count(*) desc limit 1;
select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.liked_id group by t1.name order by count(*) desc limit 1;
select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.liked_id group by t1.name having count(*)  >=  2;
select t1.name from highschooler as t1 join likes as t2 on t1.id  =  t2.liked_id group by t1.name having count(*)  >=  2;
select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id where t2.grade  >  5 group by t1.name having count(*)  >=  2;
select t1.name from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id where t2.grade  >  5 group by t1.name having count(*)  >=  2;
select count(*) from likes as t1 join highschooler as t2 on t1.liked_id  =  t2.id where t2.name  =  "kyle";
select count(*) from likes as t1 join highschooler as t2 on t1.liked_id  =  t2.id where t2.name  =  "kyle";
select avg(grade) from highschooler where id not in (select student_id from friend);
select avg(grade) from highschooler as t1 join friend as t2 on t1.id  =  t2.friend_id group by t1.id;
select min(grade) from highschooler where id not in (select student_id from friend);
select grade from highschooler where id not in (select student_id from friend);
select city,  state from owners intersect select city,  state from professionals;
select t1.state,  t2.state from owners as t1 join professionals as t2 on t1.owner_id  =  t2.owner_id;
select avg(date_of_birth) from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id group by t1.dog_id;
select avg(date_of_birth) from treatments group by dog_id;
select t1.first_name,  t1.last_name,  t1.cell_number from professionals as t1 join owners as t2 on t1.professional_id  =  t2.owner_id where t2.home_phone like '%%indiana%' or t
select t1.first_name,  t1.last_name,  t1.cell_number from professionals as t1 join owners as t2 on t1.professional_id  =  t2.professional_id where t2.home_phone like '%%indiana%' or t
select t1.name from dogs as t1 join treatments as t2 on t1.dog_id  =  t2.dog_id where t2.cost_of_treatment  <  1000;
select t1.name from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t2.cost_of_treatment  <  1000;
select first_name from professionals intersect select first_name from owners;
select first_name from professionals intersect select first_name from owners;
select t1.professional_id,  t2.role_code,  t1.email_address from professionals as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code where t1.email_address is null;
select professional_id,  role_code,  email_address from professionals where professional_id not in ( select professional_id from treatments where treatment_type_code  =  'treatment' and dog_id  =   dogs.dog_id );
select t1.owner_id,  t1.first_name,  t1.last_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by count(*) desc limit 1;
select t1.owner_id,  t1.first_name,  t1.last_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by count(*) desc limit 1;
select t1.professional_id,  t2.role_code,  t1.first_name from professionals as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by t1.professional_id having count(*)
select t1.professional_id,  t2.role_code,  t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*)  >=  2;
select breed_name from breeds order by count(*) desc limit 1;
select t1.breed_name from breeds as t1 join dogs as t2 on t1.breed_code  =  t2.breed_code group by t1.breed_code order by count(*) desc limit 1;
select t1.owner_id,  t1.last_name from owners as t1 join treatments as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t2.cost_of_treatment) desc limit 1;
select t1.owner_id,  t1.last_name from owners as t1 join treatments as t2 on t1.owner_id  =  t2.owner_id group by t1.owner_id order by sum(t2.cost_of_treatment) desc limit 1;
select t1.treatment_type_description from treatment_types as t1 join treatments as t2 on t1.treatment_type_code  =  t2.treatment_type_code group by t1.treatment_type_description order by sum(t2.cost_of_treatment) desc limit 1
select treatment_type_description from treatment_types order by sum(cost_of_treatment) desc limit 1;
select owner_id,  zip_code from owners group by owner_id order by sum(charge_amount) desc limit 1;
select owner_id,  sum(charge_amount),  zip_code from owners group by owner_id order by sum(charge_amount) desc limit 1;
select t1.professional_id,  t2.cell_number from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*)  >=  2;
select t1.professional_id,  t2.cell_number from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id having count(*)  >=  2;
select t1.first_name,  t1.last_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where t2.cost_of_treatment  <  (select avg(cost_of_treatment) from treatments);
select t1.first_name,  t1.last_name from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id where cost_of_treatment  <  (select avg(cost_of_treatment) from treatments);
select t1.date_of_treatment,  t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id;
select t1.date_of_treatment,  t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id  =  t2.professional_id;
select t1.cost_of_treatment,  t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code;
select t1.cost_of_treatment,  t2.treatment_type_description from treatments as t1 join treatment_types as t2 on t1.treatment_type_code  =  t2.treatment_type_code;
select first_name,  last_name,  size_code from dogs join owners on dogs.owner_id  =  owners.owner_id;
select t1.first_name,  t1.last_name,  t1.size_code from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;
select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;
select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id;
select t1.name,  t2.date_of_treatment from breeds as t1 join treatments as t2 on t1.breed_code  =  t2.breed_code group by t1.breed_code order by count(*) desc limit 1;
select t1.name,  t2.date_of_treatment from breeds as t1 join treatments as t2 on t1.breed_code  =  t2.breed_code group by t1.breed_code having count(*)  =  1;
select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id where t1.home_state  =  "virginia";
select t1.first_name,  t2.name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id where t1.home_state  =  "virginia";
select date_of_birth,  date_departed from dogs where treatment_id in (select treatment_id from treatments);
select date_of_birth,  date_of_departed from dogs where dog_id in (select dog_id from treatments);
select t1.last_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id order by t2.date_of_birth desc limit 1;
select t1.last_name from owners as t1 join dogs as t2 on t1.owner_id  =  t2.owner_id order by t2.date_of_birth desc limit 1;
select email_address from professionals where home_phone like '%hawaii%' intersect select email_address from professionals where home_phone like '%wisconsin%';
select email_address from professionals where state  =  "hawaii" intersect select email_address from professionals where state  =  "wisconsin";
select date_of_birth,  date_departed from dogs;
select date_of_birth,  date_departed from dogs;
select count(*) from treatments group by dog_id;
select count(*) from treatments as t1 join dogs as t2 on t1.dog_id  =  t2.dog_id group by t1.treatment_type_code;
select count(*) from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.professional_id;
select count(*) from professionals as t1 join treatment_types as t2 on t1.role_code  =  t2.role_code group by t1.role_code;
select t1.role_code,  t2.street,  t1.city,  t1.state from professionals as t1 join owners as t2 on t1.professional_id  =  t2.owner_id where t2.home_phone like '%west%';
select first_name,  last_name,  street,  city,  state from professionals where street like '%west%';
select first_name,  last_name,  email_address from owners where state  =  "north";
select first_name,  last_name,  email_address from owners where street like '%north%';
select count(*) from dogs where age  <  (select avg(age) from dogs);
select count(*) from dogs where age  <  ( select avg(age) from dogs);
select sum(cost_of_treatment) from treatments group by treatment_id order by date_of_treatment desc limit 1;
select cost_of_treatment from treatments order by date_of_treatment desc limit 1;
select count(*) from dogs where dog_id not in (select dog_id from treatments);
select count(*) from dogs where dog_id not in (select dog_id from treatments);
select count(*) from owners where owner_id not in (select dog_id from dogs);
select count(*) from owners where owner_id not in (select owner_id from dogs);
select count(*) from professionals where professional_id not in (select owner_id from dogs);
select count(*) from professionals where professional_id not in (select owner_id from dogs);
select t2.name,  t2.age,  t2.weight from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t1.abandoned_yn  =  'y';
select t2.name,  t2.age,  t2.weight from dogs as t1 join owners as t2 on t1.owner_id  =  t2.owner_id where t1.abandoned_yn  =  'y';
select avg(date_of_birth) from dogs;
select avg(age) from dogs;
select date_of_birth from dogs order by date_of_birth asc limit 1;
select date_of_birth from dogs order by date_of_birth asc limit 1;
select charge_type,  sum(charge_amount) from charges group by charge_type;
select charge_type,  sum(charge_amount) from charges group by charge_type;
select sum(charge_amount) from charges group by charge_type order by sum(charge_amount) desc limit 1;
select charge_amount from charges group by charge_type order by sum(charge_amount) desc limit 1;
select professional_id,  email_address,  home_phone,  cell_number from professionals;
select email_address,  cell_number,  home_phone from professionals;
select distinct breed_code,  size_code from breeds;
select distinct breed_code,  size_code from breeds;
select t1.first_name,  t2.treatment_type_description from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id group by t1.first_name;
select t1.first_name,  t2.treatment_type_description from professionals as t1 join treatments as t2 on t1.professional_id  =  t2.professional_id;
select count(*) from singer;
select count(*) from singer;
select name from singer order by net_worth_millions asc;
select name from singer order by net_worth_millions asc;
select birth_year,  citizenship from singer;
select birth_year,  citizenship from singer;
select name from singer where citizenship!= "france";
select name from singer where citizenship!= 'french';
select name from singer where birth_year  =  1948 or birth_year  =  1949;
select name from singer where birth_year  =  1948 or birth_year  =  1949;
select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id order by t2.net_worth_millions desc limit 1;
select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id order by t2.highest_position desc limit 1;
select citizenship,  count(*) from singer group by citizenship;
select citizenship,  count(*) from singer group by citizenship;
select citizenship from singer group by citizenship order by count(*) desc limit 1;
select citizenship from singer group by citizenship order by count(*) desc limit 1;
select citizenship,  max(net_worth_millions) from singer group by citizenship;
select max(net_worth_millions) from singer where citizenship  =  'us';
select t1.title,  t2.name from song as t1 join singer as t2 on t1.singer_id  =  t2.singer_id;
select title,  name from song;
select distinct t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t2.sales  >  300000;
select distinct t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id where t2.sales  >  300000;
select name from singer where singer_id in (select singer_id from song);
select t1.name from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id group by t1.name having count(*)  >  1;
select t1.name,  sum(t2.sales) from singer as t1 join song as t2 on t1.singer_id  =  t2.singer_id;
select sum(t1.sales) from song as t1 join singer as t2 on t1.singer_id  =  t2.singer_id;
select name from singer where singer_id not in (select singer_id from song);
select name from singer where singer_id not in (select singer_id from song);
select citizenship from singer where birth_year  <  1945 intersect select citizenship from singer where birth_year  >  1955;
select citizenship from singer where birth_year  <  1945 intersect select citizenship from singer where birth_year  >  1955;
select count(*) from other_available_features;
select t2.feature_type_name from other_available_features as t1 join other_property_features as t2 on t1.feature_id  =  t2.feature_id where t1.feature_name  =  "aircon";
select property_type_description from properties where property_type_code  =  'c';
select t1.property_name from properties as t1 join other_property_features as t2 on t1.property_id  =  t2.property_id where t2.feature_id in (houses,apartments) group by t1.property_name having count(*)  >  1